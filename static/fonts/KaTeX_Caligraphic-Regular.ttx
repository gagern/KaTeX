<?xml version="1.0" encoding="UTF-8"?>
<ttFont sfntVersion="\x00\x01\x00\x00" ttLibVersion="3.3">

  <GlyphOrder>
    <!-- The 'id' attribute is only for humans; it is ignored when parsed. -->
    <GlyphID id="0" name=".notdef"/>
    <GlyphID id="1" name=".null"/>
    <GlyphID id="2" name="nonmarkingreturn"/>
    <GlyphID id="3" name="space"/>
    <GlyphID id="4" name="zero"/>
    <GlyphID id="5" name="one"/>
    <GlyphID id="6" name="two"/>
    <GlyphID id="7" name="three"/>
    <GlyphID id="8" name="four"/>
    <GlyphID id="9" name="five"/>
    <GlyphID id="10" name="six"/>
    <GlyphID id="11" name="seven"/>
    <GlyphID id="12" name="eight"/>
    <GlyphID id="13" name="nine"/>
    <GlyphID id="14" name="A"/>
    <GlyphID id="15" name="B"/>
    <GlyphID id="16" name="C"/>
    <GlyphID id="17" name="D"/>
    <GlyphID id="18" name="E"/>
    <GlyphID id="19" name="F"/>
    <GlyphID id="20" name="G"/>
    <GlyphID id="21" name="H"/>
    <GlyphID id="22" name="I"/>
    <GlyphID id="23" name="J"/>
    <GlyphID id="24" name="K"/>
    <GlyphID id="25" name="L"/>
    <GlyphID id="26" name="M"/>
    <GlyphID id="27" name="N"/>
    <GlyphID id="28" name="O"/>
    <GlyphID id="29" name="P"/>
    <GlyphID id="30" name="Q"/>
    <GlyphID id="31" name="R"/>
    <GlyphID id="32" name="S"/>
    <GlyphID id="33" name="T"/>
    <GlyphID id="34" name="U"/>
    <GlyphID id="35" name="V"/>
    <GlyphID id="36" name="W"/>
    <GlyphID id="37" name="X"/>
    <GlyphID id="38" name="Y"/>
    <GlyphID id="39" name="Z"/>
    <GlyphID id="40" name="uni00A0"/>
    <GlyphID id="41" name="uniEFFD"/>
    <GlyphID id="42" name="uniEFFE"/>
    <GlyphID id="43" name="uniEFFF"/>
  </GlyphOrder>

  <head>
    <!-- Most of this table will be recalculated by the compiler -->
    <tableVersion value="1.0"/>
    <fontRevision value="1.0"/>
    <checkSumAdjustment value="0xc171b065"/>
    <magicNumber value="0x5f0f3cf5"/>
    <flags value="00000000 00011111"/>
    <unitsPerEm value="1000"/>
    <created value="Tue Jan 17 04:00:36 2017"/>
    <modified value="Tue Jan 17 04:00:36 2017"/>
    <xMin value="-30"/>
    <yMin value="-216"/>
    <xMax value="1137"/>
    <yMax value="789"/>
    <macStyle value="00000000 00000000"/>
    <lowestRecPPEM value="8"/>
    <fontDirectionHint value="2"/>
    <indexToLocFormat value="0"/>
    <glyphDataFormat value="0"/>
  </head>

  <hhea>
    <tableVersion value="0x00010000"/>
    <ascent value="789"/>
    <descent value="-216"/>
    <lineGap value="90"/>
    <advanceWidthMax value="1201"/>
    <minLeftSideBearing value="-30"/>
    <minRightSideBearing value="-288"/>
    <xMaxExtent value="1137"/>
    <caretSlopeRise value="1"/>
    <caretSlopeRun value="0"/>
    <caretOffset value="0"/>
    <reserved0 value="0"/>
    <reserved1 value="0"/>
    <reserved2 value="0"/>
    <reserved3 value="0"/>
    <metricDataFormat value="0"/>
    <numberOfHMetrics value="44"/>
  </hhea>

  <maxp>
    <!-- Most of this table will be recalculated by the compiler -->
    <tableVersion value="0x10000"/>
    <numGlyphs value="44"/>
    <maxPoints value="116"/>
    <maxContours value="3"/>
    <maxCompositePoints value="0"/>
    <maxCompositeContours value="0"/>
    <maxZones value="2"/>
    <maxTwilightPoints value="34"/>
    <maxStorage value="50"/>
    <maxFunctionDefs value="119"/>
    <maxInstructionDefs value="0"/>
    <maxStackElements value="154"/>
    <maxSizeOfInstructions value="313"/>
    <maxComponentElements value="0"/>
    <maxComponentDepth value="0"/>
  </maxp>

  <OS_2>
    <!-- The fields 'usFirstCharIndex' and 'usLastCharIndex'
         will be recalculated by the compiler -->
    <version value="2"/>
    <xAvgCharWidth value="609"/>
    <usWeightClass value="400"/>
    <usWidthClass value="5"/>
    <fsType value="00000000 00000000"/>
    <ySubscriptXSize value="650"/>
    <ySubscriptYSize value="700"/>
    <ySubscriptXOffset value="0"/>
    <ySubscriptYOffset value="140"/>
    <ySuperscriptXSize value="650"/>
    <ySuperscriptYSize value="700"/>
    <ySuperscriptXOffset value="0"/>
    <ySuperscriptYOffset value="480"/>
    <yStrikeoutSize value="49"/>
    <yStrikeoutPosition value="258"/>
    <sFamilyClass value="0"/>
    <panose>
      <bFamilyType value="0"/>
      <bSerifStyle value="0"/>
      <bWeight value="0"/>
      <bProportion value="0"/>
      <bContrast value="0"/>
      <bStrokeVariation value="0"/>
      <bArmStyle value="0"/>
      <bLetterForm value="0"/>
      <bMidline value="0"/>
      <bXHeight value="0"/>
    </panose>
    <ulUnicodeRange1 value="10000000 00000000 00000000 11101111"/>
    <ulUnicodeRange2 value="00010000 00000000 11101100 11101101"/>
    <ulUnicodeRange3 value="00000000 00000000 00000000 00000000"/>
    <ulUnicodeRange4 value="00000000 00000000 00000000 00000000"/>
    <achVendID value="PfEd"/>
    <fsSelection value="00000000 01000000"/>
    <usFirstCharIndex value="32"/>
    <usLastCharIndex value="61439"/>
    <sTypoAscender value="800"/>
    <sTypoDescender value="-200"/>
    <sTypoLineGap value="90"/>
    <usWinAscent value="789"/>
    <usWinDescent value="216"/>
    <ulCodePageRange1 value="00100000 00000000 00000000 10001111"/>
    <ulCodePageRange2 value="01011110 00000011 00000000 00000000"/>
    <sxHeight value="0"/>
    <sCapHeight value="683"/>
    <usDefaultChar value="0"/>
    <usBreakChar value="32"/>
    <usMaxContext value="1"/>
  </OS_2>

  <hmtx>
    <mtx name=".notdef" width="250" lsb="50"/>
    <mtx name=".null" width="0" lsb="0"/>
    <mtx name="A" width="798" lsb="30"/>
    <mtx name="B" width="657" lsb="32"/>
    <mtx name="C" width="527" lsb="12"/>
    <mtx name="D" width="771" lsb="19"/>
    <mtx name="E" width="528" lsb="30"/>
    <mtx name="F" width="719" lsb="18"/>
    <mtx name="G" width="595" lsb="44"/>
    <mtx name="H" width="845" lsb="18"/>
    <mtx name="I" width="545" lsb="-30"/>
    <mtx name="J" width="678" lsb="47"/>
    <mtx name="K" width="762" lsb="32"/>
    <mtx name="L" width="690" lsb="32"/>
    <mtx name="M" width="1201" lsb="28"/>
    <mtx name="N" width="820" lsb="-27"/>
    <mtx name="O" width="796" lsb="58"/>
    <mtx name="P" width="696" lsb="19"/>
    <mtx name="Q" width="817" lsb="114"/>
    <mtx name="R" width="848" lsb="19"/>
    <mtx name="S" width="606" lsb="18"/>
    <mtx name="T" width="545" lsb="34"/>
    <mtx name="U" width="626" lsb="-17"/>
    <mtx name="V" width="613" lsb="25"/>
    <mtx name="W" width="988" lsb="25"/>
    <mtx name="X" width="713" lsb="52"/>
    <mtx name="Y" width="668" lsb="31"/>
    <mtx name="Z" width="725" lsb="37"/>
    <mtx name="eight" width="500" lsb="43"/>
    <mtx name="five" width="500" lsb="50"/>
    <mtx name="four" width="500" lsb="28"/>
    <mtx name="nine" width="500" lsb="42"/>
    <mtx name="nonmarkingreturn" width="333" lsb="0"/>
    <mtx name="one" width="500" lsb="86"/>
    <mtx name="seven" width="500" lsb="55"/>
    <mtx name="six" width="500" lsb="42"/>
    <mtx name="space" width="250" lsb="0"/>
    <mtx name="three" width="500" lsb="42"/>
    <mtx name="two" width="500" lsb="44"/>
    <mtx name="uni00A0" width="250" lsb="0"/>
    <mtx name="uniEFFD" width="300" lsb="0"/>
    <mtx name="uniEFFE" width="300" lsb="0"/>
    <mtx name="uniEFFF" width="100" lsb="0"/>
    <mtx name="zero" width="500" lsb="39"/>
  </hmtx>

  <cmap>
    <tableVersion version="0"/>
    <cmap_format_4 platformID="0" platEncID="3" language="0">
      <map code="0x20" name="space"/><!-- SPACE -->
      <map code="0x30" name="zero"/><!-- DIGIT ZERO -->
      <map code="0x31" name="one"/><!-- DIGIT ONE -->
      <map code="0x32" name="two"/><!-- DIGIT TWO -->
      <map code="0x33" name="three"/><!-- DIGIT THREE -->
      <map code="0x34" name="four"/><!-- DIGIT FOUR -->
      <map code="0x35" name="five"/><!-- DIGIT FIVE -->
      <map code="0x36" name="six"/><!-- DIGIT SIX -->
      <map code="0x37" name="seven"/><!-- DIGIT SEVEN -->
      <map code="0x38" name="eight"/><!-- DIGIT EIGHT -->
      <map code="0x39" name="nine"/><!-- DIGIT NINE -->
      <map code="0x41" name="A"/><!-- LATIN CAPITAL LETTER A -->
      <map code="0x42" name="B"/><!-- LATIN CAPITAL LETTER B -->
      <map code="0x43" name="C"/><!-- LATIN CAPITAL LETTER C -->
      <map code="0x44" name="D"/><!-- LATIN CAPITAL LETTER D -->
      <map code="0x45" name="E"/><!-- LATIN CAPITAL LETTER E -->
      <map code="0x46" name="F"/><!-- LATIN CAPITAL LETTER F -->
      <map code="0x47" name="G"/><!-- LATIN CAPITAL LETTER G -->
      <map code="0x48" name="H"/><!-- LATIN CAPITAL LETTER H -->
      <map code="0x49" name="I"/><!-- LATIN CAPITAL LETTER I -->
      <map code="0x4a" name="J"/><!-- LATIN CAPITAL LETTER J -->
      <map code="0x4b" name="K"/><!-- LATIN CAPITAL LETTER K -->
      <map code="0x4c" name="L"/><!-- LATIN CAPITAL LETTER L -->
      <map code="0x4d" name="M"/><!-- LATIN CAPITAL LETTER M -->
      <map code="0x4e" name="N"/><!-- LATIN CAPITAL LETTER N -->
      <map code="0x4f" name="O"/><!-- LATIN CAPITAL LETTER O -->
      <map code="0x50" name="P"/><!-- LATIN CAPITAL LETTER P -->
      <map code="0x51" name="Q"/><!-- LATIN CAPITAL LETTER Q -->
      <map code="0x52" name="R"/><!-- LATIN CAPITAL LETTER R -->
      <map code="0x53" name="S"/><!-- LATIN CAPITAL LETTER S -->
      <map code="0x54" name="T"/><!-- LATIN CAPITAL LETTER T -->
      <map code="0x55" name="U"/><!-- LATIN CAPITAL LETTER U -->
      <map code="0x56" name="V"/><!-- LATIN CAPITAL LETTER V -->
      <map code="0x57" name="W"/><!-- LATIN CAPITAL LETTER W -->
      <map code="0x58" name="X"/><!-- LATIN CAPITAL LETTER X -->
      <map code="0x59" name="Y"/><!-- LATIN CAPITAL LETTER Y -->
      <map code="0x5a" name="Z"/><!-- LATIN CAPITAL LETTER Z -->
      <map code="0xa0" name="uni00A0"/><!-- NO-BREAK SPACE -->
      <map code="0xeffd" name="uniEFFD"/><!-- ???? -->
      <map code="0xeffe" name="uniEFFE"/><!-- ???? -->
      <map code="0xefff" name="uniEFFF"/><!-- ???? -->
    </cmap_format_4>
    <cmap_format_0 platformID="1" platEncID="0" language="0">
      <map code="0x0" name=".null"/>
      <map code="0x1" name=".notdef"/>
      <map code="0x2" name=".notdef"/>
      <map code="0x3" name=".notdef"/>
      <map code="0x4" name=".notdef"/>
      <map code="0x5" name=".notdef"/>
      <map code="0x6" name=".notdef"/>
      <map code="0x7" name=".notdef"/>
      <map code="0x8" name=".null"/>
      <map code="0x9" name="nonmarkingreturn"/>
      <map code="0xa" name=".notdef"/>
      <map code="0xb" name=".notdef"/>
      <map code="0xc" name=".notdef"/>
      <map code="0xd" name="nonmarkingreturn"/>
      <map code="0xe" name=".notdef"/>
      <map code="0xf" name=".notdef"/>
      <map code="0x10" name=".notdef"/>
      <map code="0x11" name=".notdef"/>
      <map code="0x12" name=".notdef"/>
      <map code="0x13" name=".notdef"/>
      <map code="0x14" name=".notdef"/>
      <map code="0x15" name=".notdef"/>
      <map code="0x16" name=".notdef"/>
      <map code="0x17" name=".notdef"/>
      <map code="0x18" name=".notdef"/>
      <map code="0x19" name=".notdef"/>
      <map code="0x1a" name=".notdef"/>
      <map code="0x1b" name=".notdef"/>
      <map code="0x1c" name=".notdef"/>
      <map code="0x1d" name=".null"/>
      <map code="0x1e" name=".notdef"/>
      <map code="0x1f" name=".notdef"/>
      <map code="0x20" name="space"/>
      <map code="0x21" name=".notdef"/>
      <map code="0x22" name=".notdef"/>
      <map code="0x23" name=".notdef"/>
      <map code="0x24" name=".notdef"/>
      <map code="0x25" name=".notdef"/>
      <map code="0x26" name=".notdef"/>
      <map code="0x27" name=".notdef"/>
      <map code="0x28" name=".notdef"/>
      <map code="0x29" name=".notdef"/>
      <map code="0x2a" name=".notdef"/>
      <map code="0x2b" name=".notdef"/>
      <map code="0x2c" name=".notdef"/>
      <map code="0x2d" name=".notdef"/>
      <map code="0x2e" name=".notdef"/>
      <map code="0x2f" name=".notdef"/>
      <map code="0x30" name="zero"/>
      <map code="0x31" name="one"/>
      <map code="0x32" name="two"/>
      <map code="0x33" name="three"/>
      <map code="0x34" name="four"/>
      <map code="0x35" name="five"/>
      <map code="0x36" name="six"/>
      <map code="0x37" name="seven"/>
      <map code="0x38" name="eight"/>
      <map code="0x39" name="nine"/>
      <map code="0x3a" name=".notdef"/>
      <map code="0x3b" name=".notdef"/>
      <map code="0x3c" name=".notdef"/>
      <map code="0x3d" name=".notdef"/>
      <map code="0x3e" name=".notdef"/>
      <map code="0x3f" name=".notdef"/>
      <map code="0x40" name=".notdef"/>
      <map code="0x41" name="A"/>
      <map code="0x42" name="B"/>
      <map code="0x43" name="C"/>
      <map code="0x44" name="D"/>
      <map code="0x45" name="E"/>
      <map code="0x46" name="F"/>
      <map code="0x47" name="G"/>
      <map code="0x48" name="H"/>
      <map code="0x49" name="I"/>
      <map code="0x4a" name="J"/>
      <map code="0x4b" name="K"/>
      <map code="0x4c" name="L"/>
      <map code="0x4d" name="M"/>
      <map code="0x4e" name="N"/>
      <map code="0x4f" name="O"/>
      <map code="0x50" name="P"/>
      <map code="0x51" name="Q"/>
      <map code="0x52" name="R"/>
      <map code="0x53" name="S"/>
      <map code="0x54" name="T"/>
      <map code="0x55" name="U"/>
      <map code="0x56" name="V"/>
      <map code="0x57" name="W"/>
      <map code="0x58" name="X"/>
      <map code="0x59" name="Y"/>
      <map code="0x5a" name="Z"/>
      <map code="0x5b" name=".notdef"/>
      <map code="0x5c" name=".notdef"/>
      <map code="0x5d" name=".notdef"/>
      <map code="0x5e" name=".notdef"/>
      <map code="0x5f" name=".notdef"/>
      <map code="0x60" name=".notdef"/>
      <map code="0x61" name=".notdef"/>
      <map code="0x62" name=".notdef"/>
      <map code="0x63" name=".notdef"/>
      <map code="0x64" name=".notdef"/>
      <map code="0x65" name=".notdef"/>
      <map code="0x66" name=".notdef"/>
      <map code="0x67" name=".notdef"/>
      <map code="0x68" name=".notdef"/>
      <map code="0x69" name=".notdef"/>
      <map code="0x6a" name=".notdef"/>
      <map code="0x6b" name=".notdef"/>
      <map code="0x6c" name=".notdef"/>
      <map code="0x6d" name=".notdef"/>
      <map code="0x6e" name=".notdef"/>
      <map code="0x6f" name=".notdef"/>
      <map code="0x70" name=".notdef"/>
      <map code="0x71" name=".notdef"/>
      <map code="0x72" name=".notdef"/>
      <map code="0x73" name=".notdef"/>
      <map code="0x74" name=".notdef"/>
      <map code="0x75" name=".notdef"/>
      <map code="0x76" name=".notdef"/>
      <map code="0x77" name=".notdef"/>
      <map code="0x78" name=".notdef"/>
      <map code="0x79" name=".notdef"/>
      <map code="0x7a" name=".notdef"/>
      <map code="0x7b" name=".notdef"/>
      <map code="0x7c" name=".notdef"/>
      <map code="0x7d" name=".notdef"/>
      <map code="0x7e" name=".notdef"/>
      <map code="0x7f" name=".notdef"/>
      <map code="0x80" name=".notdef"/>
      <map code="0x81" name=".notdef"/>
      <map code="0x82" name=".notdef"/>
      <map code="0x83" name=".notdef"/>
      <map code="0x84" name=".notdef"/>
      <map code="0x85" name=".notdef"/>
      <map code="0x86" name=".notdef"/>
      <map code="0x87" name=".notdef"/>
      <map code="0x88" name=".notdef"/>
      <map code="0x89" name=".notdef"/>
      <map code="0x8a" name=".notdef"/>
      <map code="0x8b" name=".notdef"/>
      <map code="0x8c" name=".notdef"/>
      <map code="0x8d" name=".notdef"/>
      <map code="0x8e" name=".notdef"/>
      <map code="0x8f" name=".notdef"/>
      <map code="0x90" name=".notdef"/>
      <map code="0x91" name=".notdef"/>
      <map code="0x92" name=".notdef"/>
      <map code="0x93" name=".notdef"/>
      <map code="0x94" name=".notdef"/>
      <map code="0x95" name=".notdef"/>
      <map code="0x96" name=".notdef"/>
      <map code="0x97" name=".notdef"/>
      <map code="0x98" name=".notdef"/>
      <map code="0x99" name=".notdef"/>
      <map code="0x9a" name=".notdef"/>
      <map code="0x9b" name=".notdef"/>
      <map code="0x9c" name=".notdef"/>
      <map code="0x9d" name=".notdef"/>
      <map code="0x9e" name=".notdef"/>
      <map code="0x9f" name=".notdef"/>
      <map code="0xa0" name=".notdef"/>
      <map code="0xa1" name=".notdef"/>
      <map code="0xa2" name=".notdef"/>
      <map code="0xa3" name=".notdef"/>
      <map code="0xa4" name=".notdef"/>
      <map code="0xa5" name=".notdef"/>
      <map code="0xa6" name=".notdef"/>
      <map code="0xa7" name=".notdef"/>
      <map code="0xa8" name=".notdef"/>
      <map code="0xa9" name=".notdef"/>
      <map code="0xaa" name=".notdef"/>
      <map code="0xab" name=".notdef"/>
      <map code="0xac" name=".notdef"/>
      <map code="0xad" name=".notdef"/>
      <map code="0xae" name=".notdef"/>
      <map code="0xaf" name=".notdef"/>
      <map code="0xb0" name=".notdef"/>
      <map code="0xb1" name=".notdef"/>
      <map code="0xb2" name=".notdef"/>
      <map code="0xb3" name=".notdef"/>
      <map code="0xb4" name=".notdef"/>
      <map code="0xb5" name=".notdef"/>
      <map code="0xb6" name=".notdef"/>
      <map code="0xb7" name=".notdef"/>
      <map code="0xb8" name=".notdef"/>
      <map code="0xb9" name=".notdef"/>
      <map code="0xba" name=".notdef"/>
      <map code="0xbb" name=".notdef"/>
      <map code="0xbc" name=".notdef"/>
      <map code="0xbd" name=".notdef"/>
      <map code="0xbe" name=".notdef"/>
      <map code="0xbf" name=".notdef"/>
      <map code="0xc0" name=".notdef"/>
      <map code="0xc1" name=".notdef"/>
      <map code="0xc2" name=".notdef"/>
      <map code="0xc3" name=".notdef"/>
      <map code="0xc4" name=".notdef"/>
      <map code="0xc5" name=".notdef"/>
      <map code="0xc6" name=".notdef"/>
      <map code="0xc7" name=".notdef"/>
      <map code="0xc8" name=".notdef"/>
      <map code="0xc9" name=".notdef"/>
      <map code="0xca" name="uni00A0"/>
      <map code="0xcb" name=".notdef"/>
      <map code="0xcc" name=".notdef"/>
      <map code="0xcd" name=".notdef"/>
      <map code="0xce" name=".notdef"/>
      <map code="0xcf" name=".notdef"/>
      <map code="0xd0" name=".notdef"/>
      <map code="0xd1" name=".notdef"/>
      <map code="0xd2" name=".notdef"/>
      <map code="0xd3" name=".notdef"/>
      <map code="0xd4" name=".notdef"/>
      <map code="0xd5" name=".notdef"/>
      <map code="0xd6" name=".notdef"/>
      <map code="0xd7" name=".notdef"/>
      <map code="0xd8" name=".notdef"/>
      <map code="0xd9" name=".notdef"/>
      <map code="0xda" name=".notdef"/>
      <map code="0xdb" name=".notdef"/>
      <map code="0xdc" name=".notdef"/>
      <map code="0xdd" name=".notdef"/>
      <map code="0xde" name=".notdef"/>
      <map code="0xdf" name=".notdef"/>
      <map code="0xe0" name=".notdef"/>
      <map code="0xe1" name=".notdef"/>
      <map code="0xe2" name=".notdef"/>
      <map code="0xe3" name=".notdef"/>
      <map code="0xe4" name=".notdef"/>
      <map code="0xe5" name=".notdef"/>
      <map code="0xe6" name=".notdef"/>
      <map code="0xe7" name=".notdef"/>
      <map code="0xe8" name=".notdef"/>
      <map code="0xe9" name=".notdef"/>
      <map code="0xea" name=".notdef"/>
      <map code="0xeb" name=".notdef"/>
      <map code="0xec" name=".notdef"/>
      <map code="0xed" name=".notdef"/>
      <map code="0xee" name=".notdef"/>
      <map code="0xef" name=".notdef"/>
      <map code="0xf0" name=".notdef"/>
      <map code="0xf1" name=".notdef"/>
      <map code="0xf2" name=".notdef"/>
      <map code="0xf3" name=".notdef"/>
      <map code="0xf4" name=".notdef"/>
      <map code="0xf5" name=".notdef"/>
      <map code="0xf6" name=".notdef"/>
      <map code="0xf7" name=".notdef"/>
      <map code="0xf8" name=".notdef"/>
      <map code="0xf9" name=".notdef"/>
      <map code="0xfa" name=".notdef"/>
      <map code="0xfb" name=".notdef"/>
      <map code="0xfc" name=".notdef"/>
      <map code="0xfd" name=".notdef"/>
      <map code="0xfe" name=".notdef"/>
      <map code="0xff" name=".notdef"/>
    </cmap_format_0>
    <cmap_format_4 platformID="3" platEncID="1" language="0">
      <map code="0x20" name="space"/><!-- SPACE -->
      <map code="0x30" name="zero"/><!-- DIGIT ZERO -->
      <map code="0x31" name="one"/><!-- DIGIT ONE -->
      <map code="0x32" name="two"/><!-- DIGIT TWO -->
      <map code="0x33" name="three"/><!-- DIGIT THREE -->
      <map code="0x34" name="four"/><!-- DIGIT FOUR -->
      <map code="0x35" name="five"/><!-- DIGIT FIVE -->
      <map code="0x36" name="six"/><!-- DIGIT SIX -->
      <map code="0x37" name="seven"/><!-- DIGIT SEVEN -->
      <map code="0x38" name="eight"/><!-- DIGIT EIGHT -->
      <map code="0x39" name="nine"/><!-- DIGIT NINE -->
      <map code="0x41" name="A"/><!-- LATIN CAPITAL LETTER A -->
      <map code="0x42" name="B"/><!-- LATIN CAPITAL LETTER B -->
      <map code="0x43" name="C"/><!-- LATIN CAPITAL LETTER C -->
      <map code="0x44" name="D"/><!-- LATIN CAPITAL LETTER D -->
      <map code="0x45" name="E"/><!-- LATIN CAPITAL LETTER E -->
      <map code="0x46" name="F"/><!-- LATIN CAPITAL LETTER F -->
      <map code="0x47" name="G"/><!-- LATIN CAPITAL LETTER G -->
      <map code="0x48" name="H"/><!-- LATIN CAPITAL LETTER H -->
      <map code="0x49" name="I"/><!-- LATIN CAPITAL LETTER I -->
      <map code="0x4a" name="J"/><!-- LATIN CAPITAL LETTER J -->
      <map code="0x4b" name="K"/><!-- LATIN CAPITAL LETTER K -->
      <map code="0x4c" name="L"/><!-- LATIN CAPITAL LETTER L -->
      <map code="0x4d" name="M"/><!-- LATIN CAPITAL LETTER M -->
      <map code="0x4e" name="N"/><!-- LATIN CAPITAL LETTER N -->
      <map code="0x4f" name="O"/><!-- LATIN CAPITAL LETTER O -->
      <map code="0x50" name="P"/><!-- LATIN CAPITAL LETTER P -->
      <map code="0x51" name="Q"/><!-- LATIN CAPITAL LETTER Q -->
      <map code="0x52" name="R"/><!-- LATIN CAPITAL LETTER R -->
      <map code="0x53" name="S"/><!-- LATIN CAPITAL LETTER S -->
      <map code="0x54" name="T"/><!-- LATIN CAPITAL LETTER T -->
      <map code="0x55" name="U"/><!-- LATIN CAPITAL LETTER U -->
      <map code="0x56" name="V"/><!-- LATIN CAPITAL LETTER V -->
      <map code="0x57" name="W"/><!-- LATIN CAPITAL LETTER W -->
      <map code="0x58" name="X"/><!-- LATIN CAPITAL LETTER X -->
      <map code="0x59" name="Y"/><!-- LATIN CAPITAL LETTER Y -->
      <map code="0x5a" name="Z"/><!-- LATIN CAPITAL LETTER Z -->
      <map code="0xa0" name="uni00A0"/><!-- NO-BREAK SPACE -->
      <map code="0xeffd" name="uniEFFD"/><!-- ???? -->
      <map code="0xeffe" name="uniEFFE"/><!-- ???? -->
      <map code="0xefff" name="uniEFFF"/><!-- ???? -->
    </cmap_format_4>
  </cmap>

  <fpgm>
    <assembly>
      PUSHB[ ]	/* 1 value pushed */
      0
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      NEQ[ ]	/* NotEqual */
      IF[ ]	/* If */
      RCVT[ ]	/* ReadCVT */
      EIF[ ]	/* EndIf */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      MPPEM[ ]	/* MeasurePixelPerEm */
      PUSHW[ ]	/* 1 value pushed */
      14
      LTEQ[ ]	/* LessThenOrEqual */
      MPPEM[ ]	/* MeasurePixelPerEm */
      PUSHB[ ]	/* 1 value pushed */
      6
      GTEQ[ ]	/* GreaterThanOrEqual */
      AND[ ]	/* LogicalAnd */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      52
      ELSE[ ]	/* Else */
      PUSHB[ ]	/* 1 value pushed */
      40
      EIF[ ]	/* EndIf */
      ADD[ ]	/* Add */
      FLOOR[ ]	/* Floor */
      DUP[ ]	/* DuplicateTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      NEQ[ ]	/* NotEqual */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      SUB[ ]	/* Subtract */
      PUSHW[ ]	/* 2 values pushed */
      2048 2048
      MUL[ ]	/* Multiply */
      MUL[ ]	/* Multiply */
      SWAP[ ]	/* SwapTopStack */
      DIV[ ]	/* Divide */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 1 value pushed */
      0
      RS[ ]	/* ReadStore */
      SWAP[ ]	/* SwapTopStack */
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSHB[ ]	/* 3 values pushed */
      0 1 0
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      WS[ ]	/* WriteStore */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      1
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      32
      ADD[ ]	/* Add */
      FLOOR[ ]	/* Floor */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      2
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      ABS[ ]	/* Absolute */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      192
      LT[ ]	/* LessThan */
      PUSHB[ ]	/* 1 value pushed */
      4
      MINDEX[ ]	/* MoveXToTopStack */
      AND[ ]	/* LogicalAnd */
      PUSHB[ ]	/* 3 values pushed */
      40 1 10
      RS[ ]	/* ReadStore */
      RCVT[ ]	/* ReadCVT */
      MUL[ ]	/* Multiply */
      RCVT[ ]	/* ReadCVT */
      GT[ ]	/* GreaterThan */
      OR[ ]	/* LogicalOr */
      IF[ ]	/* If */
      POP[ ]	/* PopTopStack */
      SWAP[ ]	/* SwapTopStack */
      POP[ ]	/* PopTopStack */
      ELSE[ ]	/* Else */
      ROLL[ ]	/* RollTopThreeStack */
      IF[ ]	/* If */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      80
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      POP[ ]	/* PopTopStack */
      PUSHB[ ]	/* 1 value pushed */
      64
      EIF[ ]	/* EndIf */
      ELSE[ ]	/* Else */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      56
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      POP[ ]	/* PopTopStack */
      PUSHB[ ]	/* 1 value pushed */
      56
      EIF[ ]	/* EndIf */
      EIF[ ]	/* EndIf */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 2 values pushed */
      1 10
      RS[ ]	/* ReadStore */
      RCVT[ ]	/* ReadCVT */
      MUL[ ]	/* Multiply */
      RCVT[ ]	/* ReadCVT */
      SUB[ ]	/* Subtract */
      ABS[ ]	/* Absolute */
      PUSHB[ ]	/* 1 value pushed */
      40
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      POP[ ]	/* PopTopStack */
      PUSHB[ ]	/* 2 values pushed */
      1 10
      RS[ ]	/* ReadStore */
      RCVT[ ]	/* ReadCVT */
      MUL[ ]	/* Multiply */
      RCVT[ ]	/* ReadCVT */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      48
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      POP[ ]	/* PopTopStack */
      PUSHB[ ]	/* 1 value pushed */
      48
      EIF[ ]	/* EndIf */
      ELSE[ ]	/* Else */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      192
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      DUP[ ]	/* DuplicateTopStack */
      FLOOR[ ]	/* Floor */
      DUP[ ]	/* DuplicateTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      ROLL[ ]	/* RollTopThreeStack */
      SUB[ ]	/* Subtract */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      10
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      ADD[ ]	/* Add */
      ELSE[ ]	/* Else */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      32
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      POP[ ]	/* PopTopStack */
      PUSHB[ ]	/* 1 value pushed */
      10
      ADD[ ]	/* Add */
      ELSE[ ]	/* Else */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      54
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      POP[ ]	/* PopTopStack */
      PUSHB[ ]	/* 1 value pushed */
      54
      ADD[ ]	/* Add */
      ELSE[ ]	/* Else */
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      EIF[ ]	/* EndIf */
      EIF[ ]	/* EndIf */
      ELSE[ ]	/* Else */
      PUSHB[ ]	/* 1 value pushed */
      1
      CALL[ ]	/* CallFunction */
      EIF[ ]	/* EndIf */
      EIF[ ]	/* EndIf */
      SWAP[ ]	/* SwapTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      NEG[ ]	/* Negate */
      EIF[ ]	/* EndIf */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      3
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      RCVT[ ]	/* ReadCVT */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      SUB[ ]	/* Subtract */
      ABS[ ]	/* Absolute */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      5
      RS[ ]	/* ReadStore */
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      5
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 1 value pushed */
      6
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 1 value pushed */
      1
      ADD[ ]	/* Add */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      4
      FDEF[ ]	/* FunctionDefinition */
      SWAP[ ]	/* SwapTopStack */
      POP[ ]	/* PopTopStack */
      SWAP[ ]	/* SwapTopStack */
      POP[ ]	/* PopTopStack */
      DUP[ ]	/* DuplicateTopStack */
      ABS[ ]	/* Absolute */
      PUSHB[ ]	/* 2 values pushed */
      5 98
      WS[ ]	/* WriteStore */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      6
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 2 values pushed */
      1 10
      RS[ ]	/* ReadStore */
      RCVT[ ]	/* ReadCVT */
      MUL[ ]	/* Multiply */
      PUSHB[ ]	/* 2 values pushed */
      1 10
      RS[ ]	/* ReadStore */
      PUSHB[ ]	/* 1 value pushed */
      1
      ADD[ ]	/* Add */
      RCVT[ ]	/* ReadCVT */
      MUL[ ]	/* Multiply */
      PUSHB[ ]	/* 1 value pushed */
      3
      LOOPCALL[ ]	/* LoopAndCallFunction */
      POP[ ]	/* PopTopStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      6
      RS[ ]	/* ReadStore */
      DUP[ ]	/* DuplicateTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      DUP[ ]	/* DuplicateTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      PUSHB[ ]	/* 1 value pushed */
      1
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 2 values pushed */
      48 5
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      4
      MINDEX[ ]	/* MoveXToTopStack */
      LTEQ[ ]	/* LessThenOrEqual */
      IF[ ]	/* If */
      ADD[ ]	/* Add */
      LT[ ]	/* LessThan */
      ELSE[ ]	/* Else */
      SUB[ ]	/* Subtract */
      GT[ ]	/* GreaterThan */
      EIF[ ]	/* EndIf */
      IF[ ]	/* If */
      SWAP[ ]	/* SwapTopStack */
      EIF[ ]	/* EndIf */
      POP[ ]	/* PopTopStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      64
      GTEQ[ ]	/* GreaterThanOrEqual */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      1
      CALL[ ]	/* CallFunction */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      PUSHB[ ]	/* 1 value pushed */
      64
      EIF[ ]	/* EndIf */
      SWAP[ ]	/* SwapTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      NEG[ ]	/* Negate */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      5
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      7
      RS[ ]	/* ReadStore */
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 3 values pushed */
      0 2 0
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      WS[ ]	/* WriteStore */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      6
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      7
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 1 value pushed */
      2
      DIV[ ]	/* Divide */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      PUSHB[ ]	/* 1 value pushed */
      1
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 1 value pushed */
      5
      LOOPCALL[ ]	/* LoopAndCallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      7
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      RCVT[ ]	/* ReadCVT */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      11
      RS[ ]	/* ReadStore */
      MUL[ ]	/* Multiply */
      PUSHW[ ]	/* 1 value pushed */
      1024
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      ADD[ ]	/* Add */
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSHB[ ]	/* 1 value pushed */
      1
      ADD[ ]	/* Add */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      8
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      7 11 0
      RS[ ]	/* ReadStore */
      RCVT[ ]	/* ReadCVT */
      WS[ ]	/* WriteStore */
      LOOPCALL[ ]	/* LoopAndCallFunction */
      POP[ ]	/* PopTopStack */
      PUSHB[ ]	/* 3 values pushed */
      0 1 0
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      WS[ ]	/* WriteStore */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      9
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      0
      RS[ ]	/* ReadStore */
      SWAP[ ]	/* SwapTopStack */
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSHB[ ]	/* 3 values pushed */
      0 1 0
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      WS[ ]	/* WriteStore */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      10
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      RCVT[ ]	/* ReadCVT */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      1
      CALL[ ]	/* CallFunction */
      SWAP[ ]	/* SwapTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      RS[ ]	/* ReadStore */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      ADD[ ]	/* Add */
      DUP[ ]	/* DuplicateTopStack */
      RCVT[ ]	/* ReadCVT */
      ROLL[ ]	/* RollTopThreeStack */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      DUP[ ]	/* DuplicateTopStack */
      ABS[ ]	/* Absolute */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      32
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      POP[ ]	/* PopTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      ELSE[ ]	/* Else */
      PUSHB[ ]	/* 1 value pushed */
      48
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      32
      ELSE[ ]	/* Else */
      PUSHB[ ]	/* 1 value pushed */
      64
      EIF[ ]	/* EndIf */
      EIF[ ]	/* EndIf */
      SWAP[ ]	/* SwapTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      NEG[ ]	/* Negate */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 1 value pushed */
      3
      CINDEX[ ]	/* CopyXToTopStack */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      WCVTP[ ]	/* WriteCVTInPixels */
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSHB[ ]	/* 1 value pushed */
      1
      ADD[ ]	/* Add */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      11
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      RCVT[ ]	/* ReadCVT */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      1
      CALL[ ]	/* CallFunction */
      SWAP[ ]	/* SwapTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      RS[ ]	/* ReadStore */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      ADD[ ]	/* Add */
      DUP[ ]	/* DuplicateTopStack */
      RCVT[ ]	/* ReadCVT */
      ROLL[ ]	/* RollTopThreeStack */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      DUP[ ]	/* DuplicateTopStack */
      ABS[ ]	/* Absolute */
      PUSHB[ ]	/* 1 value pushed */
      36
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      0
      ELSE[ ]	/* Else */
      PUSHB[ ]	/* 1 value pushed */
      64
      EIF[ ]	/* EndIf */
      SWAP[ ]	/* SwapTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      NEG[ ]	/* Negate */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 1 value pushed */
      3
      CINDEX[ ]	/* CopyXToTopStack */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      WCVTP[ ]	/* WriteCVTInPixels */
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSHB[ ]	/* 1 value pushed */
      1
      ADD[ ]	/* Add */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      12
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 3 values pushed */
      11 10 3
      RCVT[ ]	/* ReadCVT */
      IF[ ]	/* If */
      POP[ ]	/* PopTopStack */
      ELSE[ ]	/* Else */
      SWAP[ ]	/* SwapTopStack */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      LOOPCALL[ ]	/* LoopAndCallFunction */
      POP[ ]	/* PopTopStack */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      13
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      2 2
      RCVT[ ]	/* ReadCVT */
      PUSHB[ ]	/* 1 value pushed */
      100
      SUB[ ]	/* Subtract */
      WCVTP[ ]	/* WriteCVTInPixels */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      14
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      1
      ADD[ ]	/* Add */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      12
      RS[ ]	/* ReadStore */
      MD[1]	/* MeasureDistance */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      12
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 1 value pushed */
      13
      RS[ ]	/* ReadStore */
      MD[1]	/* MeasureDistance */
      PUSHB[ ]	/* 1 value pushed */
      0
      GT[ ]	/* GreaterThan */
      IF[ ]	/* If */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      13
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      15
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      16
      DIV[ ]	/* Divide */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      DUP[ ]	/* DuplicateTopStack */
      PUSHW[ ]	/* 1 value pushed */
      1024
      MUL[ ]	/* Multiply */
      ROLL[ ]	/* RollTopThreeStack */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 1 value pushed */
      14
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      DUP[ ]	/* DuplicateTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      ADD[ ]	/* Add */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      14
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      SWAP[ ]	/* SwapTopStack */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      16
      FDEF[ ]	/* FunctionDefinition */
      MPPEM[ ]	/* MeasurePixelPerEm */
      EQ[ ]	/* Equal */
      IF[ ]	/* If */
      PUSHB[ ]	/* 2 values pushed */
      4 100
      WCVTP[ ]	/* WriteCVTInPixels */
      EIF[ ]	/* EndIf */
      DEPTH[ ]	/* GetDepthStack */
      PUSHB[ ]	/* 1 value pushed */
      13
      NEG[ ]	/* Negate */
      SWAP[ ]	/* SwapTopStack */
      JROT[ ]	/* JumpRelativeOnTrue */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      17
      FDEF[ ]	/* FunctionDefinition */
      MPPEM[ ]	/* MeasurePixelPerEm */
      LTEQ[ ]	/* LessThenOrEqual */
      IF[ ]	/* If */
      MPPEM[ ]	/* MeasurePixelPerEm */
      GTEQ[ ]	/* GreaterThanOrEqual */
      IF[ ]	/* If */
      PUSHB[ ]	/* 2 values pushed */
      4 100
      WCVTP[ ]	/* WriteCVTInPixels */
      EIF[ ]	/* EndIf */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      DEPTH[ ]	/* GetDepthStack */
      PUSHB[ ]	/* 1 value pushed */
      19
      NEG[ ]	/* Negate */
      SWAP[ ]	/* SwapTopStack */
      JROT[ ]	/* JumpRelativeOnTrue */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      18
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      0 15
      RS[ ]	/* ReadStore */
      NEQ[ ]	/* NotEqual */
      IF[ ]	/* If */
      PUSHB[ ]	/* 2 values pushed */
      15 15
      RS[ ]	/* ReadStore */
      PUSHB[ ]	/* 1 value pushed */
      1
      SUB[ ]	/* Subtract */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 1 value pushed */
      15
      CALL[ ]	/* CallFunction */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 1 value pushed */
      0
      RS[ ]	/* ReadStore */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 2 values pushed */
      12 2
      CINDEX[ ]	/* CopyXToTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 2 values pushed */
      13 2
      CINDEX[ ]	/* CopyXToTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 1 value pushed */
      1
      SZPS[ ]	/* SetZonePointerS */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      3
      CINDEX[ ]	/* CopyXToTopStack */
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 2 values pushed */
      1 0
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      WS[ ]	/* WriteStore */
      ROLL[ ]	/* RollTopThreeStack */
      ROLL[ ]	/* RollTopThreeStack */
      DUP[ ]	/* DuplicateTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 1 value pushed */
      14
      LOOPCALL[ ]	/* LoopAndCallFunction */
      POP[ ]	/* PopTopStack */
      SWAP[ ]	/* SwapTopStack */
      PUSHB[ ]	/* 1 value pushed */
      1
      SUB[ ]	/* Subtract */
      DUP[ ]	/* DuplicateTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 1 value pushed */
      14
      LOOPCALL[ ]	/* LoopAndCallFunction */
      POP[ ]	/* PopTopStack */
      ELSE[ ]	/* Else */
      PUSHB[ ]	/* 2 values pushed */
      1 0
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 1 value pushed */
      14
      LOOPCALL[ ]	/* LoopAndCallFunction */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 1 value pushed */
      12
      RS[ ]	/* ReadStore */
      GC[1]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      13
      RS[ ]	/* ReadStore */
      GC[1]	/* GetCoordOnPVector */
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 1 value pushed */
      2
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      11
      RS[ ]	/* ReadStore */
      MUL[ ]	/* Multiply */
      PUSHW[ ]	/* 1 value pushed */
      1024
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 2 values pushed */
      0 0
      SZP0[ ]	/* SetZonePointer0 */
      SWAP[ ]	/* SwapTopStack */
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSHB[ ]	/* 1 value pushed */
      1
      RS[ ]	/* ReadStore */
      PUSHB[ ]	/* 1 value pushed */
      0
      MIAP[0]	/* MoveIndirectAbsPt */
      PUSHB[ ]	/* 3 values pushed */
      1 1 1
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      WS[ ]	/* WriteStore */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      19
      FDEF[ ]	/* FunctionDefinition */
      SVTCA[0]	/* SetFPVectorToAxis */
      PUSHB[ ]	/* 2 values pushed */
      0 2
      RCVT[ ]	/* ReadCVT */
      EQ[ ]	/* Equal */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      15
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      DUP[ ]	/* DuplicateTopStack */
      RCVT[ ]	/* ReadCVT */
      PUSHB[ ]	/* 1 value pushed */
      11
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 1 value pushed */
      10
      SWAP[ ]	/* SwapTopStack */
      PUSHB[ ]	/* 1 value pushed */
      1
      ADD[ ]	/* Add */
      WS[ ]	/* WriteStore */
      DUP[ ]	/* DuplicateTopStack */
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 1 value pushed */
      1
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 6 values pushed */
      16 16 1 0 14 0
      WS[ ]	/* WriteStore */
      WS[ ]	/* WriteStore */
      ROLL[ ]	/* RollTopThreeStack */
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 2 values pushed */
      18 6
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      117
      CALL[ ]	/* CallFunction */
      ELSE[ ]	/* Else */
      CLEAR[ ]	/* ClearStack */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      20
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      0 19
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      21
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      1 19
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      22
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      2 19
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      23
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      3 19
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      24
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      4 19
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      25
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      5 19
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      26
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      6 19
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      27
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      7 19
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      28
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      8 19
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      29
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      9 19
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      41
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSHB[ ]	/* 1 value pushed */
      1
      DELTAP1[ ]	/* DeltaExceptionP1 */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      42
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSHB[ ]	/* 1 value pushed */
      1
      DELTAP2[ ]	/* DeltaExceptionP2 */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      43
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSHB[ ]	/* 1 value pushed */
      1
      DELTAP3[ ]	/* DeltaExceptionP3 */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      30
      FDEF[ ]	/* FunctionDefinition */
      SVTCA[0]	/* SetFPVectorToAxis */
      PUSHB[ ]	/* 1 value pushed */
      13
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 2 values pushed */
      0 2
      RCVT[ ]	/* ReadCVT */
      EQ[ ]	/* Equal */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      15
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      DUP[ ]	/* DuplicateTopStack */
      RCVT[ ]	/* ReadCVT */
      PUSHB[ ]	/* 1 value pushed */
      11
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 1 value pushed */
      10
      SWAP[ ]	/* SwapTopStack */
      PUSHB[ ]	/* 1 value pushed */
      1
      ADD[ ]	/* Add */
      WS[ ]	/* WriteStore */
      DUP[ ]	/* DuplicateTopStack */
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 1 value pushed */
      1
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 6 values pushed */
      16 16 1 0 14 0
      WS[ ]	/* WriteStore */
      WS[ ]	/* WriteStore */
      ROLL[ ]	/* RollTopThreeStack */
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 2 values pushed */
      18 6
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      117
      CALL[ ]	/* CallFunction */
      ELSE[ ]	/* Else */
      CLEAR[ ]	/* ClearStack */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      31
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      0 30
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      32
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      1 30
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      33
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      2 30
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      34
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      3 30
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      35
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      4 30
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      36
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      5 30
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      37
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      6 30
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      38
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      7 30
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      39
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      8 30
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      40
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      9 30
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      44
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      PUSHB[ ]	/* 1 value pushed */
      1
      ADD[ ]	/* Add */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      45
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 1 value pushed */
      16
      ADD[ ]	/* Add */
      DUP[ ]	/* DuplicateTopStack */
      RS[ ]	/* ReadStore */
      SWAP[ ]	/* SwapTopStack */
      PUSHB[ ]	/* 1 value pushed */
      1
      ADD[ ]	/* Add */
      RS[ ]	/* ReadStore */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 1 value pushed */
      1
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 1 value pushed */
      44
      LOOPCALL[ ]	/* LoopAndCallFunction */
      POP[ ]	/* PopTopStack */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      46
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      45
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      45
      LOOPCALL[ ]	/* LoopAndCallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      47
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      GC[1]	/* GetCoordOnPVector */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      11
      RS[ ]	/* ReadStore */
      MUL[ ]	/* Multiply */
      PUSHW[ ]	/* 1 value pushed */
      1024
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      ADD[ ]	/* Add */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      SHPIX[ ]	/* ShiftZoneByPixel */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      NEQ[ ]	/* NotEqual */
      IF[ ]	/* If */
      DUP[ ]	/* DuplicateTopStack */
      GC[1]	/* GetCoordOnPVector */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      11
      RS[ ]	/* ReadStore */
      MUL[ ]	/* Multiply */
      PUSHW[ ]	/* 1 value pushed */
      1024
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      ADD[ ]	/* Add */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      SHPIX[ ]	/* ShiftZoneByPixel */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      48
      FDEF[ ]	/* FunctionDefinition */
      SVTCA[0]	/* SetFPVectorToAxis */
      PUSHB[ ]	/* 2 values pushed */
      0 2
      RCVT[ ]	/* ReadCVT */
      EQ[ ]	/* Equal */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      1
      SZPS[ ]	/* SetZonePointerS */
      PUSHB[ ]	/* 1 value pushed */
      47
      LOOPCALL[ ]	/* LoopAndCallFunction */
      PUSHB[ ]	/* 2 values pushed */
      5 1
      SZP2[ ]	/* SetZonePointer2 */
      RCVT[ ]	/* ReadCVT */
      IF[ ]	/* If */
      IUP[0]	/* InterpolateUntPts */
      EIF[ ]	/* EndIf */
      ELSE[ ]	/* Else */
      CLEAR[ ]	/* ClearStack */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      49
      FDEF[ ]	/* FunctionDefinition */
      SVTCA[0]	/* SetFPVectorToAxis */
      PUSHB[ ]	/* 1 value pushed */
      13
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 2 values pushed */
      0 2
      RCVT[ ]	/* ReadCVT */
      EQ[ ]	/* Equal */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      1
      SZPS[ ]	/* SetZonePointerS */
      PUSHB[ ]	/* 1 value pushed */
      47
      LOOPCALL[ ]	/* LoopAndCallFunction */
      PUSHB[ ]	/* 2 values pushed */
      5 1
      SZP2[ ]	/* SetZonePointer2 */
      RCVT[ ]	/* ReadCVT */
      IF[ ]	/* If */
      IUP[0]	/* InterpolateUntPts */
      EIF[ ]	/* EndIf */
      ELSE[ ]	/* Else */
      CLEAR[ ]	/* ClearStack */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      50
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      SHC[1]	/* ShiftContourByLastPt */
      PUSHB[ ]	/* 1 value pushed */
      1
      ADD[ ]	/* Add */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      51
      FDEF[ ]	/* FunctionDefinition */
      SVTCA[0]	/* SetFPVectorToAxis */
      PUSHB[ ]	/* 1 value pushed */
      1
      RCVT[ ]	/* ReadCVT */
      MUL[ ]	/* Multiply */
      PUSHW[ ]	/* 1 value pushed */
      1024
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      PUSHB[ ]	/* 1 value pushed */
      1
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      11
      RS[ ]	/* ReadStore */
      MUL[ ]	/* Multiply */
      PUSHW[ ]	/* 1 value pushed */
      1024
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      PUSHB[ ]	/* 1 value pushed */
      1
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      0
      SZPS[ ]	/* SetZonePointerS */
      PUSHB[ ]	/* 5 values pushed */
      0 0 0 0 0
      WCVTP[ ]	/* WriteCVTInPixels */
      MIAP[0]	/* MoveIndirectAbsPt */
      SWAP[ ]	/* SwapTopStack */
      SHPIX[ ]	/* ShiftZoneByPixel */
      PUSHB[ ]	/* 2 values pushed */
      50 1
      SZP2[ ]	/* SetZonePointer2 */
      LOOPCALL[ ]	/* LoopAndCallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      52
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      DUP[ ]	/* DuplicateTopStack */
      GC[1]	/* GetCoordOnPVector */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      11
      RS[ ]	/* ReadStore */
      MUL[ ]	/* Multiply */
      PUSHW[ ]	/* 1 value pushed */
      1024
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 1 value pushed */
      0
      RS[ ]	/* ReadStore */
      SUB[ ]	/* Subtract */
      SHPIX[ ]	/* ShiftZoneByPixel */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      53
      FDEF[ ]	/* FunctionDefinition */
      MDAP[0]	/* MoveDirectAbsPt */
      SLOOP[ ]	/* SetLoopVariable */
      ALIGNRP[ ]	/* AlignRelativePt */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      54
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      DUP[ ]	/* DuplicateTopStack */
      GC[1]	/* GetCoordOnPVector */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      11
      RS[ ]	/* ReadStore */
      MUL[ ]	/* Multiply */
      PUSHW[ ]	/* 1 value pushed */
      1024
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 1 value pushed */
      0
      RS[ ]	/* ReadStore */
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 1 value pushed */
      1
      RS[ ]	/* ReadStore */
      MUL[ ]	/* Multiply */
      SHPIX[ ]	/* ShiftZoneByPixel */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      55
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      2 0
      SZPS[ ]	/* SetZonePointerS */
      CINDEX[ ]	/* CopyXToTopStack */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      DUP[ ]	/* DuplicateTopStack */
      GC[1]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      0
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      MD[0]	/* MeasureDistance */
      ROLL[ ]	/* RollTopThreeStack */
      ROLL[ ]	/* RollTopThreeStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      DUP[ ]	/* DuplicateTopStack */
      IF[ ]	/* If */
      DIV[ ]	/* Divide */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 1 value pushed */
      1
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 3 values pushed */
      54 1 1
      SZP2[ ]	/* SetZonePointer2 */
      SZP1[ ]	/* SetZonePointer1 */
      LOOPCALL[ ]	/* LoopAndCallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      56
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      0
      SZPS[ ]	/* SetZonePointerS */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 1 value pushed */
      9
      RS[ ]	/* ReadStore */
      CALL[ ]	/* CallFunction */
      NEG[ ]	/* Negate */
      ROLL[ ]	/* RollTopThreeStack */
      MDAP[0]	/* MoveDirectAbsPt */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      ROLL[ ]	/* RollTopThreeStack */
      SHPIX[ ]	/* ShiftZoneByPixel */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      57
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      0
      SZPS[ ]	/* SetZonePointerS */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      4
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 1 value pushed */
      9
      RS[ ]	/* ReadStore */
      CALL[ ]	/* CallFunction */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      96
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      64
      LTEQ[ ]	/* LessThenOrEqual */
      IF[ ]	/* If */
      PUSHB[ ]	/* 4 values pushed */
      2 32 3 32
      ELSE[ ]	/* Else */
      PUSHB[ ]	/* 4 values pushed */
      2 38 3 26
      EIF[ ]	/* EndIf */
      WS[ ]	/* WriteStore */
      WS[ ]	/* WriteStore */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      8
      RS[ ]	/* ReadStore */
      DUP[ ]	/* DuplicateTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      SWAP[ ]	/* SwapTopStack */
      GC[0]	/* GetCoordOnPVector */
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 1 value pushed */
      4
      RS[ ]	/* ReadStore */
      PUSHB[ ]	/* 1 value pushed */
      2
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      ADD[ ]	/* Add */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      1
      CALL[ ]	/* CallFunction */
      DUP[ ]	/* DuplicateTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      ROLL[ ]	/* RollTopThreeStack */
      SUB[ ]	/* Subtract */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      2
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      ABS[ ]	/* Absolute */
      SWAP[ ]	/* SwapTopStack */
      PUSHB[ ]	/* 1 value pushed */
      3
      RS[ ]	/* ReadStore */
      SUB[ ]	/* Subtract */
      ABS[ ]	/* Absolute */
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      2
      RS[ ]	/* ReadStore */
      SUB[ ]	/* Subtract */
      ELSE[ ]	/* Else */
      PUSHB[ ]	/* 1 value pushed */
      3
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 1 value pushed */
      3
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      2
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      SUB[ ]	/* Subtract */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      4
      MINDEX[ ]	/* MoveXToTopStack */
      SWAP[ ]	/* SwapTopStack */
      GC[0]	/* GetCoordOnPVector */
      SUB[ ]	/* Subtract */
      SHPIX[ ]	/* ShiftZoneByPixel */
      ELSE[ ]	/* Else */
      SWAP[ ]	/* SwapTopStack */
      PUSHB[ ]	/* 1 value pushed */
      8
      RS[ ]	/* ReadStore */
      GC[0]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      8
      RS[ ]	/* ReadStore */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      ADD[ ]	/* Add */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      4
      RS[ ]	/* ReadStore */
      PUSHB[ ]	/* 1 value pushed */
      2
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      ADD[ ]	/* Add */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      1
      CALL[ ]	/* CallFunction */
      SWAP[ ]	/* SwapTopStack */
      PUSHB[ ]	/* 1 value pushed */
      4
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 1 value pushed */
      1
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      5
      CINDEX[ ]	/* CopyXToTopStack */
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 1 value pushed */
      5
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      2
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      PUSHB[ ]	/* 1 value pushed */
      4
      MINDEX[ ]	/* MoveXToTopStack */
      SUB[ ]	/* Subtract */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      ADD[ ]	/* Add */
      ABS[ ]	/* Absolute */
      SWAP[ ]	/* SwapTopStack */
      PUSHB[ ]	/* 1 value pushed */
      3
      CINDEX[ ]	/* CopyXToTopStack */
      ADD[ ]	/* Add */
      ABS[ ]	/* Absolute */
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      POP[ ]	/* PopTopStack */
      ELSE[ ]	/* Else */
      SWAP[ ]	/* SwapTopStack */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      4
      MINDEX[ ]	/* MoveXToTopStack */
      SWAP[ ]	/* SwapTopStack */
      GC[0]	/* GetCoordOnPVector */
      SUB[ ]	/* Subtract */
      SHPIX[ ]	/* ShiftZoneByPixel */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      58
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      0
      SZPS[ ]	/* SetZonePointerS */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      5
      MINDEX[ ]	/* MoveXToTopStack */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      SWAP[ ]	/* SwapTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      SHPIX[ ]	/* ShiftZoneByPixel */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      59
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      0
      SZPS[ ]	/* SetZonePointerS */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      8
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      GC[0]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      1
      CALL[ ]	/* CallFunction */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      SHPIX[ ]	/* ShiftZoneByPixel */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      60
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      0
      SZPS[ ]	/* SetZonePointerS */
      PUSHB[ ]	/* 1 value pushed */
      3
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 1 value pushed */
      0
      EQ[ ]	/* Equal */
      IF[ ]	/* If */
      MDAP[0]	/* MoveDirectAbsPt */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      SWAP[ ]	/* SwapTopStack */
      POP[ ]	/* PopTopStack */
      ELSE[ ]	/* Else */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      5
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 1 value pushed */
      6
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      5
      CINDEX[ ]	/* CopyXToTopStack */
      MD[0]	/* MeasureDistance */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      SUB[ ]	/* Subtract */
      PUSHW[ ]	/* 2 values pushed */
      2048 2048
      MUL[ ]	/* Multiply */
      MUL[ ]	/* Multiply */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      IF[ ]	/* If */
      DIV[ ]	/* Divide */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      MUL[ ]	/* Multiply */
      PUSHW[ ]	/* 1 value pushed */
      1024
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      ADD[ ]	/* Add */
      SWAP[ ]	/* SwapTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      ROLL[ ]	/* RollTopThreeStack */
      SHPIX[ ]	/* ShiftZoneByPixel */
      SWAP[ ]	/* SwapTopStack */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      61
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      0
      SZPS[ ]	/* SetZonePointerS */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      8
      RS[ ]	/* ReadStore */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      DUP[ ]	/* DuplicateTopStack */
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 1 value pushed */
      32
      ADD[ ]	/* Add */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      2
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      ROLL[ ]	/* RollTopThreeStack */
      SHPIX[ ]	/* ShiftZoneByPixel */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      62
      FDEF[ ]	/* FunctionDefinition */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      GC[0]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      GC[0]	/* GetCoordOnPVector */
      GT[ ]	/* GreaterThan */
      IF[ ]	/* If */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      EIF[ ]	/* EndIf */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSHB[ ]	/* 2 values pushed */
      46 1
      SZP1[ ]	/* SetZonePointer1 */
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      63
      FDEF[ ]	/* FunctionDefinition */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      GC[0]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      GC[0]	/* GetCoordOnPVector */
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      EIF[ ]	/* EndIf */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSHB[ ]	/* 2 values pushed */
      46 1
      SZP1[ ]	/* SetZonePointer1 */
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      64
      FDEF[ ]	/* FunctionDefinition */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      GC[0]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      GC[0]	/* GetCoordOnPVector */
      GT[ ]	/* GreaterThan */
      IF[ ]	/* If */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      EIF[ ]	/* EndIf */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      GC[0]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      GC[0]	/* GetCoordOnPVector */
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      EIF[ ]	/* EndIf */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSHB[ ]	/* 2 values pushed */
      46 1
      SZP1[ ]	/* SetZonePointer1 */
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      65
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      56
      CALL[ ]	/* CallFunction */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      GC[0]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      GC[0]	/* GetCoordOnPVector */
      GT[ ]	/* GreaterThan */
      IF[ ]	/* If */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      EIF[ ]	/* EndIf */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSHB[ ]	/* 2 values pushed */
      46 1
      SZP1[ ]	/* SetZonePointer1 */
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      66
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      57
      CALL[ ]	/* CallFunction */
      ROLL[ ]	/* RollTopThreeStack */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      PUSHB[ ]	/* 1 value pushed */
      4
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      ROLL[ ]	/* RollTopThreeStack */
      SHPIX[ ]	/* ShiftZoneByPixel */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      GC[0]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      GC[0]	/* GetCoordOnPVector */
      GT[ ]	/* GreaterThan */
      IF[ ]	/* If */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      EIF[ ]	/* EndIf */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSHB[ ]	/* 2 values pushed */
      46 1
      SZP1[ ]	/* SetZonePointer1 */
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      4
      RS[ ]	/* ReadStore */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSHB[ ]	/* 1 value pushed */
      46
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      67
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      0
      SZPS[ ]	/* SetZonePointerS */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      4
      MINDEX[ ]	/* MoveXToTopStack */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 1 value pushed */
      9
      RS[ ]	/* ReadStore */
      CALL[ ]	/* CallFunction */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      SWAP[ ]	/* SwapTopStack */
      SHPIX[ ]	/* ShiftZoneByPixel */
      PUSHB[ ]	/* 2 values pushed */
      46 1
      SZP1[ ]	/* SetZonePointer1 */
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      68
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      8 4
      CINDEX[ ]	/* CopyXToTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 1 value pushed */
      0
      SZPS[ ]	/* SetZonePointerS */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      4
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 1 value pushed */
      9
      RS[ ]	/* ReadStore */
      CALL[ ]	/* CallFunction */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      96
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      64
      LTEQ[ ]	/* LessThenOrEqual */
      IF[ ]	/* If */
      PUSHB[ ]	/* 4 values pushed */
      2 32 3 32
      ELSE[ ]	/* Else */
      PUSHB[ ]	/* 4 values pushed */
      2 38 3 26
      EIF[ ]	/* EndIf */
      WS[ ]	/* WriteStore */
      WS[ ]	/* WriteStore */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      GC[1]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      4
      RS[ ]	/* ReadStore */
      PUSHB[ ]	/* 1 value pushed */
      2
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      ADD[ ]	/* Add */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      1
      CALL[ ]	/* CallFunction */
      DUP[ ]	/* DuplicateTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      ROLL[ ]	/* RollTopThreeStack */
      SUB[ ]	/* Subtract */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      2
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      ABS[ ]	/* Absolute */
      SWAP[ ]	/* SwapTopStack */
      PUSHB[ ]	/* 1 value pushed */
      3
      RS[ ]	/* ReadStore */
      SUB[ ]	/* Subtract */
      ABS[ ]	/* Absolute */
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      2
      RS[ ]	/* ReadStore */
      SUB[ ]	/* Subtract */
      ELSE[ ]	/* Else */
      PUSHB[ ]	/* 1 value pushed */
      3
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 1 value pushed */
      3
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      2
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      GC[0]	/* GetCoordOnPVector */
      SUB[ ]	/* Subtract */
      SHPIX[ ]	/* ShiftZoneByPixel */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      SWAP[ ]	/* SwapTopStack */
      SHPIX[ ]	/* ShiftZoneByPixel */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      GC[0]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      1
      CALL[ ]	/* CallFunction */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      SHPIX[ ]	/* ShiftZoneByPixel */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 2 values pushed */
      46 1
      SZP1[ ]	/* SetZonePointer1 */
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      69
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      56
      CALL[ ]	/* CallFunction */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSHB[ ]	/* 2 values pushed */
      46 1
      SZP1[ ]	/* SetZonePointer1 */
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      70
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      57
      CALL[ ]	/* CallFunction */
      POP[ ]	/* PopTopStack */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      PUSHB[ ]	/* 1 value pushed */
      4
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      SWAP[ ]	/* SwapTopStack */
      SHPIX[ ]	/* ShiftZoneByPixel */
      PUSHB[ ]	/* 2 values pushed */
      46 1
      SZP1[ ]	/* SetZonePointer1 */
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      4
      RS[ ]	/* ReadStore */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSHB[ ]	/* 1 value pushed */
      46
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      71
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      0
      SZP2[ ]	/* SetZonePointer2 */
      DUP[ ]	/* DuplicateTopStack */
      GC[1]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      0
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 3 values pushed */
      0 1 1
      SZP2[ ]	/* SetZonePointer2 */
      SZP1[ ]	/* SetZonePointer1 */
      SZP0[ ]	/* SetZonePointer0 */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSHB[ ]	/* 1 value pushed */
      52
      LOOPCALL[ ]	/* LoopAndCallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      72
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      0
      SZP2[ ]	/* SetZonePointer2 */
      DUP[ ]	/* DuplicateTopStack */
      GC[1]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      0
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 3 values pushed */
      0 1 1
      SZP2[ ]	/* SetZonePointer2 */
      SZP1[ ]	/* SetZonePointer1 */
      SZP0[ ]	/* SetZonePointer0 */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSHB[ ]	/* 1 value pushed */
      52
      LOOPCALL[ ]	/* LoopAndCallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      73
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      0 1
      SZP1[ ]	/* SetZonePointer1 */
      SZP0[ ]	/* SetZonePointer0 */
      PUSHB[ ]	/* 1 value pushed */
      53
      LOOPCALL[ ]	/* LoopAndCallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      74
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      55
      LOOPCALL[ ]	/* LoopAndCallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      75
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      0
      SZPS[ ]	/* SetZonePointerS */
      RCVT[ ]	/* ReadCVT */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      DUP[ ]	/* DuplicateTopStack */
      GC[0]	/* GetCoordOnPVector */
      ROLL[ ]	/* RollTopThreeStack */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      SHPIX[ ]	/* ShiftZoneByPixel */
      PUSHB[ ]	/* 2 values pushed */
      46 1
      SZP1[ ]	/* SetZonePointer1 */
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      76
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      8
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 1 value pushed */
      75
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      77
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      0 0 68
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      78
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      0 1 68
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      79
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      1 0 68
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      80
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      1 1 68
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      81
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      0 0 69
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      82
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      0 1 69
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      83
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      1 0 69
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      84
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      1 1 69
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      85
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      0 0 65
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      86
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      0 1 65
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      87
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      1 0 65
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      88
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      1 1 65
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      89
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      0 0 67
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      90
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      0 1 67
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      91
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      1 0 67
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      92
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      1 1 67
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      93
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      0 0 70
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      94
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      0 1 70
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      95
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      1 0 70
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      96
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      1 1 70
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      97
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      0 0 66
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      98
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      0 1 66
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      99
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      1 0 66
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      100
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      1 1 66
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      101
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      58
      CALL[ ]	/* CallFunction */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSHB[ ]	/* 2 values pushed */
      46 1
      SZP1[ ]	/* SetZonePointer1 */
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      102
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      58
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      62
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      103
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      58
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      63
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      104
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      0
      SZPS[ ]	/* SetZonePointerS */
      PUSHB[ ]	/* 1 value pushed */
      58
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      64
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      105
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      59
      CALL[ ]	/* CallFunction */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSHB[ ]	/* 2 values pushed */
      46 1
      SZP1[ ]	/* SetZonePointer1 */
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      106
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      59
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      62
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      107
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      59
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      63
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      108
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      59
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      64
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      109
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      60
      CALL[ ]	/* CallFunction */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSHB[ ]	/* 2 values pushed */
      46 1
      SZP1[ ]	/* SetZonePointer1 */
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      110
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      60
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      62
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      111
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      60
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      63
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      112
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      60
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      64
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      113
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      61
      CALL[ ]	/* CallFunction */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSHB[ ]	/* 2 values pushed */
      46 1
      SZP1[ ]	/* SetZonePointer1 */
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      114
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      61
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      62
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      115
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      61
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      63
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      116
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      61
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      64
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      117
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 4 values pushed */
      9 4 2 3
      RCVT[ ]	/* ReadCVT */
      IF[ ]	/* If */
      POP[ ]	/* PopTopStack */
      ELSE[ ]	/* Else */
      SWAP[ ]	/* SwapTopStack */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      WS[ ]	/* WriteStore */
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      8
      NEG[ ]	/* Negate */
      PUSHB[ ]	/* 1 value pushed */
      3
      DEPTH[ ]	/* GetDepthStack */
      LT[ ]	/* LessThan */
      JROT[ ]	/* JumpRelativeOnTrue */
      PUSHB[ ]	/* 2 values pushed */
      5 1
      SZP2[ ]	/* SetZonePointer2 */
      RCVT[ ]	/* ReadCVT */
      IF[ ]	/* If */
      IUP[0]	/* InterpolateUntPts */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
    </assembly>
  </fpgm>

  <prep>
    <assembly>
      SVTCA[0]	/* SetFPVectorToAxis */
      MPPEM[ ]	/* MeasurePixelPerEm */
      PUSHW[ ]	/* 1 value pushed */
      200
      GT[ ]	/* GreaterThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 2 values pushed */
      1 1
      INSTCTRL[ ]	/* SetInstrExecControl */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 1 value pushed */
      1
      PUSHW[ ]	/* 2 values pushed */
      2048 2048
      MUL[ ]	/* Multiply */
      WCVTF[ ]	/* WriteCVTInFUnits */
      PUSHB[ ]	/* 2 values pushed */
      0 6
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 3 values pushed */
      0 1 0
      LOOPCALL[ ]	/* LoopAndCallFunction */
      PUSHB[ ]	/* 2 values pushed */
      0 6
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 4 values pushed */
      11 4 1 8
      LOOPCALL[ ]	/* LoopAndCallFunction */
      PUSHB[ ]	/* 2 values pushed */
      0 6
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 4 values pushed */
      17 2 1 8
      LOOPCALL[ ]	/* LoopAndCallFunction */
      PUSHB[ ]	/* 2 values pushed */
      0 7
      WS[ ]	/* WriteStore */
      PUSHW[ ]	/* 3 values pushed */
      768 1 9
      LOOPCALL[ ]	/* LoopAndCallFunction */
      PUSHB[ ]	/* 2 values pushed */
      0 8
      WS[ ]	/* WriteStore */
      PUSHW[ ]	/* 3 values pushed */
      64 1 9
      LOOPCALL[ ]	/* LoopAndCallFunction */
      PUSHB[ ]	/* 2 values pushed */
      3 0
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSHB[ ]	/* 2 values pushed */
      36 1
      GETINFO[ ]	/* GetInfo */
      LTEQ[ ]	/* LessThenOrEqual */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      GETINFO[ ]	/* GetInfo */
      IF[ ]	/* If */
      PUSHB[ ]	/* 2 values pushed */
      3 100
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSHB[ ]	/* 2 values pushed */
      38 1
      GETINFO[ ]	/* GetInfo */
      LTEQ[ ]	/* LessThenOrEqual */
      IF[ ]	/* If */
      PUSHW[ ]	/* 3 values pushed */
      2176 1 1088
      GETINFO[ ]	/* GetInfo */
      MUL[ ]	/* Multiply */
      EQ[ ]	/* Equal */
      IF[ ]	/* If */
      PUSHB[ ]	/* 2 values pushed */
      3 0
      WCVTP[ ]	/* WriteCVTInPixels */
      EIF[ ]	/* EndIf */
      EIF[ ]	/* EndIf */
      EIF[ ]	/* EndIf */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 4 values pushed */
      13 4 1 12
      LOOPCALL[ ]	/* LoopAndCallFunction */
      PUSHW[ ]	/* 1 value pushed */
      511
      SCANCTRL[ ]	/* ScanConversionControl */
      PUSHB[ ]	/* 1 value pushed */
      4
      SCANTYPE[ ]	/* ScanType */
      PUSHB[ ]	/* 2 values pushed */
      2 0
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSHB[ ]	/* 2 values pushed */
      5 100
      WCVTP[ ]	/* WriteCVTInPixels */
    </assembly>
  </prep>

  <cvt>
    <cv index="0" value="0"/>
    <cv index="1" value="0"/>
    <cv index="2" value="0"/>
    <cv index="3" value="0"/>
    <cv index="4" value="0"/>
    <cv index="5" value="0"/>
    <cv index="6" value="0"/>
    <cv index="7" value="0"/>
    <cv index="8" value="0"/>
    <cv index="9" value="100"/>
    <cv index="10" value="100"/>
    <cv index="11" value="69"/>
    <cv index="12" value="69"/>
    <cv index="13" value="705"/>
    <cv index="14" value="-22"/>
    <cv index="15" value="533"/>
    <cv index="16" value="0"/>
    <cv index="17" value="705"/>
    <cv index="18" value="-22"/>
    <cv index="19" value="533"/>
    <cv index="20" value="0"/>
  </cvt>

  <loca>
    <!-- The 'loca' table will be calculated by the compiler -->
  </loca>

  <glyf>

    <!-- The xMin, yMin, xMax and yMax values
         will be recalculated by the compiler. -->

    <TTGlyph name=".notdef" xMin="50" yMin="0" xMax="200" yMax="533">
      <contour>
        <pt x="50" y="0" on="1"/>
        <pt x="50" y="533" on="1"/>
        <pt x="200" y="533" on="1"/>
        <pt x="200" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="100" y="50" on="1"/>
        <pt x="150" y="50" on="1"/>
        <pt x="150" y="483" on="1"/>
        <pt x="100" y="483" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 6 values pushed */
          6 4 1 0 2 48
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name=".null"/><!-- contains no outline data -->

    <TTGlyph name="A" xMin="30" yMin="-50" xMax="819" yMax="728">
      <contour>
        <pt x="30" y="43" on="1"/>
        <pt x="30" y="71" on="0"/>
        <pt x="61" y="125" on="0"/>
        <pt x="74" y="125" on="1"/>
        <pt x="84" y="125" on="0"/>
        <pt x="87" y="106" on="1"/>
        <pt x="89" y="85" on="0"/>
        <pt x="130" y="57" on="0"/>
        <pt x="151" y="57" on="1"/>
        <pt x="160" y="57" on="0"/>
        <pt x="164" y="59" on="1"/>
        <pt x="201" y="75" on="0"/>
        <pt x="277" y="182" on="1"/>
        <pt x="432" y="400" on="0"/>
        <pt x="542" y="625" on="1"/>
        <pt x="559" y="659" on="1"/>
        <pt x="567" y="659" on="1"/>
        <pt x="574" y="659" on="0"/>
        <pt x="576" y="661" on="0"/>
        <pt x="576" y="668" on="1"/>
        <pt x="576" y="672" on="0"/>
        <pt x="578" y="680" on="1"/>
        <pt x="586" y="696" on="0"/>
        <pt x="637" y="728" on="0"/>
        <pt x="660" y="728" on="1"/>
        <pt x="676" y="728" on="0"/>
        <pt x="675" y="712" on="1"/>
        <pt x="675" y="571" on="1"/>
        <pt x="675" y="409" on="0"/>
        <pt x="688" y="252" on="1"/>
        <pt x="693" y="174" on="0"/>
        <pt x="706" y="113" on="1"/>
        <pt x="707" y="108" on="0"/>
        <pt x="714" y="80" on="0"/>
        <pt x="719" y="60" on="0"/>
        <pt x="720" y="57" on="1"/>
        <pt x="725" y="46" on="0"/>
        <pt x="743" y="39" on="1"/>
        <pt x="754" y="45" on="1"/>
        <pt x="788" y="61" on="0"/>
        <pt x="803" y="61" on="1"/>
        <pt x="819" y="61" on="0"/>
        <pt x="819" y="47" on="1"/>
        <pt x="818" y="43" on="0"/>
        <pt x="814" y="35" on="1"/>
        <pt x="802" y="19" on="0"/>
        <pt x="761" y="-4" on="1"/>
        <pt x="734" y="-18" on="0"/>
        <pt x="713" y="-24" on="1"/>
        <pt x="695" y="-30" on="0"/>
        <pt x="675" y="-30" on="1"/>
        <pt x="642" y="-30" on="0"/>
        <pt x="627" y="-6" on="1"/>
        <pt x="623" y="0" on="0"/>
        <pt x="614" y="34" on="1"/>
        <pt x="600" y="92" on="0"/>
        <pt x="594" y="139" on="1"/>
        <pt x="592" y="158" on="0"/>
        <pt x="591" y="160" on="1"/>
        <pt x="591" y="163" on="1"/>
        <pt x="460" y="163" on="1"/>
        <pt x="329" y="164" on="1"/>
        <pt x="316" y="145" on="1"/>
        <pt x="281" y="93" on="0"/>
        <pt x="266" y="75" on="1"/>
        <pt x="174" y="-50" on="0"/>
        <pt x="119" y="-50" on="1"/>
        <pt x="84" y="-50" on="0"/>
        <pt x="30" y="3" on="0"/>
      </contour>
      <contour>
        <pt x="584" y="249" on="1"/>
        <pt x="580" y="322" on="0"/>
        <pt x="574" y="520" on="1"/>
        <pt x="574" y="581" on="1"/>
        <pt x="563" y="560" on="1"/>
        <pt x="497" y="426" on="0"/>
        <pt x="412" y="290" on="1"/>
        <pt x="407" y="282" on="0"/>
        <pt x="382" y="244" on="0"/>
        <pt x="372" y="228" on="1"/>
        <pt x="370" y="224" on="1"/>
        <pt x="371" y="224" on="1"/>
        <pt x="383" y="228" on="1"/>
        <pt x="393" y="232" on="1"/>
        <pt x="586" y="232" on="1"/>
      </contour>
      <instructions><assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          39
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 13 values pushed */
          72 69 29 3 8 2 42 37 2 5 1 2 74
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 13 values pushed */
          72 69 29 3 9 2 42 37 2 5 1 2 74
          EIF[ ]	/* EndIf */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          22
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 44 values pushed */
          0 2 3 8 3 2 8 112 0 0 6 1 6 0 1 112 9 1 8 0 6 0 8 6 100
          4 1 1 0 7 1 7 95 0 3 3 13 75 0 5 5 14 5 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          39
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 41 values pushed */
          0 3 2 3 114 0 2 8 2 114 0 0 6 1 6 0 1 112 9 1 8 0 6 0 8
          6 100 4 1 1 0 7 1 7 95 0 5 5 14 5 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 47 values pushed */
          0 3 2 3 114 0 2 9 2 114 0 8 9 6 9 8 104 0 0 6 1 6 0 1 112
          0 9 0 6 0 9 6 100 4 1 1 0 7 1 7 95 0 5 5 14 5 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 14 values pushed */
          83 82 59 36 70 40 46 38 38 35 34 10 6 29
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="B" xMin="32" yMin="-22" xMax="664" yMax="705">
      <contour>
        <pt x="305" y="342" on="1"/>
        <pt x="292" y="342" on="0"/>
        <pt x="292" y="353" on="1"/>
        <pt x="292" y="370" on="0"/>
        <pt x="323" y="391" on="1"/>
        <pt x="337" y="400" on="0"/>
        <pt x="381" y="415" on="1"/>
        <pt x="421" y="430" on="0"/>
        <pt x="429" y="432" on="1"/>
        <pt x="506" y="461" on="0"/>
        <pt x="533" y="487" on="1"/>
        <pt x="563" y="513" on="0"/>
        <pt x="563" y="555" on="1"/>
        <pt x="563" y="562" on="1"/>
        <pt x="563" y="576" on="0"/>
        <pt x="556" y="590" on="1"/>
        <pt x="535" y="631" on="0"/>
        <pt x="475" y="636" on="1"/>
        <pt x="452" y="636" on="0"/>
        <pt x="432" y="630" on="1"/>
        <pt x="381" y="616" on="0"/>
        <pt x="330" y="539" on="1"/>
        <pt x="313" y="515" on="0"/>
        <pt x="296" y="480" on="1"/>
        <pt x="248" y="387" on="0"/>
        <pt x="210" y="238" on="1"/>
        <pt x="196" y="183" on="0"/>
        <pt x="173" y="120" on="1"/>
        <pt x="135" y="31" on="0"/>
        <pt x="121" y="16" on="1"/>
        <pt x="108" y="1" on="0"/>
        <pt x="62" y="-22" on="0"/>
        <pt x="32" y="-22" on="0"/>
        <pt x="32" y="-10" on="1"/>
        <pt x="32" y="-6" on="0"/>
        <pt x="42" y="16" on="1"/>
        <pt x="88" y="106" on="0"/>
        <pt x="112" y="206" on="1"/>
        <pt x="160" y="399" on="0"/>
        <pt x="187" y="585" on="1"/>
        <pt x="188" y="592" on="0"/>
        <pt x="190" y="607" on="0"/>
        <pt x="190" y="611" on="1"/>
        <pt x="191" y="615" on="1"/>
        <pt x="191" y="618" on="0"/>
        <pt x="173" y="608" on="1"/>
        <pt x="146" y="595" on="0"/>
        <pt x="131" y="594" on="1"/>
        <pt x="113" y="594" on="0"/>
        <pt x="113" y="606" on="1"/>
        <pt x="113" y="624" on="0"/>
        <pt x="144" y="644" on="1"/>
        <pt x="150" y="649" on="0"/>
        <pt x="248" y="698" on="0"/>
        <pt x="255" y="700" on="1"/>
        <pt x="264" y="703" on="0"/>
        <pt x="267" y="703" on="1"/>
        <pt x="277" y="705" on="0"/>
        <pt x="279" y="705" on="1"/>
        <pt x="295" y="705" on="0"/>
        <pt x="295" y="693" on="1"/>
        <pt x="295" y="687" on="0"/>
        <pt x="280" y="583" on="0"/>
        <pt x="278" y="575" on="1"/>
        <pt x="278" y="572" on="0"/>
        <pt x="287" y="582" on="1"/>
        <pt x="382" y="685" on="0"/>
        <pt x="507" y="703" on="1"/>
        <pt x="515" y="704" on="0"/>
        <pt x="540" y="704" on="1"/>
        <pt x="638" y="704" on="0"/>
        <pt x="661" y="626" on="1"/>
        <pt x="664" y="616" on="0"/>
        <pt x="664" y="599" on="1"/>
        <pt x="664" y="589" on="0"/>
        <pt x="662" y="579" on="1"/>
        <pt x="653" y="542" on="0"/>
        <pt x="630" y="511" on="1"/>
        <pt x="584" y="457" on="0"/>
        <pt x="504" y="413" on="1"/>
        <pt x="491" y="407" on="1"/>
        <pt x="504" y="402" on="1"/>
        <pt x="559" y="384" on="0"/>
        <pt x="627" y="301" on="0"/>
        <pt x="627" y="244" on="1"/>
        <pt x="627" y="213" on="0"/>
        <pt x="616" y="180" on="1"/>
        <pt x="592" y="108" on="0"/>
        <pt x="428" y="-6" on="0"/>
        <pt x="331" y="-19" on="1"/>
        <pt x="312" y="-22" on="0"/>
        <pt x="284" y="-22" on="1"/>
        <pt x="208" y="-22" on="0"/>
        <pt x="158" y="28" on="1"/>
        <pt x="144" y="42" on="0"/>
        <pt x="146" y="50" on="1"/>
        <pt x="150" y="67" on="0"/>
        <pt x="207" y="103" on="0"/>
        <pt x="230" y="103" on="1"/>
        <pt x="237" y="103" on="0"/>
        <pt x="251" y="89" on="1"/>
        <pt x="293" y="47" on="0"/>
        <pt x="357" y="47" on="1"/>
        <pt x="435" y="47" on="0"/>
        <pt x="486" y="93" on="1"/>
        <pt x="526" y="135" on="0"/>
        <pt x="526" y="198" on="1"/>
        <pt x="526" y="210" on="1"/>
        <pt x="526" y="226" on="0"/>
        <pt x="521" y="241" on="1"/>
        <pt x="503" y="293" on="0"/>
        <pt x="458" y="319" on="1"/>
        <pt x="414" y="345" on="0"/>
        <pt x="350" y="345" on="1"/>
        <pt x="345" y="345" on="0"/>
        <pt x="311" y="342" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 19 values pushed */
          60 1 1 4 43 1 3 1 80 63 2 0 3 33 1 2 8 4 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          23
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 47 values pushed */
          0 1 4 3 4 1 3 112 0 3 0 4 3 0 110 0 7 0 8 8 7 104 9 10 2
          0 0 4 91 5 1 4 4 13 75 0 8 8 2 92 6 1 2 2 14 2 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 48 values pushed */
          0 1 4 3 4 1 3 112 0 3 0 4 3 0 110 0 7 0 8 0 7 8 112 9 10
          2 0 0 4 91 5 1 4 4 13 75 0 8 8 2 92 6 1 2 2 14 2 76
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 27 values pushed */
          1 0 113 112 103 101 98 97 92 90 70 68 59 57 48 46 32 31 18 17 0 115 1 115 11
          6 20
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="C" xMin="12" yMin="-25" xMax="533" yMax="705">
      <contour>
        <pt x="481" y="171" on="1"/>
        <pt x="496" y="171" on="0"/>
        <pt x="496" y="160" on="1"/>
        <pt x="496" y="150" on="0"/>
        <pt x="476" y="123" on="1"/>
        <pt x="426" y="56" on="0"/>
        <pt x="273" y="-25" on="0"/>
        <pt x="201" y="-25" on="1"/>
        <pt x="135" y="-25" on="0"/>
        <pt x="88" y="12" on="1"/>
        <pt x="12" y="68" on="0"/>
        <pt x="12" y="202" on="1"/>
        <pt x="12" y="260" on="0"/>
        <pt x="29" y="326" on="1"/>
        <pt x="68" y="478" on="0"/>
        <pt x="161" y="574" on="1"/>
        <pt x="214" y="628" on="0"/>
        <pt x="349" y="696" on="0"/>
        <pt x="418" y="703" on="1"/>
        <pt x="424" y="704" on="0"/>
        <pt x="433" y="704" on="1"/>
        <pt x="435" y="705" on="0"/>
        <pt x="457" y="705" on="1"/>
        <pt x="533" y="702" on="0"/>
        <pt x="533" y="640" on="1"/>
        <pt x="533" y="636" on="0"/>
        <pt x="531" y="620" on="1"/>
        <pt x="524" y="578" on="0"/>
        <pt x="485" y="506" on="1"/>
        <pt x="472" y="481" on="0"/>
        <pt x="444" y="456" on="0"/>
        <pt x="419" y="448" on="1"/>
        <pt x="403" y="444" on="0"/>
        <pt x="396" y="444" on="1"/>
        <pt x="385" y="444" on="0"/>
        <pt x="381" y="452" on="1"/>
        <pt x="379" y="456" on="0"/>
        <pt x="390" y="478" on="1"/>
        <pt x="414" y="522" on="0"/>
        <pt x="428" y="563" on="1"/>
        <pt x="433" y="580" on="0"/>
        <pt x="433" y="594" on="1"/>
        <pt x="433" y="617" on="0"/>
        <pt x="408" y="636" on="0"/>
        <pt x="381" y="636" on="1"/>
        <pt x="334" y="636" on="0"/>
        <pt x="289" y="615" on="1"/>
        <pt x="213" y="576" on="0"/>
        <pt x="159" y="456" on="1"/>
        <pt x="112" y="348" on="0"/>
        <pt x="112" y="247" on="1"/>
        <pt x="112" y="156" on="0"/>
        <pt x="194" y="44" on="0"/>
        <pt x="273" y="44" on="1"/>
        <pt x="347" y="44" on="0"/>
        <pt x="398" y="121" on="1"/>
        <pt x="411" y="141" on="0"/>
        <pt x="458" y="171" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 64 values pushed */
          24 1 4 2 1 74 0 4 2 3 2 4 3 112 0 3 0 2 3 0 110 6 1 0 5
          2 0 5 110 0 2 2 13 75 0 5 5 1 91 0 1 1 14 1 76 1 0 54 52 45
          43 34 32 23 18 8 6 0 57 1 57 7 6 20
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="D" xMin="19" yMin="0" xMax="766" yMax="683">
      <contour>
        <pt x="37" y="475" on="1"/>
        <pt x="19" y="475" on="0"/>
        <pt x="19" y="487" on="1"/>
        <pt x="19" y="489" on="0"/>
        <pt x="22" y="499" on="0"/>
        <pt x="22" y="502" on="1"/>
        <pt x="44" y="571" on="0"/>
        <pt x="220" y="675" on="0"/>
        <pt x="327" y="682" on="1"/>
        <pt x="356" y="682" on="1"/>
        <pt x="386" y="683" on="0"/>
        <pt x="408" y="683" on="1"/>
        <pt x="505" y="683" on="0"/>
        <pt x="615" y="664" on="0"/>
        <pt x="667" y="633" on="1"/>
        <pt x="766" y="571" on="0"/>
        <pt x="766" y="450" on="1"/>
        <pt x="766" y="416" on="0"/>
        <pt x="757" y="375" on="1"/>
        <pt x="725" y="236" on="0"/>
        <pt x="586" y="132" on="1"/>
        <pt x="449" y="29" on="0"/>
        <pt x="279" y="6" on="1"/>
        <pt x="248" y="1" on="0"/>
        <pt x="160" y="0" on="1"/>
        <pt x="83" y="0" on="0"/>
        <pt x="79" y="2" on="1"/>
        <pt x="72" y="6" on="0"/>
        <pt x="72" y="12" on="1"/>
        <pt x="72" y="23" on="0"/>
        <pt x="88" y="37" on="1"/>
        <pt x="108" y="56" on="0"/>
        <pt x="133" y="64" on="1"/>
        <pt x="144" y="68" on="1"/>
        <pt x="152" y="88" on="1"/>
        <pt x="247" y="328" on="0"/>
        <pt x="272" y="587" on="1"/>
        <pt x="275" y="613" on="0"/>
        <pt x="272" y="613" on="1"/>
        <pt x="272" y="613" on="0"/>
        <pt x="269" y="613" on="1"/>
        <pt x="205" y="609" on="0"/>
        <pt x="132" y="574" on="0"/>
        <pt x="119" y="532" on="1"/>
        <pt x="118" y="530" on="0"/>
        <pt x="114" y="520" on="0"/>
        <pt x="113" y="518" on="1"/>
        <pt x="102" y="502" on="0"/>
        <pt x="57" y="477" on="0"/>
      </contour>
      <contour>
        <pt x="665" y="407" on="1"/>
        <pt x="665" y="524" on="0"/>
        <pt x="558" y="580" on="1"/>
        <pt x="482" y="614" on="0"/>
        <pt x="383" y="614" on="1"/>
        <pt x="370" y="614" on="0"/>
        <pt x="370" y="612" on="1"/>
        <pt x="370" y="597" on="0"/>
        <pt x="355" y="502" on="1"/>
        <pt x="320" y="299" on="0"/>
        <pt x="242" y="103" on="1"/>
        <pt x="228" y="69" on="1"/>
        <pt x="265" y="69" on="1"/>
        <pt x="385" y="72" on="0"/>
        <pt x="481" y="119" on="1"/>
        <pt x="631" y="197" on="0"/>
        <pt x="660" y="347" on="1"/>
        <pt x="665" y="371" on="0"/>
        <pt x="665" y="392" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 43 values pushed */
          2 1 0 3 1 74 0 0 3 5 3 0 5 112 0 1 4 1 3 0 1 3 99 0 5
          5 2 91 0 2 2 16 2 76 38 43 76 43 86 16 6 6 26
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="E" xMin="30" yMin="-22" xMax="564" yMax="705">
      <contour>
        <pt x="223" y="362" on="1"/>
        <pt x="144" y="402" on="0"/>
        <pt x="144" y="470" on="1"/>
        <pt x="144" y="520" on="0"/>
        <pt x="176" y="564" on="1"/>
        <pt x="213" y="619" on="0"/>
        <pt x="351" y="697" on="0"/>
        <pt x="424" y="704" on="1"/>
        <pt x="427" y="704" on="0"/>
        <pt x="446" y="705" on="0"/>
        <pt x="451" y="705" on="1"/>
        <pt x="538" y="705" on="0"/>
        <pt x="557" y="664" on="1"/>
        <pt x="564" y="651" on="0"/>
        <pt x="564" y="637" on="1"/>
        <pt x="564" y="610" on="0"/>
        <pt x="540" y="573" on="1"/>
        <pt x="529" y="559" on="0"/>
        <pt x="481" y="534" on="0"/>
        <pt x="464" y="534" on="1"/>
        <pt x="448" y="534" on="0"/>
        <pt x="448" y="545" on="1"/>
        <pt x="448" y="552" on="0"/>
        <pt x="455" y="562" on="1"/>
        <pt x="463" y="577" on="0"/>
        <pt x="463" y="591" on="1"/>
        <pt x="463" y="636" on="0"/>
        <pt x="380" y="636" on="1"/>
        <pt x="290" y="636" on="0"/>
        <pt x="258" y="568" on="1"/>
        <pt x="245" y="544" on="0"/>
        <pt x="245" y="516" on="1"/>
        <pt x="245" y="468" on="0"/>
        <pt x="288" y="439" on="1"/>
        <pt x="328" y="413" on="0"/>
        <pt x="391" y="410" on="1"/>
        <pt x="415" y="410" on="0"/>
        <pt x="415" y="398" on="1"/>
        <pt x="415" y="388" on="0"/>
        <pt x="400" y="374" on="1"/>
        <pt x="370" y="344" on="0"/>
        <pt x="326" y="341" on="1"/>
        <pt x="288" y="340" on="0"/>
        <pt x="260" y="327" on="1"/>
        <pt x="180" y="296" on="0"/>
        <pt x="144" y="209" on="1"/>
        <pt x="130" y="175" on="0"/>
        <pt x="130" y="151" on="1"/>
        <pt x="130" y="105" on="0"/>
        <pt x="207" y="47" on="0"/>
        <pt x="268" y="47" on="1"/>
        <pt x="349" y="47" on="0"/>
        <pt x="403" y="125" on="1"/>
        <pt x="413" y="141" on="0"/>
        <pt x="463" y="171" on="0"/>
        <pt x="483" y="171" on="1"/>
        <pt x="499" y="171" on="0"/>
        <pt x="499" y="160" on="1"/>
        <pt x="499" y="152" on="0"/>
        <pt x="483" y="130" on="1"/>
        <pt x="432" y="62" on="0"/>
        <pt x="274" y="-22" on="0"/>
        <pt x="197" y="-22" on="1"/>
        <pt x="128" y="-22" on="0"/>
        <pt x="30" y="49" on="0"/>
        <pt x="30" y="105" on="1"/>
        <pt x="30" y="142" on="0"/>
        <pt x="51" y="186" on="1"/>
        <pt x="95" y="286" on="0"/>
        <pt x="209" y="354" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 10 values pushed */
          21 1 1 2 57 1 5 6 2 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          13
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 44 values pushed */
          0 1 2 3 2 1 104 0 6 4 5 4 6 5 112 0 3 0 4 6 3 4 99 0 2
          2 0 91 0 0 0 13 75 0 5 5 7 91 0 7 7 14 7 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 45 values pushed */
          0 1 2 3 2 1 3 112 0 6 4 5 4 6 5 112 0 3 0 4 6 3 4 99 0
          2 2 0 91 0 0 0 13 75 0 5 5 7 91 0 7 7 14 7 76
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 11 values pushed */
          37 35 39 36 38 38 39 71 8 6 28
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="F" xMin="18" yMin="-32" xMax="829" yMax="683">
      <contour>
        <pt x="269" y="614" on="1"/>
        <pt x="229" y="580" on="0"/>
        <pt x="197" y="580" on="1"/>
        <pt x="181" y="580" on="0"/>
        <pt x="181" y="591" on="1"/>
        <pt x="181" y="595" on="0"/>
        <pt x="186" y="607" on="1"/>
        <pt x="202" y="638" on="0"/>
        <pt x="284" y="678" on="0"/>
        <pt x="335" y="682" on="1"/>
        <pt x="336" y="682" on="0"/>
        <pt x="362" y="682" on="0"/>
        <pt x="405" y="682" on="0"/>
        <pt x="458" y="683" on="0"/>
        <pt x="528" y="683" on="0"/>
        <pt x="561" y="683" on="1"/>
        <pt x="776" y="682" on="0"/>
        <pt x="784" y="681" on="1"/>
        <pt x="826" y="673" on="0"/>
        <pt x="829" y="647" on="1"/>
        <pt x="829" y="621" on="0"/>
        <pt x="769" y="580" on="0"/>
        <pt x="744" y="580" on="1"/>
        <pt x="728" y="580" on="0"/>
        <pt x="728" y="595" on="1"/>
        <pt x="729" y="606" on="0"/>
        <pt x="719" y="608" on="1"/>
        <pt x="702" y="613" on="0"/>
        <pt x="598" y="614" on="1"/>
        <pt x="500" y="614" on="1"/>
        <pt x="499" y="610" on="1"/>
        <pt x="499" y="609" on="0"/>
        <pt x="491" y="577" on="1"/>
        <pt x="472" y="499" on="0"/>
        <pt x="442" y="406" on="1"/>
        <pt x="430" y="368" on="0"/>
        <pt x="428" y="367" on="1"/>
        <pt x="428" y="365" on="0"/>
        <pt x="551" y="365" on="1"/>
        <pt x="674" y="365" on="1"/>
        <pt x="683" y="359" on="0"/>
        <pt x="684" y="355" on="1"/>
        <pt x="687" y="346" on="0"/>
        <pt x="677" y="329" on="1"/>
        <pt x="666" y="312" on="0"/>
        <pt x="617" y="285" on="0"/>
        <pt x="598" y="285" on="1"/>
        <pt x="586" y="285" on="0"/>
        <pt x="582" y="296" on="1"/>
        <pt x="402" y="296" on="1"/>
        <pt x="399" y="290" on="1"/>
        <pt x="328" y="114" on="0"/>
        <pt x="286" y="51" on="1"/>
        <pt x="263" y="21" on="0"/>
        <pt x="195" y="-24" on="0"/>
        <pt x="160" y="-31" on="1"/>
        <pt x="154" y="-32" on="0"/>
        <pt x="133" y="-32" on="1"/>
        <pt x="54" y="-32" on="0"/>
        <pt x="22" y="32" on="1"/>
        <pt x="18" y="40" on="0"/>
        <pt x="18" y="47" on="1"/>
        <pt x="18" y="56" on="0"/>
        <pt x="29" y="67" on="1"/>
        <pt x="60" y="100" on="0"/>
        <pt x="98" y="103" on="1"/>
        <pt x="109" y="103" on="0"/>
        <pt x="114" y="99" on="0"/>
        <pt x="119" y="88" on="1"/>
        <pt x="137" y="52" on="0"/>
        <pt x="171" y="42" on="1"/>
        <pt x="186" y="37" on="0"/>
        <pt x="195" y="37" on="1"/>
        <pt x="199" y="37" on="0"/>
        <pt x="203" y="43" on="1"/>
        <pt x="224" y="77" on="0"/>
        <pt x="261" y="161" on="1"/>
        <pt x="344" y="346" on="0"/>
        <pt x="391" y="532" on="1"/>
        <pt x="393" y="543" on="0"/>
        <pt x="403" y="585" on="0"/>
        <pt x="409" y="612" on="0"/>
        <pt x="409" y="614" on="0"/>
        <pt x="339" y="614" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 11 values pushed */
          19 1 3 1 24 4 2 0 3 2 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          22
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 48 values pushed */
          2 1 0 3 4 3 0 104 0 9 8 7 8 9 7 112 0 4 6 1 5 8 4 5 99
          11 10 2 3 3 1 91 0 1 1 13 75 0 8 8 7 91 0 7 7 14 7 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          38
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 52 values pushed */
          2 1 0 3 4 3 0 104 0 5 6 8 6 5 104 0 9 8 7 8 9 7 112 0 1
          11 10 2 3 0 1 3 99 0 4 0 6 5 4 6 97 0 8 8 7 91 0 7 7 14
          7 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          50
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 53 values pushed */
          2 1 0 3 4 3 0 4 112 0 5 6 8 6 5 104 0 9 8 7 8 9 7 112 0
          1 11 10 2 3 0 1 3 99 0 4 0 6 5 4 6 97 0 8 8 7 91 0 7 7
          14 7 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 58 values pushed */
          2 1 0 3 4 3 0 4 112 0 5 6 8 6 5 104 0 9 8 7 8 9 7 112 0
          1 11 10 2 3 0 1 3 99 0 4 0 6 5 4 6 97 0 8 9 7 8 87 0 8
          8 7 91 0 7 8 7 79
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 20 values pushed */
          0 0 0 83 0 81 72 71 23 54 17 38 70 36 37 118 33 12 6 29
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="G" xMin="44" yMin="-119" xMax="599" yMax="704">
      <contour>
        <pt x="144" y="318" on="1"/>
        <pt x="144" y="238" on="0"/>
        <pt x="216" y="137" on="0"/>
        <pt x="287" y="137" on="1"/>
        <pt x="325" y="137" on="0"/>
        <pt x="359" y="160" on="1"/>
        <pt x="417" y="198" on="0"/>
        <pt x="451" y="278" on="1"/>
        <pt x="455" y="287" on="0"/>
        <pt x="466" y="322" on="1"/>
        <pt x="471" y="339" on="0"/>
        <pt x="527" y="376" on="0"/>
        <pt x="551" y="376" on="1"/>
        <pt x="565" y="376" on="0"/>
        <pt x="565" y="365" on="1"/>
        <pt x="565" y="355" on="0"/>
        <pt x="539" y="260" on="1"/>
        <pt x="497" y="107" on="0"/>
        <pt x="451" y="31" on="1"/>
        <pt x="382" y="-83" on="0"/>
        <pt x="269" y="-112" on="1"/>
        <pt x="243" y="-119" on="0"/>
        <pt x="204" y="-119" on="1"/>
        <pt x="129" y="-116" on="0"/>
        <pt x="69" y="-87" on="1"/>
        <pt x="53" y="-76" on="0"/>
        <pt x="52" y="-71" on="1"/>
        <pt x="52" y="-61" on="0"/>
        <pt x="65" y="-47" on="1"/>
        <pt x="96" y="-17" on="0"/>
        <pt x="132" y="-14" on="1"/>
        <pt x="140" y="-14" on="1"/>
        <pt x="151" y="-19" on="1"/>
        <pt x="210" y="-49" on="0"/>
        <pt x="281" y="-49" on="1"/>
        <pt x="289" y="-49" on="1"/>
        <pt x="312" y="-49" on="0"/>
        <pt x="329" y="-31" on="1"/>
        <pt x="365" y="8" on="0"/>
        <pt x="398" y="92" on="1"/>
        <pt x="416" y="136" on="0"/>
        <pt x="416" y="142" on="1"/>
        <pt x="411" y="139" on="0"/>
        <pt x="406" y="135" on="1"/>
        <pt x="334" y="83" on="0"/>
        <pt x="252" y="70" on="1"/>
        <pt x="234" y="68" on="0"/>
        <pt x="216" y="68" on="1"/>
        <pt x="145" y="68" on="0"/>
        <pt x="101" y="112" on="1"/>
        <pt x="44" y="167" on="0"/>
        <pt x="44" y="273" on="1"/>
        <pt x="44" y="318" on="0"/>
        <pt x="57" y="369" on="1"/>
        <pt x="86" y="487" on="0"/>
        <pt x="254" y="662" on="0"/>
        <pt x="373" y="692" on="1"/>
        <pt x="418" y="704" on="0"/>
        <pt x="466" y="704" on="1"/>
        <pt x="508" y="704" on="0"/>
        <pt x="515" y="703" on="1"/>
        <pt x="555" y="696" on="0"/>
        <pt x="593" y="671" on="0"/>
        <pt x="598" y="647" on="1"/>
        <pt x="599" y="643" on="0"/>
        <pt x="599" y="635" on="1"/>
        <pt x="599" y="608" on="0"/>
        <pt x="544" y="517" on="0"/>
        <pt x="523" y="496" on="1"/>
        <pt x="491" y="466" on="0"/>
        <pt x="455" y="466" on="1"/>
        <pt x="440" y="466" on="0"/>
        <pt x="440" y="476" on="1"/>
        <pt x="440" y="487" on="0"/>
        <pt x="453" y="502" on="1"/>
        <pt x="467" y="520" on="0"/>
        <pt x="496" y="569" on="0"/>
        <pt x="498" y="580" on="1"/>
        <pt x="499" y="583" on="0"/>
        <pt x="499" y="589" on="1"/>
        <pt x="499" y="605" on="0"/>
        <pt x="489" y="617" on="1"/>
        <pt x="465" y="636" on="0"/>
        <pt x="403" y="636" on="1"/>
        <pt x="328" y="636" on="0"/>
        <pt x="279" y="602" on="1"/>
        <pt x="225" y="567" on="0"/>
        <pt x="148" y="414" on="0"/>
        <pt x="144" y="327" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 63 values pushed */
          79 65 2 6 7 30 1 3 4 2 74 0 6 7 1 7 6 1 112 0 1 0 7 1 0
          110 0 0 0 4 3 0 4 99 0 3 0 2 3 2 95 0 7 7 5 91 0 5 5 13
          7 76 43 42 41 42 58 40 39 34 8 6 28
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="H" xMin="18" yMin="-48" xMax="803" yMax="683">
      <contour>
        <pt x="37" y="475" on="1"/>
        <pt x="18" y="475" on="0"/>
        <pt x="18" y="487" on="1"/>
        <pt x="18" y="502" on="0"/>
        <pt x="45" y="539" on="1"/>
        <pt x="89" y="603" on="0"/>
        <pt x="238" y="683" on="0"/>
        <pt x="330" y="683" on="1"/>
        <pt x="379" y="683" on="0"/>
        <pt x="393" y="649" on="1"/>
        <pt x="400" y="635" on="0"/>
        <pt x="400" y="622" on="1"/>
        <pt x="400" y="605" on="0"/>
        <pt x="391" y="540" on="1"/>
        <pt x="376" y="427" on="0"/>
        <pt x="348" y="343" on="1"/>
        <pt x="348" y="342" on="0"/>
        <pt x="467" y="342" on="1"/>
        <pt x="587" y="342" on="1"/>
        <pt x="594" y="366" on="1"/>
        <pt x="615" y="440" on="0"/>
        <pt x="682" y="629" on="0"/>
        <pt x="690" y="641" on="1"/>
        <pt x="701" y="656" on="0"/>
        <pt x="745" y="682" on="0"/>
        <pt x="764" y="683" on="1"/>
        <pt x="783" y="683" on="0"/>
        <pt x="783" y="672" on="1"/>
        <pt x="783" y="669" on="0"/>
        <pt x="774" y="645" on="1"/>
        <pt x="718" y="498" on="0"/>
        <pt x="675" y="341" on="1"/>
        <pt x="636" y="201" on="0"/>
        <pt x="625" y="101" on="1"/>
        <pt x="624" y="92" on="0"/>
        <pt x="622" y="71" on="0"/>
        <pt x="621" y="59" on="0"/>
        <pt x="621" y="56" on="1"/>
        <pt x="621" y="20" on="0"/>
        <pt x="658" y="20" on="1"/>
        <pt x="666" y="20" on="0"/>
        <pt x="701" y="25" on="1"/>
        <pt x="707" y="44" on="0"/>
        <pt x="718" y="55" on="1"/>
        <pt x="745" y="82" on="0"/>
        <pt x="782" y="87" on="1"/>
        <pt x="803" y="89" on="0"/>
        <pt x="803" y="75" on="1"/>
        <pt x="803" y="66" on="0"/>
        <pt x="792" y="46" on="1"/>
        <pt x="769" y="4" on="0"/>
        <pt x="656" y="-48" on="0"/>
        <pt x="588" y="-48" on="1"/>
        <pt x="568" y="-48" on="0"/>
        <pt x="562" y="-46" on="1"/>
        <pt x="522" y="-30" on="0"/>
        <pt x="522" y="13" on="1"/>
        <pt x="522" y="23" on="1"/>
        <pt x="532" y="135" on="0"/>
        <pt x="569" y="281" on="1"/>
        <pt x="566" y="278" on="0"/>
        <pt x="549" y="274" on="1"/>
        <pt x="438" y="273" on="1"/>
        <pt x="328" y="273" on="1"/>
        <pt x="321" y="249" on="1"/>
        <pt x="294" y="158" on="0"/>
        <pt x="258" y="62" on="1"/>
        <pt x="238" y="7" on="0"/>
        <pt x="232" y="0" on="1"/>
        <pt x="219" y="-16" on="0"/>
        <pt x="173" y="-41" on="0"/>
        <pt x="155" y="-41" on="1"/>
        <pt x="139" y="-41" on="0"/>
        <pt x="139" y="-29" on="1"/>
        <pt x="139" y="-28" on="0"/>
        <pt x="142" y="-21" on="0"/>
        <pt x="153" y="8" on="0"/>
        <pt x="159" y="26" on="1"/>
        <pt x="195" y="120" on="0"/>
        <pt x="233" y="247" on="1"/>
        <pt x="240" y="270" on="0"/>
        <pt x="240" y="272" on="1"/>
        <pt x="240" y="273" on="0"/>
        <pt x="194" y="273" on="1"/>
        <pt x="158" y="273" on="0"/>
        <pt x="145" y="274" on="0"/>
        <pt x="141" y="279" on="1"/>
        <pt x="139" y="283" on="0"/>
        <pt x="139" y="285" on="1"/>
        <pt x="139" y="295" on="0"/>
        <pt x="167" y="322" on="0"/>
        <pt x="187" y="332" on="1"/>
        <pt x="206" y="341" on="0"/>
        <pt x="236" y="342" on="1"/>
        <pt x="260" y="343" on="1"/>
        <pt x="264" y="359" on="1"/>
        <pt x="300" y="498" on="0"/>
        <pt x="300" y="578" on="1"/>
        <pt x="300" y="613" on="0"/>
        <pt x="254" y="613" on="1"/>
        <pt x="198" y="613" on="0"/>
        <pt x="169" y="592" on="1"/>
        <pt x="143" y="575" on="0"/>
        <pt x="119" y="531" on="1"/>
        <pt x="112" y="517" on="0"/>
        <pt x="104" y="508" on="1"/>
        <pt x="72" y="478" on="0"/>
      </contour>
      <instructions><assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          34
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 18 values pushed */
          27 1 10 1 59 1 6 2 57 1 4 6 73 1 5 4 4 74
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 18 values pushed */
          27 1 10 1 59 1 6 2 57 1 4 6 73 1 7 4 4 74
          EIF[ ]	/* EndIf */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          23
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 38 values pushed */
          0 0 10 2 10 0 2 112 9 1 2 8 1 6 4 2 6 99 0 4 7 1 5 4 5
          95 0 10 10 1 91 3 1 1 1 13 10 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          34
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 44 values pushed */
          0 0 10 2 10 0 2 112 3 1 1 0 10 0 1 10 99 9 1 2 8 1 6 4 2
          6 99 0 4 5 5 4 87 0 4 4 5 91 7 1 5 4 5 79
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 51 values pushed */
          0 0 10 2 10 0 2 112 0 7 4 5 4 7 5 112 3 1 1 0 10 0 1 10 99
          9 1 2 8 1 6 4 2 6 99 0 4 7 5 4 87 0 4 4 5 91 0 5 4 5
          79
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 16 values pushed */
          100 98 94 92 72 39 40 44 28 38 55 37 16 11 6 29
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="I" xMin="-30" yMin="0" xMax="642" yMax="683">
      <contour>
        <pt x="330" y="69" on="1"/>
        <pt x="437" y="70" on="0"/>
        <pt x="441" y="72" on="1"/>
        <pt x="442" y="73" on="0"/>
        <pt x="442" y="74" on="1"/>
        <pt x="443" y="74" on="0"/>
        <pt x="445" y="82" on="1"/>
        <pt x="450" y="94" on="0"/>
        <pt x="460" y="105" on="1"/>
        <pt x="490" y="134" on="0"/>
        <pt x="527" y="137" on="1"/>
        <pt x="545" y="137" on="0"/>
        <pt x="545" y="125" on="1"/>
        <pt x="545" y="120" on="0"/>
        <pt x="542" y="112" on="1"/>
        <pt x="531" y="78" on="0"/>
        <pt x="450" y="19" on="0"/>
        <pt x="399" y="7" on="1"/>
        <pt x="379" y="2" on="0"/>
        <pt x="340" y="1" on="0"/>
        <pt x="174" y="0" on="1"/>
        <pt x="-20" y="0" on="0"/>
        <pt x="-23" y="1" on="1"/>
        <pt x="-30" y="5" on="0"/>
        <pt x="-30" y="12" on="1"/>
        <pt x="-30" y="23" on="0"/>
        <pt x="-17" y="36" on="1"/>
        <pt x="10" y="61" on="0"/>
        <pt x="42" y="68" on="1"/>
        <pt x="61" y="68" on="0"/>
        <pt x="136" y="70" on="0"/>
        <pt x="155" y="70" on="1"/>
        <pt x="179" y="94" on="0"/>
        <pt x="198" y="138" on="1"/>
        <pt x="222" y="194" on="0"/>
        <pt x="256" y="329" on="1"/>
        <pt x="278" y="418" on="0"/>
        <pt x="298" y="478" on="1"/>
        <pt x="328" y="569" on="0"/>
        <pt x="366" y="610" on="1"/>
        <pt x="369" y="614" on="1"/>
        <pt x="305" y="614" on="1"/>
        <pt x="292" y="614" on="0"/>
        <pt x="253" y="613" on="0"/>
        <pt x="231" y="612" on="0"/>
        <pt x="228" y="612" on="1"/>
        <pt x="168" y="607" on="0"/>
        <pt x="146" y="597" on="1"/>
        <pt x="136" y="593" on="0"/>
        <pt x="128" y="569" on="1"/>
        <pt x="123" y="554" on="0"/>
        <pt x="112" y="543" on="1"/>
        <pt x="83" y="516" on="0"/>
        <pt x="47" y="512" on="1"/>
        <pt x="28" y="512" on="0"/>
        <pt x="28" y="523" on="1"/>
        <pt x="28" y="530" on="0"/>
        <pt x="32" y="539" on="1"/>
        <pt x="56" y="614" on="0"/>
        <pt x="159" y="654" on="1"/>
        <pt x="218" y="678" on="0"/>
        <pt x="312" y="682" on="1"/>
        <pt x="314" y="682" on="0"/>
        <pt x="365" y="682" on="0"/>
        <pt x="444" y="683" on="0"/>
        <pt x="481" y="683" on="1"/>
        <pt x="632" y="683" on="1"/>
        <pt x="642" y="677" on="0"/>
        <pt x="642" y="671" on="1"/>
        <pt x="642" y="667" on="0"/>
        <pt x="639" y="661" on="1"/>
        <pt x="633" y="649" on="0"/>
        <pt x="596" y="623" on="0"/>
        <pt x="577" y="617" on="1"/>
        <pt x="570" y="615" on="0"/>
        <pt x="507" y="614" on="1"/>
        <pt x="444" y="614" on="1"/>
        <pt x="429" y="595" on="0"/>
        <pt x="406" y="542" on="1"/>
        <pt x="383" y="481" on="0"/>
        <pt x="354" y="364" on="1"/>
        <pt x="325" y="249" on="0"/>
        <pt x="310" y="209" on="1"/>
        <pt x="280" y="123" on="0"/>
        <pt x="238" y="78" on="1"/>
        <pt x="230" y="69" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 70 values pushed */
          55 1 5 4 12 1 0 1 2 74 0 5 4 1 4 5 1 112 0 1 0 4 1 0 110
          0 6 7 1 4 5 6 4 99 3 8 2 0 0 2 91 0 2 2 16 2 76 1 0 76
          74 66 60 54 53 44 39 31 28 21 18 11 10 0 85 1 85 9 6 20
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="J" xMin="47" yMin="-119" xMax="839" yMax="683">
      <contour>
        <pt x="830" y="683" on="1"/>
        <pt x="839" y="674" on="0"/>
        <pt x="839" y="671" on="1"/>
        <pt x="839" y="666" on="0"/>
        <pt x="837" y="663" on="1"/>
        <pt x="829" y="645" on="0"/>
        <pt x="776" y="614" on="0"/>
        <pt x="754" y="614" on="1"/>
        <pt x="735" y="614" on="0"/>
        <pt x="721" y="601" on="1"/>
        <pt x="668" y="553" on="0"/>
        <pt x="618" y="404" on="1"/>
        <pt x="589" y="318" on="0"/>
        <pt x="557" y="192" on="1"/>
        <pt x="549" y="156" on="0"/>
        <pt x="541" y="132" on="1"/>
        <pt x="521" y="69" on="0"/>
        <pt x="475" y="16" on="1"/>
        <pt x="432" y="-36" on="0"/>
        <pt x="312" y="-107" on="0"/>
        <pt x="253" y="-116" on="1"/>
        <pt x="234" y="-119" on="0"/>
        <pt x="213" y="-119" on="1"/>
        <pt x="160" y="-119" on="0"/>
        <pt x="81" y="-73" on="0"/>
        <pt x="62" y="-35" on="1"/>
        <pt x="47" y="1" on="0"/>
        <pt x="47" y="33" on="1"/>
        <pt x="47" y="83" on="0"/>
        <pt x="71" y="103" on="1"/>
        <pt x="101" y="128" on="0"/>
        <pt x="132" y="131" on="1"/>
        <pt x="152" y="133" on="0"/>
        <pt x="152" y="120" on="1"/>
        <pt x="152" y="118" on="0"/>
        <pt x="150" y="108" on="1"/>
        <pt x="148" y="100" on="0"/>
        <pt x="148" y="78" on="1"/>
        <pt x="148" y="18" on="0"/>
        <pt x="225" y="-50" on="0"/>
        <pt x="286" y="-50" on="1"/>
        <pt x="323" y="-50" on="0"/>
        <pt x="353" y="-29" on="1"/>
        <pt x="416" y="13" on="0"/>
        <pt x="444" y="101" on="1"/>
        <pt x="446" y="107" on="0"/>
        <pt x="460" y="159" on="1"/>
        <pt x="501" y="326" on="0"/>
        <pt x="585" y="542" on="0"/>
        <pt x="649" y="605" on="1"/>
        <pt x="659" y="614" on="1"/>
        <pt x="591" y="614" on="1"/>
        <pt x="517" y="613" on="0"/>
        <pt x="494" y="607" on="1"/>
        <pt x="402" y="584" on="0"/>
        <pt x="366" y="495" on="1"/>
        <pt x="361" y="483" on="0"/>
        <pt x="360" y="477" on="1"/>
        <pt x="355" y="458" on="0"/>
        <pt x="334" y="443" on="1"/>
        <pt x="304" y="419" on="0"/>
        <pt x="275" y="419" on="1"/>
        <pt x="255" y="419" on="0"/>
        <pt x="260" y="435" on="1"/>
        <pt x="268" y="469" on="0"/>
        <pt x="288" y="501" on="1"/>
        <pt x="330" y="572" on="0"/>
        <pt x="495" y="673" on="0"/>
        <pt x="583" y="681" on="1"/>
        <pt x="603" y="683" on="0"/>
        <pt x="713" y="683" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 6 values pushed */
          33 1 2 4 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          23
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 28 values pushed */
          0 4 0 2 0 4 2 112 0 2 0 1 2 1 95 3 1 0 0 5 91 6 1 5 5
          13 0 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 34 values pushed */
          0 4 0 2 0 4 2 112 6 1 5 3 1 0 4 5 0 99 0 2 1 1 2 87 0
          2 2 1 91 0 1 2 1 79
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 17 values pushed */
          0 0 0 70 0 69 62 60 52 50 41 39 45 38 7 6 22
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="K" xMin="32" yMin="-22" xMax="732" yMax="705">
      <contour>
        <pt x="267" y="703" on="1"/>
        <pt x="277" y="705" on="0"/>
        <pt x="279" y="705" on="1"/>
        <pt x="295" y="705" on="0"/>
        <pt x="295" y="691" on="1"/>
        <pt x="295" y="660" on="0"/>
        <pt x="289" y="604" on="1"/>
        <pt x="277" y="501" on="0"/>
        <pt x="250" y="397" on="1"/>
        <pt x="207" y="237" on="0"/>
        <pt x="159" y="105" on="1"/>
        <pt x="129" y="27" on="0"/>
        <pt x="128" y="25" on="1"/>
        <pt x="120" y="8" on="0"/>
        <pt x="67" y="-22" on="0"/>
        <pt x="47" y="-22" on="1"/>
        <pt x="32" y="-22" on="0"/>
        <pt x="32" y="-10" on="1"/>
        <pt x="32" y="-6" on="0"/>
        <pt x="42" y="21" on="1"/>
        <pt x="93" y="152" on="0"/>
        <pt x="136" y="306" on="1"/>
        <pt x="172" y="432" on="0"/>
        <pt x="185" y="530" on="1"/>
        <pt x="198" y="611" on="0"/>
        <pt x="194" y="618" on="1"/>
        <pt x="174" y="609" on="1"/>
        <pt x="147" y="595" on="0"/>
        <pt x="131" y="594" on="1"/>
        <pt x="113" y="594" on="0"/>
        <pt x="113" y="606" on="1"/>
        <pt x="113" y="624" on="0"/>
        <pt x="144" y="644" on="1"/>
        <pt x="150" y="649" on="0"/>
        <pt x="248" y="698" on="0"/>
        <pt x="255" y="700" on="1"/>
        <pt x="264" y="703" on="0"/>
      </contour>
      <contour>
        <pt x="677" y="586" on="1"/>
        <pt x="666" y="586" on="0"/>
        <pt x="656" y="595" on="0"/>
        <pt x="657" y="604" on="1"/>
        <pt x="657" y="619" on="1"/>
        <pt x="657" y="632" on="0"/>
        <pt x="641" y="647" on="0"/>
        <pt x="629" y="647" on="1"/>
        <pt x="623" y="647" on="0"/>
        <pt x="620" y="646" on="1"/>
        <pt x="576" y="635" on="0"/>
        <pt x="413" y="530" on="0"/>
        <pt x="365" y="482" on="1"/>
        <pt x="344" y="461" on="0"/>
        <pt x="331" y="441" on="0"/>
        <pt x="331" y="429" on="1"/>
        <pt x="331" y="393" on="0"/>
        <pt x="354" y="322" on="1"/>
        <pt x="386" y="222" on="0"/>
        <pt x="482" y="59" on="0"/>
        <pt x="519" y="41" on="1"/>
        <pt x="530" y="36" on="0"/>
        <pt x="542" y="36" on="1"/>
        <pt x="584" y="36" on="0"/>
        <pt x="643" y="71" on="0"/>
        <pt x="652" y="103" on="1"/>
        <pt x="658" y="120" on="0"/>
        <pt x="690" y="143" on="0"/>
        <pt x="709" y="143" on="1"/>
        <pt x="727" y="143" on="0"/>
        <pt x="727" y="128" on="1"/>
        <pt x="727" y="120" on="0"/>
        <pt x="723" y="111" on="1"/>
        <pt x="704" y="55" on="0"/>
        <pt x="577" y="-22" on="0"/>
        <pt x="497" y="-22" on="1"/>
        <pt x="484" y="-22" on="0"/>
        <pt x="481" y="-21" on="1"/>
        <pt x="429" y="-5" on="0"/>
        <pt x="382" y="71" on="1"/>
        <pt x="342" y="128" on="0"/>
        <pt x="262" y="329" on="0"/>
        <pt x="257" y="386" on="1"/>
        <pt x="257" y="389" on="0"/>
        <pt x="256" y="397" on="0"/>
        <pt x="256" y="399" on="1"/>
        <pt x="256" y="434" on="0"/>
        <pt x="288" y="473" on="1"/>
        <pt x="331" y="525" on="0"/>
        <pt x="520" y="658" on="0"/>
        <pt x="595" y="688" on="1"/>
        <pt x="639" y="705" on="0"/>
        <pt x="670" y="705" on="1"/>
        <pt x="699" y="703" on="0"/>
        <pt x="732" y="672" on="0"/>
        <pt x="732" y="644" on="1"/>
        <pt x="732" y="618" on="0"/>
        <pt x="702" y="588" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 15 values pushed */
          40 25 2 2 4 67 1 5 6 17 1 1 5 3 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          30
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 40 values pushed */
          0 4 0 2 0 4 2 112 0 6 2 5 2 6 5 112 3 1 2 2 0 91 8 1 0
          0 13 75 0 5 5 1 91 7 1 1 1 14 1 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 46 values pushed */
          0 4 0 2 0 4 2 112 0 2 3 0 2 3 110 0 6 3 5 3 6 5 112 0 3
          3 0 91 8 1 0 0 13 75 0 5 5 1 91 7 1 1 1 14 1 76
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 12 values pushed */
          47 37 36 46 21 24 43 43 33 9 6 29
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="L" xMin="32" yMin="-22" xMax="656" yMax="705">
      <contour>
        <pt x="503" y="519" on="1"/>
        <pt x="503" y="524" on="0"/>
        <pt x="507" y="552" on="0"/>
        <pt x="507" y="560" on="1"/>
        <pt x="507" y="630" on="0"/>
        <pt x="452" y="630" on="1"/>
        <pt x="424" y="630" on="0"/>
        <pt x="410" y="617" on="1"/>
        <pt x="363" y="575" on="0"/>
        <pt x="322" y="464" on="1"/>
        <pt x="296" y="393" on="0"/>
        <pt x="267" y="280" on="1"/>
        <pt x="250" y="212" on="0"/>
        <pt x="233" y="170" on="1"/>
        <pt x="211" y="123" on="0"/>
        <pt x="204" y="112" on="1"/>
        <pt x="198" y="103" on="1"/>
        <pt x="224" y="102" on="1"/>
        <pt x="279" y="102" on="0"/>
        <pt x="370" y="78" on="1"/>
        <pt x="462" y="54" on="0"/>
        <pt x="509" y="52" on="1"/>
        <pt x="523" y="52" on="1"/>
        <pt x="536" y="65" on="0"/>
        <pt x="544" y="87" on="1"/>
        <pt x="552" y="110" on="0"/>
        <pt x="579" y="128" on="1"/>
        <pt x="616" y="152" on="0"/>
        <pt x="641" y="152" on="1"/>
        <pt x="656" y="152" on="0"/>
        <pt x="656" y="142" on="1"/>
        <pt x="656" y="140" on="0"/>
        <pt x="653" y="128" on="1"/>
        <pt x="637" y="80" on="0"/>
        <pt x="531" y="-6" on="0"/>
        <pt x="471" y="-19" on="1"/>
        <pt x="456" y="-22" on="0"/>
        <pt x="433" y="-22" on="1"/>
        <pt x="403" y="-22" on="0"/>
        <pt x="379" y="-18" on="1"/>
        <pt x="344" y="-13" on="0"/>
        <pt x="255" y="10" on="1"/>
        <pt x="201" y="25" on="0"/>
        <pt x="156" y="28" on="1"/>
        <pt x="141" y="29" on="1"/>
        <pt x="131" y="20" on="1"/>
        <pt x="115" y="4" on="0"/>
        <pt x="65" y="-22" on="0"/>
        <pt x="47" y="-22" on="1"/>
        <pt x="32" y="-22" on="0"/>
        <pt x="32" y="-11" on="1"/>
        <pt x="32" y="-9" on="0"/>
        <pt x="34" y="-3" on="1"/>
        <pt x="40" y="9" on="0"/>
        <pt x="63" y="32" on="1"/>
        <pt x="99" y="68" on="0"/>
        <pt x="136" y="155" on="0"/>
        <pt x="157" y="236" on="1"/>
        <pt x="203" y="411" on="0"/>
        <pt x="247" y="499" on="1"/>
        <pt x="280" y="564" on="0"/>
        <pt x="323" y="609" on="1"/>
        <pt x="410" y="695" on="0"/>
        <pt x="513" y="704" on="1"/>
        <pt x="515" y="704" on="0"/>
        <pt x="527" y="705" on="0"/>
        <pt x="531" y="705" on="1"/>
        <pt x="592" y="705" on="0"/>
        <pt x="612" y="654" on="1"/>
        <pt x="618" y="640" on="0"/>
        <pt x="618" y="623" on="1"/>
        <pt x="618" y="611" on="1"/>
        <pt x="618" y="584" on="0"/>
        <pt x="611" y="560" on="0"/>
        <pt x="598" y="548" on="1"/>
        <pt x="581" y="531" on="0"/>
        <pt x="534" y="509" on="0"/>
        <pt x="518" y="509" on="1"/>
        <pt x="503" y="509" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 77 values pushed */
          0 1 8 0 30 1 1 3 50 1 4 5 3 74 0 0 7 8 7 0 8 112 0 3 8
          1 8 3 1 112 0 2 1 5 1 2 5 112 0 1 0 5 4 1 5 99 0 8 8 7
          91 0 7 7 13 75 6 1 4 4 14 4 76 78 76 67 65 35 36 39 37 34 42 36 9
          6 27
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="M" xMin="28" yMin="-50" xMax="1137" yMax="705">
      <contour>
        <pt x="1100" y="705" on="1"/>
        <pt x="1111" y="705" on="0"/>
        <pt x="1111" y="682" on="1"/>
        <pt x="1111" y="664" on="0"/>
        <pt x="1106" y="649" on="1"/>
        <pt x="1093" y="585" on="0"/>
        <pt x="1086" y="540" on="1"/>
        <pt x="1041" y="277" on="0"/>
        <pt x="1041" y="144" on="1"/>
        <pt x="1041" y="73" on="0"/>
        <pt x="1047" y="55" on="1"/>
        <pt x="1051" y="42" on="0"/>
        <pt x="1061" y="42" on="1"/>
        <pt x="1067" y="42" on="0"/>
        <pt x="1075" y="46" on="1"/>
        <pt x="1097" y="62" on="0"/>
        <pt x="1123" y="62" on="1"/>
        <pt x="1137" y="62" on="0"/>
        <pt x="1137" y="50" on="1"/>
        <pt x="1137" y="37" on="0"/>
        <pt x="1116" y="19" on="1"/>
        <pt x="1103" y="8" on="0"/>
        <pt x="1081" y="-3" on="1"/>
        <pt x="1044" y="-22" on="0"/>
        <pt x="1015" y="-28" on="1"/>
        <pt x="1010" y="-29" on="0"/>
        <pt x="1000" y="-29" on="1"/>
        <pt x="974" y="-29" on="0"/>
        <pt x="959" y="-14" on="1"/>
        <pt x="946" y="-1" on="0"/>
        <pt x="943" y="39" on="1"/>
        <pt x="941" y="69" on="0"/>
        <pt x="941" y="96" on="1"/>
        <pt x="941" y="103" on="0"/>
        <pt x="942" y="130" on="0"/>
        <pt x="942" y="135" on="1"/>
        <pt x="950" y="291" on="0"/>
        <pt x="983" y="480" on="1"/>
        <pt x="985" y="489" on="1"/>
        <pt x="980" y="483" on="1"/>
        <pt x="974" y="477" on="0"/>
        <pt x="952" y="451" on="0"/>
        <pt x="943" y="441" on="1"/>
        <pt x="776" y="247" on="0"/>
        <pt x="698" y="164" on="1"/>
        <pt x="665" y="128" on="0"/>
        <pt x="575" y="41" on="0"/>
        <pt x="568" y="37" on="1"/>
        <pt x="564" y="34" on="0"/>
        <pt x="558" y="34" on="1"/>
        <pt x="550" y="34" on="0"/>
        <pt x="542" y="41" on="0"/>
        <pt x="535" y="54" on="1"/>
        <pt x="494" y="122" on="0"/>
        <pt x="468" y="199" on="1"/>
        <pt x="452" y="247" on="0"/>
        <pt x="410" y="407" on="0"/>
        <pt x="397" y="462" on="1"/>
        <pt x="384" y="518" on="1"/>
        <pt x="348" y="366" on="0"/>
        <pt x="291" y="217" on="1"/>
        <pt x="238" y="78" on="0"/>
        <pt x="198" y="15" on="1"/>
        <pt x="161" y="-40" on="0"/>
        <pt x="128" y="-49" on="1"/>
        <pt x="125" y="-50" on="0"/>
        <pt x="117" y="-50" on="1"/>
        <pt x="91" y="-50" on="0"/>
        <pt x="36" y="-21" on="0"/>
        <pt x="30" y="-6" on="1"/>
        <pt x="28" y="2" on="0"/>
        <pt x="28" y="9" on="1"/>
        <pt x="28" y="53" on="0"/>
        <pt x="58" y="83" on="1"/>
        <pt x="66" y="90" on="0"/>
        <pt x="73" y="90" on="1"/>
        <pt x="78" y="90" on="0"/>
        <pt x="83" y="84" on="1"/>
        <pt x="102" y="63" on="0"/>
        <pt x="141" y="57" on="1"/>
        <pt x="153" y="56" on="0"/>
        <pt x="161" y="61" on="1"/>
        <pt x="196" y="84" on="0"/>
        <pt x="265" y="280" on="1"/>
        <pt x="330" y="457" on="0"/>
        <pt x="355" y="635" on="1"/>
        <pt x="361" y="667" on="0"/>
        <pt x="371" y="677" on="1"/>
        <pt x="396" y="705" on="0"/>
        <pt x="432" y="705" on="1"/>
        <pt x="437" y="705" on="0"/>
        <pt x="439" y="704" on="1"/>
        <pt x="444" y="701" on="0"/>
        <pt x="448" y="690" on="0"/>
        <pt x="453" y="659" on="1"/>
        <pt x="487" y="472" on="0"/>
        <pt x="539" y="294" on="1"/>
        <pt x="553" y="245" on="0"/>
        <pt x="568" y="207" on="1"/>
        <pt x="589" y="150" on="0"/>
        <pt x="594" y="150" on="1"/>
        <pt x="596" y="150" on="0"/>
        <pt x="674" y="228" on="0"/>
        <pt x="693" y="248" on="1"/>
        <pt x="816" y="379" on="0"/>
        <pt x="1056" y="664" on="1"/>
        <pt x="1086" y="700" on="0"/>
        <pt x="1089" y="701" on="1"/>
        <pt x="1093" y="705" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 73 values pushed */
          58 38 2 5 0 49 30 2 3 1 2 74 0 5 0 2 0 5 2 112 0 2 1 0 2
          1 110 0 1 3 0 1 3 110 0 4 3 4 115 6 7 2 0 0 13 75 0 3 3 14
          3 76 1 0 89 88 76 74 67 66 27 24 17 15 12 11 0 108 1 108 8 6 20
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="N" xMin="-27" yMin="-50" xMax="979" yMax="789">
      <contour>
        <pt x="343" y="705" on="1"/>
        <pt x="358" y="705" on="0"/>
        <pt x="358" y="698" on="1"/>
        <pt x="361" y="695" on="0"/>
        <pt x="366" y="674" on="1"/>
        <pt x="415" y="500" on="0"/>
        <pt x="484" y="319" on="1"/>
        <pt x="538" y="171" on="0"/>
        <pt x="590" y="82" on="1"/>
        <pt x="595" y="73" on="1"/>
        <pt x="615" y="152" on="1"/>
        <pt x="646" y="274" on="0"/>
        <pt x="683" y="407" on="1"/>
        <pt x="729" y="571" on="0"/>
        <pt x="776" y="703" on="0"/>
        <pt x="799" y="727" on="1"/>
        <pt x="851" y="779" on="0"/>
        <pt x="937" y="788" on="1"/>
        <pt x="939" y="788" on="0"/>
        <pt x="955" y="789" on="0"/>
        <pt x="958" y="789" on="1"/>
        <pt x="971" y="789" on="0"/>
        <pt x="979" y="779" on="0"/>
        <pt x="979" y="765" on="1"/>
        <pt x="979" y="722" on="0"/>
        <pt x="951" y="692" on="1"/>
        <pt x="942" y="683" on="0"/>
        <pt x="924" y="683" on="1"/>
        <pt x="870" y="680" on="0"/>
        <pt x="834" y="662" on="1"/>
        <pt x="807" y="648" on="0"/>
        <pt x="803" y="639" on="1"/>
        <pt x="798" y="630" on="0"/>
        <pt x="780" y="575" on="1"/>
        <pt x="740" y="447" on="0"/>
        <pt x="685" y="237" on="1"/>
        <pt x="631" y="28" on="0"/>
        <pt x="631" y="15" on="1"/>
        <pt x="631" y="14" on="0"/>
        <pt x="630" y="15" on="1"/>
        <pt x="630" y="17" on="0"/>
        <pt x="629" y="15" on="1"/>
        <pt x="628" y="14" on="0"/>
        <pt x="628" y="12" on="1"/>
        <pt x="621" y="-3" on="0"/>
        <pt x="582" y="-31" on="0"/>
        <pt x="560" y="-31" on="1"/>
        <pt x="550" y="-31" on="0"/>
        <pt x="542" y="-25" on="0"/>
        <pt x="530" y="-7" on="1"/>
        <pt x="484" y="67" on="0"/>
        <pt x="438" y="164" on="0"/>
        <pt x="398" y="272" on="1"/>
        <pt x="352" y="392" on="0"/>
        <pt x="314" y="514" on="1"/>
        <pt x="306" y="535" on="1"/>
        <pt x="306" y="534" on="1"/>
        <pt x="304" y="531" on="0"/>
        <pt x="299" y="500" on="1"/>
        <pt x="266" y="330" on="0"/>
        <pt x="208" y="163" on="1"/>
        <pt x="158" y="19" on="0"/>
        <pt x="111" y="-26" on="1"/>
        <pt x="85" y="-50" on="0"/>
        <pt x="61" y="-50" on="1"/>
        <pt x="29" y="-50" on="0"/>
        <pt x="-27" y="-16" on="0"/>
        <pt x="-27" y="8" on="1"/>
        <pt x="-27" y="26" on="0"/>
        <pt x="-9" y="71" on="0"/>
        <pt x="3" y="83" on="1"/>
        <pt x="11" y="90" on="0"/>
        <pt x="18" y="90" on="1"/>
        <pt x="22" y="90" on="0"/>
        <pt x="28" y="84" on="1"/>
        <pt x="49" y="63" on="0"/>
        <pt x="87" y="57" on="1"/>
        <pt x="101" y="56" on="0"/>
        <pt x="108" y="61" on="1"/>
        <pt x="129" y="75" on="0"/>
        <pt x="162" y="173" on="1"/>
        <pt x="243" y="404" on="0"/>
        <pt x="268" y="627" on="1"/>
        <pt x="272" y="659" on="0"/>
        <pt x="276" y="667" on="1"/>
        <pt x="284" y="681" on="0"/>
        <pt x="324" y="705" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 63 values pushed */
          55 1 5 2 37 9 2 3 5 2 74 0 5 2 3 2 5 3 112 0 4 3 4 115 0
          1 0 2 5 1 2 99 6 1 0 0 13 75 0 3 3 14 3 76 1 0 73 71 65 63
          47 45 28 26 21 17 0 86 1 86 7 6 20
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="O" xMin="58" yMin="-22" xMax="777" yMax="705">
      <contour>
        <pt x="599" y="705" on="1"/>
        <pt x="687" y="705" on="0"/>
        <pt x="777" y="583" on="0"/>
        <pt x="777" y="483" on="1"/>
        <pt x="777" y="408" on="0"/>
        <pt x="753" y="334" on="1"/>
        <pt x="719" y="225" on="0"/>
        <pt x="543" y="44" on="0"/>
        <pt x="430" y="3" on="1"/>
        <pt x="362" y="-22" on="0"/>
        <pt x="293" y="-22" on="1"/>
        <pt x="236" y="-22" on="0"/>
        <pt x="191" y="0" on="1"/>
        <pt x="128" y="29" on="0"/>
        <pt x="58" y="155" on="0"/>
        <pt x="58" y="245" on="1"/>
        <pt x="58" y="277" on="0"/>
        <pt x="59" y="286" on="1"/>
        <pt x="71" y="390" on="0"/>
        <pt x="118" y="471" on="1"/>
        <pt x="190" y="598" on="0"/>
        <pt x="329" y="682" on="1"/>
        <pt x="356" y="699" on="0"/>
        <pt x="377" y="704" on="1"/>
        <pt x="379" y="704" on="0"/>
        <pt x="386" y="705" on="0"/>
        <pt x="388" y="705" on="1"/>
        <pt x="404" y="705" on="0"/>
        <pt x="404" y="693" on="1"/>
        <pt x="404" y="689" on="0"/>
        <pt x="401" y="683" on="1"/>
        <pt x="392" y="666" on="0"/>
        <pt x="363" y="649" on="1"/>
        <pt x="281" y="601" on="0"/>
        <pt x="171" y="435" on="0"/>
        <pt x="159" y="331" on="1"/>
        <pt x="158" y="322" on="0"/>
        <pt x="158" y="290" on="1"/>
        <pt x="158" y="150" on="0"/>
        <pt x="244" y="85" on="1"/>
        <pt x="294" y="48" on="0"/>
        <pt x="364" y="48" on="1"/>
        <pt x="420" y="48" on="0"/>
        <pt x="474" y="74" on="1"/>
        <pt x="533" y="103" on="0"/>
        <pt x="633" y="228" on="0"/>
        <pt x="656" y="302" on="1"/>
        <pt x="677" y="370" on="0"/>
        <pt x="677" y="438" on="1"/>
        <pt x="677" y="527" on="0"/>
        <pt x="604" y="636" on="0"/>
        <pt x="528" y="636" on="1"/>
        <pt x="507" y="636" on="0"/>
        <pt x="483" y="624" on="0"/>
        <pt x="466" y="607" on="1"/>
        <pt x="423" y="564" on="0"/>
        <pt x="392" y="490" on="1"/>
        <pt x="383" y="470" on="0"/>
        <pt x="372" y="459" on="1"/>
        <pt x="341" y="430" on="0"/>
        <pt x="308" y="428" on="1"/>
        <pt x="295" y="428" on="0"/>
        <pt x="290" y="433" on="1"/>
        <pt x="286" y="439" on="0"/>
        <pt x="296" y="462" on="1"/>
        <pt x="327" y="536" on="0"/>
        <pt x="378" y="593" on="1"/>
        <pt x="458" y="685" on="0"/>
        <pt x="566" y="703" on="1"/>
        <pt x="586" y="705" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 56 values pushed */
          28 1 4 0 1 74 0 5 4 3 4 5 3 112 0 4 4 0 91 2 6 2 0 0 13
          75 0 3 3 1 91 0 1 1 14 1 76 1 0 61 59 52 50 42 40 27 25 11 9 0
          69 1 69 7 6 20
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="P" xMin="19" yMin="-57" xMax="733" yMax="683">
      <contour>
        <pt x="37" y="475" on="1"/>
        <pt x="19" y="475" on="0"/>
        <pt x="19" y="487" on="1"/>
        <pt x="19" y="489" on="0"/>
        <pt x="22" y="499" on="0"/>
        <pt x="22" y="502" on="1"/>
        <pt x="44" y="571" on="0"/>
        <pt x="220" y="675" on="0"/>
        <pt x="327" y="682" on="1"/>
        <pt x="329" y="682" on="0"/>
        <pt x="359" y="682" on="0"/>
        <pt x="402" y="683" on="0"/>
        <pt x="440" y="683" on="0"/>
        <pt x="483" y="682" on="0"/>
        <pt x="513" y="682" on="0"/>
        <pt x="515" y="682" on="1"/>
        <pt x="634" y="674" on="0"/>
        <pt x="695" y="615" on="1"/>
        <pt x="718" y="591" on="0"/>
        <pt x="726" y="564" on="1"/>
        <pt x="733" y="547" on="0"/>
        <pt x="733" y="525" on="1"/>
        <pt x="733" y="518" on="0"/>
        <pt x="731" y="504" on="1"/>
        <pt x="722" y="437" on="0"/>
        <pt x="669" y="372" on="1"/>
        <pt x="645" y="343" on="0"/>
        <pt x="620" y="322" on="1"/>
        <pt x="558" y="270" on="0"/>
        <pt x="400" y="208" on="0"/>
        <pt x="321" y="205" on="1"/>
        <pt x="299" y="205" on="0"/>
        <pt x="295" y="211" on="1"/>
        <pt x="293" y="215" on="0"/>
        <pt x="293" y="217" on="1"/>
        <pt x="293" y="227" on="0"/>
        <pt x="320" y="255" on="0"/>
        <pt x="360" y="273" on="0"/>
        <pt x="385" y="274" on="1"/>
        <pt x="469" y="280" on="0"/>
        <pt x="586" y="348" on="0"/>
        <pt x="614" y="407" on="1"/>
        <pt x="633" y="444" on="0"/>
        <pt x="633" y="477" on="1"/>
        <pt x="633" y="525" on="0"/>
        <pt x="597" y="558" on="1"/>
        <pt x="536" y="614" on="0"/>
        <pt x="399" y="614" on="1"/>
        <pt x="370" y="614" on="1"/>
        <pt x="368" y="603" on="1"/>
        <pt x="342" y="365" on="0"/>
        <pt x="254" y="118" on="1"/>
        <pt x="213" y="3" on="0"/>
        <pt x="202" y="-13" on="1"/>
        <pt x="192" y="-30" on="0"/>
        <pt x="144" y="-57" on="0"/>
        <pt x="121" y="-57" on="1"/>
        <pt x="116" y="-57" on="0"/>
        <pt x="108" y="-49" on="0"/>
        <pt x="108" y="-45" on="1"/>
        <pt x="108" y="-40" on="0"/>
        <pt x="121" y="-7" on="1"/>
        <pt x="232" y="268" on="0"/>
        <pt x="266" y="539" on="1"/>
        <pt x="267" y="546" on="0"/>
        <pt x="271" y="584" on="0"/>
        <pt x="274" y="612" on="0"/>
        <pt x="274" y="613" on="1"/>
        <pt x="272" y="614" on="0"/>
        <pt x="269" y="613" on="1"/>
        <pt x="205" y="609" on="0"/>
        <pt x="132" y="574" on="0"/>
        <pt x="119" y="532" on="1"/>
        <pt x="118" y="530" on="0"/>
        <pt x="114" y="520" on="0"/>
        <pt x="113" y="518" on="1"/>
        <pt x="102" y="502" on="0"/>
        <pt x="57" y="477" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 55 values pushed */
          21 2 2 0 4 1 74 0 0 4 3 4 0 3 112 0 5 2 5 115 0 1 6 1 4
          0 1 4 99 0 3 2 2 3 87 0 3 3 2 91 0 2 3 2 79 74 23 40 22 45
          150 16 7 6 27
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Q" xMin="114" yMin="-131" xMax="787" yMax="705">
      <contour>
        <pt x="675" y="416" on="1"/>
        <pt x="675" y="513" on="0"/>
        <pt x="575" y="636" on="0"/>
        <pt x="484" y="636" on="1"/>
        <pt x="392" y="636" on="0"/>
        <pt x="315" y="559" on="1"/>
        <pt x="246" y="490" on="0"/>
        <pt x="222" y="397" on="1"/>
        <pt x="214" y="368" on="0"/>
        <pt x="214" y="333" on="1"/>
        <pt x="214" y="254" on="0"/>
        <pt x="259" y="209" on="1"/>
        <pt x="297" y="172" on="0"/>
        <pt x="360" y="172" on="1"/>
        <pt x="405" y="172" on="0"/>
        <pt x="453" y="193" on="1"/>
        <pt x="476" y="204" on="0"/>
        <pt x="490" y="205" on="1"/>
        <pt x="510" y="205" on="0"/>
        <pt x="510" y="192" on="1"/>
        <pt x="509" y="183" on="0"/>
        <pt x="497" y="171" on="1"/>
        <pt x="469" y="141" on="0"/>
        <pt x="339" y="102" on="0"/>
        <pt x="287" y="102" on="1"/>
        <pt x="243" y="102" on="0"/>
        <pt x="211" y="118" on="1"/>
        <pt x="114" y="163" on="0"/>
        <pt x="114" y="286" on="1"/>
        <pt x="114" y="403" on="0"/>
        <pt x="201" y="515" on="1"/>
        <pt x="256" y="587" on="0"/>
        <pt x="416" y="686" on="0"/>
        <pt x="497" y="700" on="1"/>
        <pt x="527" y="705" on="0"/>
        <pt x="558" y="705" on="1"/>
        <pt x="625" y="705" on="0"/>
        <pt x="678" y="670" on="1"/>
        <pt x="774" y="605" on="0"/>
        <pt x="774" y="460" on="1"/>
        <pt x="774" y="428" on="0"/>
        <pt x="773" y="418" on="1"/>
        <pt x="760" y="310" on="0"/>
        <pt x="634" y="131" on="0"/>
        <pt x="545" y="71" on="1"/>
        <pt x="480" y="27" on="0"/>
        <pt x="412" y="4" on="1"/>
        <pt x="399" y="-2" on="1"/>
        <pt x="402" y="-5" on="0"/>
        <pt x="474" y="-29" on="1"/>
        <pt x="570" y="-62" on="0"/>
        <pt x="636" y="-62" on="1"/>
        <pt x="659" y="-62" on="0"/>
        <pt x="680" y="-45" on="0"/>
        <pt x="687" y="-23" on="1"/>
        <pt x="692" y="-9" on="0"/>
        <pt x="700" y="0" on="1"/>
        <pt x="729" y="29" on="0"/>
        <pt x="767" y="34" on="1"/>
        <pt x="787" y="36" on="0"/>
        <pt x="787" y="23" on="1"/>
        <pt x="787" y="18" on="0"/>
        <pt x="784" y="8" on="1"/>
        <pt x="768" y="-41" on="0"/>
        <pt x="660" y="-118" on="0"/>
        <pt x="602" y="-128" on="1"/>
        <pt x="586" y="-131" on="0"/>
        <pt x="563" y="-131" on="1"/>
        <pt x="525" y="-131" on="0"/>
        <pt x="482" y="-123" on="1"/>
        <pt x="435" y="-113" on="0"/>
        <pt x="333" y="-76" on="1"/>
        <pt x="241" y="-44" on="0"/>
        <pt x="192" y="-38" on="1"/>
        <pt x="158" y="-34" on="0"/>
        <pt x="145" y="-34" on="1"/>
        <pt x="127" y="-34" on="0"/>
        <pt x="127" y="-22" on="1"/>
        <pt x="127" y="-11" on="0"/>
        <pt x="142" y="2" on="1"/>
        <pt x="162" y="22" on="0"/>
        <pt x="190" y="31" on="1"/>
        <pt x="200" y="34" on="1"/>
        <pt x="237" y="35" on="1"/>
        <pt x="324" y="36" on="0"/>
        <pt x="376" y="48" on="1"/>
        <pt x="428" y="59" on="0"/>
        <pt x="467" y="79" on="1"/>
        <pt x="518" y="104" on="0"/>
        <pt x="606" y="192" on="0"/>
        <pt x="634" y="246" on="1"/>
        <pt x="675" y="330" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 11 values pushed */
          19 1 1 2 60 47 2 7 8 2 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          42
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 47 values pushed */
          0 2 0 1 0 2 1 112 0 8 3 7 3 8 7 112 0 1 0 3 8 1 3 99 0
          5 0 6 5 6 95 0 0 0 4 91 0 4 4 13 75 0 7 7 14 7 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 49 values pushed */
          0 2 0 1 0 2 1 112 0 8 3 7 3 8 7 112 0 7 5 3 7 5 110 0 1
          0 3 8 1 3 99 0 5 0 6 5 6 95 0 0 0 4 91 0 4 4 13 0 76
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 12 values pushed */
          38 38 46 46 41 37 19 40 34 9 6 29
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="R" xMin="19" yMin="-22" xMax="837" yMax="682">
      <contour>
        <pt x="37" y="475" on="1"/>
        <pt x="19" y="475" on="0"/>
        <pt x="19" y="487" on="1"/>
        <pt x="19" y="489" on="0"/>
        <pt x="22" y="499" on="0"/>
        <pt x="22" y="502" on="1"/>
        <pt x="39" y="557" on="0"/>
        <pt x="160" y="648" on="0"/>
        <pt x="242" y="668" on="1"/>
        <pt x="292" y="682" on="0"/>
        <pt x="374" y="682" on="1"/>
        <pt x="458" y="682" on="1"/>
        <pt x="545" y="682" on="0"/>
        <pt x="649" y="667" on="0"/>
        <pt x="686" y="642" on="1"/>
        <pt x="731" y="614" on="0"/>
        <pt x="731" y="557" on="1"/>
        <pt x="731" y="544" on="0"/>
        <pt x="728" y="529" on="1"/>
        <pt x="714" y="453" on="0"/>
        <pt x="587" y="333" on="0"/>
        <pt x="504" y="300" on="1"/>
        <pt x="506" y="296" on="0"/>
        <pt x="509" y="291" on="1"/>
        <pt x="526" y="266" on="0"/>
        <pt x="553" y="202" on="1"/>
        <pt x="594" y="105" on="0"/>
        <pt x="611" y="82" on="1"/>
        <pt x="635" y="47" on="0"/>
        <pt x="665" y="47" on="1"/>
        <pt x="683" y="47" on="0"/>
        <pt x="714" y="62" on="0"/>
        <pt x="730" y="78" on="0"/>
        <pt x="742" y="93" on="1"/>
        <pt x="758" y="113" on="0"/>
        <pt x="786" y="128" on="1"/>
        <pt x="804" y="136" on="0"/>
        <pt x="819" y="137" on="1"/>
        <pt x="837" y="137" on="0"/>
        <pt x="837" y="125" on="1"/>
        <pt x="837" y="112" on="0"/>
        <pt x="807" y="80" on="1"/>
        <pt x="738" y="7" on="0"/>
        <pt x="645" y="-16" on="1"/>
        <pt x="618" y="-22" on="0"/>
        <pt x="589" y="-22" on="1"/>
        <pt x="578" y="-22" on="0"/>
        <pt x="574" y="-21" on="1"/>
        <pt x="536" y="-12" on="0"/>
        <pt x="505" y="39" on="1"/>
        <pt x="488" y="68" on="0"/>
        <pt x="455" y="148" on="1"/>
        <pt x="424" y="226" on="0"/>
        <pt x="399" y="253" on="1"/>
        <pt x="382" y="270" on="0"/>
        <pt x="362" y="273" on="1"/>
        <pt x="346" y="273" on="0"/>
        <pt x="346" y="287" on="1"/>
        <pt x="348" y="298" on="0"/>
        <pt x="375" y="323" on="0"/>
        <pt x="413" y="341" on="0"/>
        <pt x="436" y="342" on="1"/>
        <pt x="440" y="342" on="0"/>
        <pt x="459" y="343" on="0"/>
        <pt x="462" y="344" on="1"/>
        <pt x="531" y="353" on="0"/>
        <pt x="577" y="393" on="1"/>
        <pt x="630" y="442" on="0"/>
        <pt x="630" y="511" on="1"/>
        <pt x="630" y="557" on="0"/>
        <pt x="596" y="579" on="1"/>
        <pt x="544" y="614" on="0"/>
        <pt x="393" y="614" on="1"/>
        <pt x="370" y="614" on="0"/>
        <pt x="370" y="613" on="1"/>
        <pt x="368" y="599" on="0"/>
        <pt x="366" y="584" on="1"/>
        <pt x="336" y="339" on="0"/>
        <pt x="240" y="91" on="1"/>
        <pt x="218" y="36" on="0"/>
        <pt x="213" y="25" on="1"/>
        <pt x="205" y="8" on="0"/>
        <pt x="152" y="-22" on="0"/>
        <pt x="132" y="-22" on="1"/>
        <pt x="125" y="-22" on="0"/>
        <pt x="115" y="-13" on="0"/>
        <pt x="117" y="-8" on="1"/>
        <pt x="117" y="-5" on="0"/>
        <pt x="128" y="21" on="1"/>
        <pt x="248" y="313" on="0"/>
        <pt x="274" y="606" on="1"/>
        <pt x="274" y="614" on="1"/>
        <pt x="269" y="613" on="1"/>
        <pt x="205" y="609" on="0"/>
        <pt x="132" y="574" on="0"/>
        <pt x="119" y="532" on="1"/>
        <pt x="118" y="530" on="0"/>
        <pt x="114" y="520" on="0"/>
        <pt x="113" y="518" on="1"/>
        <pt x="102" y="502" on="0"/>
        <pt x="57" y="477" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 11 values pushed */
          2 1 0 7 57 21 2 5 6 2 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          22
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 54 values pushed */
          0 0 7 6 7 0 6 112 0 6 5 7 6 5 110 0 5 3 7 5 3 110 0 3 2
          7 3 2 110 0 2 4 7 2 4 110 9 1 7 7 1 91 0 1 1 13 75 8 1 4
          4 14 4 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 52 values pushed */
          0 0 7 6 7 0 6 112 0 6 5 7 6 5 110 0 5 3 7 5 3 110 0 3 2
          7 3 2 110 0 2 4 7 2 4 110 0 1 9 1 7 0 1 7 99 8 1 4 4 14
          4 76
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 21 values pushed */
          93 92 83 82 73 71 63 60 56 55 46 44 38 36 30 28 56 16 10 6 22
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="S" xMin="18" yMin="-22" xMax="642" yMax="705">
      <contour>
        <pt x="489" y="704" on="1"/>
        <pt x="552" y="704" on="0"/>
        <pt x="642" y="659" on="0"/>
        <pt x="642" y="610" on="1"/>
        <pt x="642" y="597" on="0"/>
        <pt x="637" y="575" on="1"/>
        <pt x="632" y="556" on="0"/>
        <pt x="621" y="545" on="1"/>
        <pt x="592" y="516" on="0"/>
        <pt x="554" y="512" on="1"/>
        <pt x="545" y="512" on="0"/>
        <pt x="541" y="514" on="1"/>
        <pt x="534" y="520" on="0"/>
        <pt x="538" y="536" on="1"/>
        <pt x="542" y="549" on="0"/>
        <pt x="542" y="564" on="1"/>
        <pt x="542" y="588" on="0"/>
        <pt x="528" y="604" on="1"/>
        <pt x="514" y="616" on="0"/>
        <pt x="444" y="635" on="0"/>
        <pt x="410" y="635" on="1"/>
        <pt x="320" y="635" on="0"/>
        <pt x="295" y="562" on="1"/>
        <pt x="290" y="545" on="0"/>
        <pt x="290" y="532" on="1"/>
        <pt x="290" y="490" on="0"/>
        <pt x="327" y="455" on="1"/>
        <pt x="354" y="430" on="0"/>
        <pt x="409" y="404" on="1"/>
        <pt x="482" y="370" on="0"/>
        <pt x="517" y="340" on="1"/>
        <pt x="574" y="293" on="0"/>
        <pt x="574" y="231" on="1"/>
        <pt x="574" y="218" on="0"/>
        <pt x="571" y="204" on="1"/>
        <pt x="559" y="145" on="0"/>
        <pt x="509" y="93" on="1"/>
        <pt x="482" y="68" on="0"/>
        <pt x="456" y="51" on="1"/>
        <pt x="349" y="-22" on="0"/>
        <pt x="220" y="-22" on="1"/>
        <pt x="102" y="-22" on="0"/>
        <pt x="39" y="60" on="1"/>
        <pt x="18" y="87" on="0"/>
        <pt x="18" y="123" on="1"/>
        <pt x="18" y="184" on="0"/>
        <pt x="62" y="228" on="1"/>
        <pt x="105" y="271" on="0"/>
        <pt x="156" y="274" on="1"/>
        <pt x="178" y="274" on="0"/>
        <pt x="178" y="263" on="1"/>
        <pt x="178" y="254" on="0"/>
        <pt x="173" y="249" on="1"/>
        <pt x="158" y="227" on="0"/>
        <pt x="132" y="216" on="1"/>
        <pt x="127" y="213" on="1"/>
        <pt x="124" y="202" on="1"/>
        <pt x="118" y="186" on="0"/>
        <pt x="118" y="163" on="1"/>
        <pt x="119" y="138" on="0"/>
        <pt x="138" y="114" on="1"/>
        <pt x="191" y="48" on="0"/>
        <pt x="292" y="48" on="1"/>
        <pt x="421" y="48" on="0"/>
        <pt x="460" y="130" on="1"/>
        <pt x="473" y="155" on="0"/>
        <pt x="473" y="186" on="1"/>
        <pt x="473" y="204" on="0"/>
        <pt x="471" y="211" on="1"/>
        <pt x="453" y="275" on="0"/>
        <pt x="347" y="327" on="1"/>
        <pt x="275" y="361" on="0"/>
        <pt x="252" y="379" on="1"/>
        <pt x="203" y="416" on="0"/>
        <pt x="193" y="461" on="1"/>
        <pt x="191" y="467" on="0"/>
        <pt x="191" y="486" on="1"/>
        <pt x="191" y="504" on="0"/>
        <pt x="193" y="512" on="1"/>
        <pt x="202" y="552" on="0"/>
        <pt x="230" y="587" on="1"/>
        <pt x="267" y="633" on="0"/>
        <pt x="390" y="698" on="0"/>
        <pt x="461" y="704" on="1"/>
        <pt x="464" y="704" on="1"/>
        <pt x="467" y="705" on="0"/>
        <pt x="470" y="705" on="1"/>
        <pt x="472" y="705" on="0"/>
        <pt x="485" y="704" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 63 values pushed */
          76 1 4 1 1 74 0 2 0 1 0 2 1 112 0 4 1 5 1 4 5 112 0 1 1
          0 91 6 1 0 0 13 75 0 5 5 3 92 0 3 3 14 3 76 1 0 63 61 49 47
          41 39 21 19 10 9 0 88 1 86 7 6 20
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="T" xMin="34" yMin="-68" xMax="833" yMax="717">
      <contour>
        <pt x="742" y="683" on="1"/>
        <pt x="790" y="717" on="0"/>
        <pt x="816" y="717" on="1"/>
        <pt x="833" y="717" on="0"/>
        <pt x="833" y="708" on="1"/>
        <pt x="833" y="694" on="0"/>
        <pt x="817" y="674" on="1"/>
        <pt x="801" y="655" on="0"/>
        <pt x="742" y="621" on="0"/>
        <pt x="714" y="615" on="1"/>
        <pt x="691" y="610" on="0"/>
        <pt x="588" y="609" on="1"/>
        <pt x="490" y="609" on="0"/>
        <pt x="490" y="607" on="1"/>
        <pt x="483" y="580" on="1"/>
        <pt x="476" y="554" on="0"/>
        <pt x="447" y="438" on="0"/>
        <pt x="435" y="392" on="1"/>
        <pt x="382" y="178" on="0"/>
        <pt x="377" y="160" on="1"/>
        <pt x="351" y="67" on="0"/>
        <pt x="314" y="-8" on="1"/>
        <pt x="295" y="-46" on="0"/>
        <pt x="242" y="-64" on="1"/>
        <pt x="231" y="-68" on="0"/>
        <pt x="218" y="-68" on="1"/>
        <pt x="203" y="-68" on="0"/>
        <pt x="203" y="-57" on="1"/>
        <pt x="203" y="-52" on="0"/>
        <pt x="211" y="-38" on="1"/>
        <pt x="247" y="44" on="0"/>
        <pt x="267" y="116" on="1"/>
        <pt x="269" y="124" on="0"/>
        <pt x="327" y="358" on="0"/>
        <pt x="384" y="584" on="0"/>
        <pt x="388" y="592" on="1"/>
        <pt x="390" y="594" on="0"/>
        <pt x="399" y="607" on="0"/>
        <pt x="401" y="609" on="1"/>
        <pt x="302" y="609" on="1"/>
        <pt x="193" y="609" on="0"/>
        <pt x="180" y="605" on="1"/>
        <pt x="165" y="600" on="0"/>
        <pt x="145" y="560" on="0"/>
        <pt x="145" y="541" on="1"/>
        <pt x="145" y="536" on="0"/>
        <pt x="142" y="529" on="1"/>
        <pt x="135" y="516" on="0"/>
        <pt x="90" y="485" on="0"/>
        <pt x="70" y="479" on="1"/>
        <pt x="57" y="474" on="0"/>
        <pt x="49" y="474" on="1"/>
        <pt x="34" y="474" on="0"/>
        <pt x="34" y="490" on="1"/>
        <pt x="34" y="526" on="0"/>
        <pt x="61" y="564" on="1"/>
        <pt x="92" y="608" on="0"/>
        <pt x="206" y="674" on="0"/>
        <pt x="261" y="681" on="1"/>
        <pt x="272" y="683" on="0"/>
        <pt x="507" y="683" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 10 values pushed */
          44 1 4 1 27 1 2 4 2 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          23
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 30 values pushed */
          0 4 1 2 1 4 2 112 0 2 2 113 0 0 0 13 75 3 1 1 1 5 91 6 1
          5 5 13 1 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          42
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 28 values pushed */
          0 4 1 2 1 4 2 112 0 2 2 113 6 1 5 3 1 1 4 5 1 99 0 0 0
          13 0 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 36 values pushed */
          0 0 5 0 114 0 4 1 2 1 4 2 112 0 2 2 113 6 1 5 1 1 5 87 6
          1 5 5 1 91 3 1 1 5 1 79
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 14 values pushed */
          0 0 0 60 0 59 42 59 44 39 33 7 6 25
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="U" xMin="-17" yMin="-28" xMax="687" yMax="683">
      <contour>
        <pt x="25" y="580" on="1"/>
        <pt x="8" y="580" on="0"/>
        <pt x="8" y="592" on="1"/>
        <pt x="8" y="616" on="0"/>
        <pt x="75" y="651" on="1"/>
        <pt x="133" y="683" on="0"/>
        <pt x="193" y="683" on="1"/>
        <pt x="246" y="683" on="0"/>
        <pt x="246" y="631" on="1"/>
        <pt x="246" y="596" on="0"/>
        <pt x="219" y="526" on="1"/>
        <pt x="204" y="486" on="0"/>
        <pt x="169" y="406" on="1"/>
        <pt x="108" y="268" on="0"/>
        <pt x="93" y="210" on="1"/>
        <pt x="83" y="177" on="0"/>
        <pt x="83" y="143" on="1"/>
        <pt x="83" y="100" on="0"/>
        <pt x="118" y="48" on="0"/>
        <pt x="154" y="48" on="1"/>
        <pt x="177" y="48" on="0"/>
        <pt x="211" y="70" on="1"/>
        <pt x="283" y="118" on="0"/>
        <pt x="462" y="350" on="0"/>
        <pt x="525" y="475" on="1"/>
        <pt x="547" y="517" on="0"/>
        <pt x="560" y="553" on="1"/>
        <pt x="589" y="635" on="0"/>
        <pt x="593" y="640" on="1"/>
        <pt x="603" y="656" on="0"/>
        <pt x="649" y="681" on="0"/>
        <pt x="669" y="683" on="1"/>
        <pt x="687" y="683" on="0"/>
        <pt x="687" y="672" on="1"/>
        <pt x="683" y="656" on="1"/>
        <pt x="675" y="625" on="0"/>
        <pt x="659" y="586" on="1"/>
        <pt x="608" y="464" on="0"/>
        <pt x="547" y="220" on="1"/>
        <pt x="525" y="137" on="0"/>
        <pt x="521" y="68" on="1"/>
        <pt x="521" y="53" on="0"/>
        <pt x="525" y="46" on="0"/>
        <pt x="533" y="42" on="1"/>
        <pt x="543" y="47" on="1"/>
        <pt x="573" y="61" on="0"/>
        <pt x="588" y="61" on="1"/>
        <pt x="604" y="61" on="0"/>
        <pt x="604" y="47" on="1"/>
        <pt x="599" y="16" on="0"/>
        <pt x="506" y="-22" on="1"/>
        <pt x="486" y="-28" on="0"/>
        <pt x="468" y="-28" on="1"/>
        <pt x="446" y="-28" on="0"/>
        <pt x="421" y="-4" on="0"/>
        <pt x="421" y="18" on="1"/>
        <pt x="421" y="89" on="0"/>
        <pt x="468" y="258" on="1"/>
        <pt x="468" y="259" on="0"/>
        <pt x="465" y="255" on="0"/>
        <pt x="459" y="248" on="1"/>
        <pt x="346" y="102" on="0"/>
        <pt x="239" y="33" on="1"/>
        <pt x="170" y="-10" on="0"/>
        <pt x="113" y="-20" on="1"/>
        <pt x="97" y="-22" on="0"/>
        <pt x="83" y="-22" on="1"/>
        <pt x="66" y="-22" on="0"/>
        <pt x="58" y="-20" on="1"/>
        <pt x="22" y="-10" on="0"/>
        <pt x="-17" y="53" on="0"/>
        <pt x="-17" y="99" on="1"/>
        <pt x="-17" y="132" on="0"/>
        <pt x="-6" y="174" on="1"/>
        <pt x="13" y="240" on="0"/>
        <pt x="76" y="384" on="1"/>
        <pt x="122" y="489" on="0"/>
        <pt x="137" y="536" on="1"/>
        <pt x="146" y="566" on="0"/>
        <pt x="146" y="586" on="1"/>
        <pt x="146" y="602" on="0"/>
        <pt x="135" y="613" on="0"/>
        <pt x="120" y="613" on="1"/>
        <pt x="98" y="613" on="0"/>
        <pt x="78" y="600" on="1"/>
        <pt x="49" y="580" on="0"/>
      </contour>
      <instructions><assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          9
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 15 values pushed */
          33 1 7 1 57 1 2 0 48 43 2 5 2 3 74
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          39
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 15 values pushed */
          33 1 7 1 57 1 4 0 48 43 2 5 2 3 74
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 15 values pushed */
          33 1 7 1 57 1 4 0 48 43 2 6 2 3 74
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          9
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 37 values pushed */
          0 7 1 0 1 7 0 112 8 1 0 2 1 0 2 110 4 1 2 5 1 2 5 110 3
          1 1 1 13 75 6 1 5 5 14 5 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          23
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 43 values pushed */
          0 7 1 0 1 7 0 112 8 1 0 4 1 0 4 110 0 4 2 1 4 2 110 0 2
          5 1 2 5 110 3 1 1 1 13 75 6 1 5 5 14 5 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          39
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 34 values pushed */
          3 1 1 7 1 114 0 7 0 7 114 8 1 0 4 0 114 0 4 2 4 114 0 2 5
          2 114 6 1 5 5 14 5 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 38 values pushed */
          3 1 1 7 1 114 0 7 0 7 114 8 1 0 4 0 114 0 4 2 4 114 0 2 6
          2 114 0 6 6 14 75 0 5 5 14 5 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 23 values pushed */
          1 0 83 81 67 65 53 51 47 45 32 31 20 18 7 5 0 85 1 85 9 6 20
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="V" xMin="25" yMin="-52" xMax="658" yMax="683">
      <contour>
        <pt x="25" y="633" on="1"/>
        <pt x="25" y="649" on="0"/>
        <pt x="73" y="683" on="0"/>
        <pt x="100" y="683" on="1"/>
        <pt x="159" y="683" on="0"/>
        <pt x="202" y="643" on="1"/>
        <pt x="291" y="560" on="0"/>
        <pt x="291" y="306" on="1"/>
        <pt x="291" y="227" on="0"/>
        <pt x="281" y="124" on="1"/>
        <pt x="279" y="115" on="0"/>
        <pt x="278" y="102" on="0"/>
        <pt x="279" y="102" on="1"/>
        <pt x="306" y="124" on="0"/>
        <pt x="325" y="141" on="1"/>
        <pt x="432" y="236" on="0"/>
        <pt x="576" y="415" on="0"/>
        <pt x="596" y="479" on="1"/>
        <pt x="600" y="490" on="0"/>
        <pt x="600" y="502" on="1"/>
        <pt x="600" y="532" on="0"/>
        <pt x="555" y="575" on="0"/>
        <pt x="523" y="577" on="1"/>
        <pt x="505" y="577" on="0"/>
        <pt x="505" y="601" on="1"/>
        <pt x="505" y="622" on="0"/>
        <pt x="527" y="672" on="0"/>
        <pt x="542" y="681" on="1"/>
        <pt x="546" y="683" on="0"/>
        <pt x="558" y="683" on="1"/>
        <pt x="604" y="679" on="0"/>
        <pt x="658" y="611" on="0"/>
        <pt x="658" y="559" on="1"/>
        <pt x="658" y="548" on="0"/>
        <pt x="654" y="520" on="1"/>
        <pt x="632" y="389" on="0"/>
        <pt x="487" y="215" on="1"/>
        <pt x="411" y="127" on="0"/>
        <pt x="311" y="39" on="1"/>
        <pt x="218" y="-41" on="0"/>
        <pt x="196" y="-51" on="1"/>
        <pt x="194" y="-52" on="0"/>
        <pt x="190" y="-52" on="1"/>
        <pt x="177" y="-52" on="0"/>
        <pt x="177" y="-28" on="1"/>
        <pt x="177" y="-22" on="0"/>
        <pt x="179" y="-8" on="1"/>
        <pt x="188" y="35" on="0"/>
        <pt x="203" y="209" on="0"/>
        <pt x="203" y="270" on="1"/>
        <pt x="203" y="473" on="0"/>
        <pt x="145" y="560" on="1"/>
        <pt x="114" y="605" on="0"/>
        <pt x="73" y="615" on="1"/>
        <pt x="56" y="620" on="0"/>
        <pt x="41" y="620" on="1"/>
        <pt x="25" y="620" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 10 values pushed */
          44 1 2 1 1 74 29 1 0 72
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          23
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 25 values pushed */
          0 3 0 1 0 3 1 112 0 1 2 0 1 2 110 0 2 2 113 0 0 0 13 0 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 19 values pushed */
          0 0 3 0 114 0 3 1 3 114 0 1 2 1 114 0 2 2 105
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 10 values pushed */
          56 54 43 40 23 21 34 4 6 21
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="W" xMin="25" yMin="-53" xMax="1034" yMax="683">
      <contour>
        <pt x="25" y="633" on="1"/>
        <pt x="25" y="651" on="0"/>
        <pt x="74" y="683" on="0"/>
        <pt x="103" y="683" on="1"/>
        <pt x="168" y="683" on="0"/>
        <pt x="207" y="632" on="1"/>
        <pt x="228" y="608" on="0"/>
        <pt x="243" y="568" on="1"/>
        <pt x="269" y="488" on="0"/>
        <pt x="269" y="374" on="1"/>
        <pt x="269" y="274" on="0"/>
        <pt x="253" y="168" on="1"/>
        <pt x="251" y="150" on="1"/>
        <pt x="252" y="152" on="1"/>
        <pt x="254" y="153" on="0"/>
        <pt x="260" y="162" on="0"/>
        <pt x="269" y="173" on="0"/>
        <pt x="280" y="188" on="0"/>
        <pt x="286" y="197" on="1"/>
        <pt x="395" y="342" on="0"/>
        <pt x="484" y="497" on="1"/>
        <pt x="549" y="608" on="0"/>
        <pt x="549" y="616" on="1"/>
        <pt x="549" y="619" on="0"/>
        <pt x="546" y="625" on="1"/>
        <pt x="544" y="633" on="0"/>
        <pt x="545" y="638" on="1"/>
        <pt x="550" y="654" on="0"/>
        <pt x="595" y="683" on="0"/>
        <pt x="615" y="683" on="1"/>
        <pt x="627" y="683" on="0"/>
        <pt x="630" y="677" on="1"/>
        <pt x="635" y="670" on="0"/>
        <pt x="657" y="595" on="1"/>
        <pt x="726" y="370" on="0"/>
        <pt x="741" y="128" on="1"/>
        <pt x="742" y="110" on="1"/>
        <pt x="745" y="114" on="1"/>
        <pt x="775" y="148" on="0"/>
        <pt x="830" y="225" on="1"/>
        <pt x="945" y="387" on="0"/>
        <pt x="972" y="482" on="1"/>
        <pt x="976" y="495" on="0"/>
        <pt x="976" y="511" on="1"/>
        <pt x="976" y="540" on="0"/>
        <pt x="945" y="577" on="0"/>
        <pt x="918" y="577" on="1"/>
        <pt x="906" y="577" on="0"/>
        <pt x="906" y="627" on="0"/>
        <pt x="927" y="672" on="0"/>
        <pt x="942" y="681" on="1"/>
        <pt x="948" y="683" on="0"/>
        <pt x="954" y="683" on="1"/>
        <pt x="970" y="683" on="0"/>
        <pt x="982" y="677" on="1"/>
        <pt x="1034" y="653" on="0"/>
        <pt x="1034" y="569" on="1"/>
        <pt x="1034" y="551" on="0"/>
        <pt x="1032" y="535" on="1"/>
        <pt x="1007" y="371" on="0"/>
        <pt x="815" y="113" on="1"/>
        <pt x="705" y="-34" on="0"/>
        <pt x="681" y="-49" on="1"/>
        <pt x="666" y="-59" on="0"/>
        <pt x="660" y="-45" on="1"/>
        <pt x="659" y="-40" on="0"/>
        <pt x="656" y="32" on="1"/>
        <pt x="648" y="262" on="0"/>
        <pt x="591" y="477" on="1"/>
        <pt x="573" y="551" on="0"/>
        <pt x="570" y="551" on="1"/>
        <pt x="567" y="545" on="0"/>
        <pt x="563" y="539" on="1"/>
        <pt x="409" y="244" on="0"/>
        <pt x="182" y="-25" on="1"/>
        <pt x="160" y="-52" on="0"/>
        <pt x="151" y="-53" on="1"/>
        <pt x="137" y="-53" on="0"/>
        <pt x="137" y="-30" on="1"/>
        <pt x="137" y="-15" on="0"/>
        <pt x="143" y="3" on="1"/>
        <pt x="151" y="28" on="0"/>
        <pt x="164" y="123" on="1"/>
        <pt x="181" y="244" on="0"/>
        <pt x="181" y="338" on="1"/>
        <pt x="181" y="394" on="0"/>
        <pt x="168" y="488" on="0"/>
        <pt x="138" y="572" on="0"/>
        <pt x="80" y="620" on="0"/>
        <pt x="40" y="620" on="1"/>
        <pt x="25" y="620" on="0"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 8 values pushed */
          64 36 12 3 4 2 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          23
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 25 values pushed */
          0 2 5 4 5 2 4 112 0 4 4 113 0 5 5 0 91 3 1 2 0 0 13 5 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 32 values pushed */
          0 2 5 4 5 2 4 112 0 4 4 113 3 1 2 0 5 5 0 87 3 1 2 0 0
          5 91 0 5 0 5 79
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 14 values pushed */
          90 88 77 76 53 52 47 45 30 28 34 6 6 21
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="X" xMin="52" yMin="0" xMax="807" yMax="683">
      <contour>
        <pt x="324" y="614" on="1"/>
        <pt x="290" y="575" on="0"/>
        <pt x="250" y="573" on="1"/>
        <pt x="231" y="573" on="0"/>
        <pt x="231" y="585" on="1"/>
        <pt x="231" y="589" on="0"/>
        <pt x="232" y="592" on="1"/>
        <pt x="244" y="633" on="0"/>
        <pt x="342" y="683" on="0"/>
        <pt x="400" y="683" on="1"/>
        <pt x="430" y="683" on="0"/>
        <pt x="449" y="667" on="1"/>
        <pt x="471" y="650" on="0"/>
        <pt x="481" y="610" on="1"/>
        <pt x="488" y="582" on="0"/>
        <pt x="497" y="456" on="1"/>
        <pt x="498" y="446" on="0"/>
        <pt x="500" y="425" on="0"/>
        <pt x="500" y="419" on="1"/>
        <pt x="501" y="413" on="1"/>
        <pt x="502" y="413" on="0"/>
        <pt x="547" y="441" on="1"/>
        <pt x="693" y="534" on="0"/>
        <pt x="705" y="561" on="1"/>
        <pt x="707" y="565" on="0"/>
        <pt x="707" y="578" on="1"/>
        <pt x="707" y="610" on="0"/>
        <pt x="682" y="614" on="1"/>
        <pt x="667" y="614" on="0"/>
        <pt x="667" y="626" on="1"/>
        <pt x="667" y="642" on="0"/>
        <pt x="726" y="683" on="0"/>
        <pt x="755" y="683" on="1"/>
        <pt x="780" y="683" on="0"/>
        <pt x="807" y="650" on="0"/>
        <pt x="807" y="623" on="1"/>
        <pt x="807" y="593" on="0"/>
        <pt x="788" y="569" on="1"/>
        <pt x="772" y="547" on="0"/>
        <pt x="739" y="519" on="1"/>
        <pt x="667" y="460" on="0"/>
        <pt x="530" y="376" on="1"/>
        <pt x="505" y="361" on="1"/>
        <pt x="505" y="356" on="1"/>
        <pt x="505" y="355" on="0"/>
        <pt x="513" y="264" on="1"/>
        <pt x="523" y="143" on="0"/>
        <pt x="528" y="125" on="1"/>
        <pt x="541" y="69" on="0"/>
        <pt x="580" y="69" on="1"/>
        <pt x="585" y="69" on="0"/>
        <pt x="593" y="77" on="1"/>
        <pt x="624" y="108" on="0"/>
        <pt x="660" y="110" on="1"/>
        <pt x="671" y="110" on="0"/>
        <pt x="679" y="103" on="0"/>
        <pt x="678" y="94" on="1"/>
        <pt x="667" y="57" on="0"/>
        <pt x="634" y="37" on="1"/>
        <pt x="584" y="0" on="0"/>
        <pt x="510" y="0" on="1"/>
        <pt x="489" y="0" on="0"/>
        <pt x="474" y="7" on="1"/>
        <pt x="443" y="23" on="0"/>
        <pt x="423" y="97" on="0"/>
        <pt x="417" y="172" on="1"/>
        <pt x="416" y="182" on="0"/>
        <pt x="416" y="188" on="1"/>
        <pt x="415" y="197" on="0"/>
        <pt x="410" y="259" on="0"/>
        <pt x="406" y="299" on="0"/>
        <pt x="405" y="299" on="1"/>
        <pt x="398" y="299" on="0"/>
        <pt x="272" y="216" on="1"/>
        <pt x="162" y="143" on="0"/>
        <pt x="154" y="122" on="1"/>
        <pt x="152" y="118" on="0"/>
        <pt x="152" y="105" on="1"/>
        <pt x="152" y="69" on="0"/>
        <pt x="180" y="69" on="1"/>
        <pt x="183" y="69" on="0"/>
        <pt x="191" y="63" on="0"/>
        <pt x="191" y="60" on="1"/>
        <pt x="194" y="54" on="0"/>
        <pt x="187" y="44" on="1"/>
        <pt x="176" y="27" on="0"/>
        <pt x="128" y="0" on="0"/>
        <pt x="105" y="0" on="1"/>
        <pt x="80" y="0" on="0"/>
        <pt x="52" y="33" on="0"/>
        <pt x="52" y="60" on="1"/>
        <pt x="52" y="98" on="0"/>
        <pt x="93" y="139" on="1"/>
        <pt x="119" y="165" on="0"/>
        <pt x="155" y="191" on="1"/>
        <pt x="216" y="238" on="0"/>
        <pt x="357" y="324" on="1"/>
        <pt x="402" y="351" on="0"/>
        <pt x="402" y="352" on="1"/>
        <pt x="394" y="483" on="0"/>
        <pt x="386" y="538" on="1"/>
        <pt x="376" y="600" on="0"/>
        <pt x="348" y="611" on="1"/>
        <pt x="346" y="612" on="0"/>
        <pt x="335" y="614" on="0"/>
        <pt x="333" y="614" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 16 values pushed */
          25 4 2 0 2 42 19 2 5 0 77 1 4 5 3 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          23
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 43 values pushed */
          10 9 2 2 1 0 1 2 0 112 0 0 5 1 0 5 110 0 5 4 1 5 4 110 3
          1 1 1 13 75 7 1 4 4 6 91 8 1 6 6 16 6 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 36 values pushed */
          3 1 1 2 1 114 10 9 2 2 0 2 114 0 0 5 0 114 0 5 4 5 114 7 1
          4 4 6 91 8 1 6 6 16 6 76
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 25 values pushed */
          0 0 0 105 0 104 88 86 79 78 61 59 54 52 49 48 33 31 28 27 37 33 11 6 22
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Y" xMin="31" yMin="-143" xMax="714" yMax="683">
      <contour>
        <pt x="83" y="586" on="1"/>
        <pt x="65" y="586" on="0"/>
        <pt x="65" y="599" on="1"/>
        <pt x="65" y="610" on="0"/>
        <pt x="85" y="630" on="1"/>
        <pt x="136" y="683" on="0"/>
        <pt x="204" y="683" on="1"/>
        <pt x="288" y="683" on="0"/>
        <pt x="338" y="614" on="1"/>
        <pt x="424" y="497" on="0"/>
        <pt x="424" y="217" on="1"/>
        <pt x="424" y="204" on="0"/>
        <pt x="422" y="132" on="0"/>
        <pt x="422" y="123" on="1"/>
        <pt x="424" y="123" on="0"/>
        <pt x="464" y="168" on="1"/>
        <pt x="603" y="325" on="0"/>
        <pt x="650" y="469" on="1"/>
        <pt x="661" y="503" on="0"/>
        <pt x="661" y="519" on="1"/>
        <pt x="661" y="546" on="0"/>
        <pt x="639" y="570" on="1"/>
        <pt x="616" y="591" on="0"/>
        <pt x="583" y="591" on="1"/>
        <pt x="569" y="591" on="0"/>
        <pt x="569" y="616" on="1"/>
        <pt x="569" y="637" on="0"/>
        <pt x="588" y="675" on="0"/>
        <pt x="600" y="681" on="1"/>
        <pt x="606" y="683" on="0"/>
        <pt x="613" y="683" on="1"/>
        <pt x="645" y="683" on="0"/>
        <pt x="670" y="663" on="1"/>
        <pt x="714" y="628" on="0"/>
        <pt x="714" y="558" on="1"/>
        <pt x="714" y="528" on="0"/>
        <pt x="706" y="496" on="1"/>
        <pt x="678" y="388" on="0"/>
        <pt x="533" y="153" on="0"/>
        <pt x="426" y="45" on="1"/>
        <pt x="350" y="-33" on="0"/>
        <pt x="206" y="-136" on="0"/>
        <pt x="166" y="-142" on="1"/>
        <pt x="162" y="-143" on="0"/>
        <pt x="154" y="-143" on="1"/>
        <pt x="132" y="-143" on="0"/>
        <pt x="114" y="-137" on="1"/>
        <pt x="80" y="-125" on="0"/>
        <pt x="31" y="-60" on="0"/>
        <pt x="31" y="-20" on="1"/>
        <pt x="31" y="3" on="0"/>
        <pt x="58" y="46" on="0"/>
        <pt x="82" y="46" on="0"/>
        <pt x="85" y="24" on="1"/>
        <pt x="100" y="-44" on="0"/>
        <pt x="173" y="-50" on="1"/>
        <pt x="184" y="-51" on="0"/>
        <pt x="190" y="-50" on="1"/>
        <pt x="233" y="-41" on="0"/>
        <pt x="314" y="25" on="1"/>
        <pt x="330" y="36" on="0"/>
        <pt x="330" y="40" on="1"/>
        <pt x="336" y="78" on="0"/>
        <pt x="336" y="178" on="1"/>
        <pt x="336" y="245" on="0"/>
        <pt x="332" y="289" on="1"/>
        <pt x="314" y="524" on="0"/>
        <pt x="223" y="594" on="1"/>
        <pt x="199" y="614" on="0"/>
        <pt x="158" y="619" on="1"/>
        <pt x="148" y="620" on="1"/>
        <pt x="139" y="611" on="1"/>
        <pt x="111" y="586" on="0"/>
      </contour>
      <instructions><assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          46
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 10 values pushed */
          70 1 0 1 13 1 5 0 2 74
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 10 values pushed */
          70 1 2 1 13 1 5 0 2 74
          EIF[ ]	/* EndIf */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          23
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 26 values pushed */
          0 5 0 4 0 5 4 112 0 4 4 113 2 6 2 0 0 1 91 3 1 1 1 13 0
          76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          46
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 32 values pushed */
          0 5 0 4 0 5 4 112 0 4 4 113 3 1 1 0 0 1 87 3 1 1 1 0 91
          2 6 2 0 1 0 79
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 38 values pushed */
          6 1 0 2 5 2 0 5 112 0 5 4 2 5 4 110 0 4 4 113 3 1 1 2 2
          1 87 3 1 1 1 2 91 0 2 1 2 79
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 19 values pushed */
          1 0 52 51 45 44 31 30 24 22 7 5 0 72 1 72 7 6 20
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Z" xMin="37" yMin="0" xMax="767" yMax="683">
      <contour>
        <pt x="51" y="0" on="1"/>
        <pt x="37" y="0" on="0"/>
        <pt x="37" y="10" on="1"/>
        <pt x="37" y="22" on="0"/>
        <pt x="63" y="45" on="1"/>
        <pt x="228" y="186" on="0"/>
        <pt x="367" y="319" on="1"/>
        <pt x="391" y="343" on="1"/>
        <pt x="343" y="343" on="1"/>
        <pt x="296" y="344" on="1"/>
        <pt x="285" y="350" on="0"/>
        <pt x="285" y="358" on="1"/>
        <pt x="285" y="381" on="0"/>
        <pt x="321" y="396" on="1"/>
        <pt x="329" y="400" on="1"/>
        <pt x="450" y="400" on="1"/>
        <pt x="482" y="433" on="1"/>
        <pt x="583" y="540" on="0"/>
        <pt x="607" y="571" on="1"/>
        <pt x="621" y="587" on="1"/>
        <pt x="596" y="587" on="1"/>
        <pt x="555" y="588" on="0"/>
        <pt x="488" y="598" on="1"/>
        <pt x="411" y="609" on="0"/>
        <pt x="383" y="609" on="1"/>
        <pt x="346" y="609" on="0"/>
        <pt x="311" y="586" on="0"/>
        <pt x="301" y="555" on="1"/>
        <pt x="294" y="534" on="0"/>
        <pt x="265" y="515" on="1"/>
        <pt x="235" y="494" on="0"/>
        <pt x="208" y="492" on="1"/>
        <pt x="189" y="492" on="0"/>
        <pt x="189" y="503" on="1"/>
        <pt x="189" y="510" on="0"/>
        <pt x="206" y="547" on="0"/>
        <pt x="215" y="559" on="1"/>
        <pt x="249" y="606" on="0"/>
        <pt x="377" y="677" on="0"/>
        <pt x="439" y="682" on="1"/>
        <pt x="440" y="682" on="0"/>
        <pt x="459" y="683" on="0"/>
        <pt x="466" y="683" on="1"/>
        <pt x="511" y="683" on="0"/>
        <pt x="580" y="672" on="1"/>
        <pt x="648" y="663" on="0"/>
        <pt x="669" y="662" on="1"/>
        <pt x="690" y="661" on="1"/>
        <pt x="734" y="682" on="0"/>
        <pt x="748" y="683" on="1"/>
        <pt x="767" y="683" on="0"/>
        <pt x="767" y="673" on="1"/>
        <pt x="767" y="671" on="0"/>
        <pt x="766" y="669" on="1"/>
        <pt x="764" y="662" on="0"/>
        <pt x="746" y="640" on="1"/>
        <pt x="655" y="531" on="0"/>
        <pt x="555" y="428" on="1"/>
        <pt x="529" y="400" on="1"/>
        <pt x="529" y="399" on="0"/>
        <pt x="543" y="399" on="1"/>
        <pt x="590" y="397" on="0"/>
        <pt x="602" y="375" on="1"/>
        <pt x="604" y="369" on="0"/>
        <pt x="604" y="366" on="1"/>
        <pt x="604" y="350" on="0"/>
        <pt x="568" y="323" on="0"/>
        <pt x="551" y="322" on="1"/>
        <pt x="541" y="322" on="0"/>
        <pt x="539" y="323" on="1"/>
        <pt x="529" y="328" on="0"/>
        <pt x="529" y="334" on="1"/>
        <pt x="529" y="339" on="0"/>
        <pt x="487" y="342" on="1"/>
        <pt x="470" y="343" on="1"/>
        <pt x="446" y="320" on="1"/>
        <pt x="319" y="198" on="0"/>
        <pt x="205" y="100" on="1"/>
        <pt x="200" y="96" on="1"/>
        <pt x="235" y="95" on="1"/>
        <pt x="295" y="95" on="0"/>
        <pt x="398" y="85" on="1"/>
        <pt x="482" y="77" on="0"/>
        <pt x="533" y="74" on="1"/>
        <pt x="554" y="74" on="1"/>
        <pt x="587" y="118" on="0"/>
        <pt x="597" y="159" on="1"/>
        <pt x="603" y="178" on="0"/>
        <pt x="650" y="211" on="0"/>
        <pt x="676" y="218" on="1"/>
        <pt x="682" y="220" on="0"/>
        <pt x="694" y="220" on="1"/>
        <pt x="702" y="220" on="0"/>
        <pt x="706" y="217" on="1"/>
        <pt x="710" y="212" on="0"/>
        <pt x="706" y="197" on="1"/>
        <pt x="688" y="141" on="0"/>
        <pt x="656" y="101" on="1"/>
        <pt x="593" y="22" on="0"/>
        <pt x="502" y="3" on="1"/>
        <pt x="492" y="1" on="0"/>
        <pt x="458" y="1" on="1"/>
        <pt x="403" y="1" on="0"/>
        <pt x="301" y="11" on="1"/>
        <pt x="197" y="22" on="0"/>
        <pt x="150" y="22" on="1"/>
        <pt x="120" y="22" on="0"/>
        <pt x="94" y="12" on="1"/>
        <pt x="73" y="0" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 14 values pushed */
          51 1 7 6 33 1 5 3 64 1 1 2 3 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          22
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 76 values pushed */
          0 7 6 4 6 7 4 112 0 4 3 6 4 3 110 0 3 5 6 3 5 110 0 5 2
          6 5 2 110 0 12 10 13 10 12 13 112 9 1 2 0 10 12 2 10 99 11 1 1 1
          6 91 8 1 6 6 13 75 0 15 15 16 75 0 13 13 0 91 14 16 2 0 0 16 0
          76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          23
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 78 values pushed */
          0 7 6 4 6 7 4 112 0 4 3 6 4 3 110 0 3 5 6 3 5 110 0 5 2
          6 5 2 110 0 12 10 13 10 12 13 112 8 1 6 7 1 6 87 11 1 1 10 2 1
          85 9 1 2 0 10 12 2 10 99 0 15 15 16 75 0 13 13 0 91 14 16 2 0 0
          16 0 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 81 values pushed */
          0 7 6 4 6 7 4 112 0 4 3 6 4 3 110 0 3 5 6 3 5 110 0 5 2
          6 5 2 110 0 12 10 13 10 12 13 112 0 15 13 0 13 15 0 112 8 1 6 7 1
          6 87 11 1 1 10 2 1 85 9 1 2 0 10 12 2 10 99 0 13 13 0 91 14 16
          2 0 0 16 0 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 39 values pushed */
          1 0 106 104 102 100 84 82 80 78 74 73 68 66 61 60 50 49 47 45 43 39 32 31 25
          23 21 19 15 14 9 7 0 108 1 108 17 6 20
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="eight" xMin="43" yMin="-21" xMax="456" yMax="666">
      <contour>
        <pt x="122" y="616" on="1"/>
        <pt x="172" y="666" on="0"/>
        <pt x="247" y="666" on="1"/>
        <pt x="316" y="666" on="0"/>
        <pt x="414" y="596" on="0"/>
        <pt x="428" y="539" on="1"/>
        <pt x="429" y="533" on="0"/>
        <pt x="429" y="515" on="1"/>
        <pt x="429" y="471" on="0"/>
        <pt x="405" y="434" on="1"/>
        <pt x="380" y="398" on="0"/>
        <pt x="320" y="361" on="1"/>
        <pt x="332" y="353" on="0"/>
        <pt x="346" y="344" on="1"/>
        <pt x="386" y="318" on="0"/>
        <pt x="421" y="284" on="0"/>
        <pt x="439" y="250" on="1"/>
        <pt x="456" y="211" on="0"/>
        <pt x="456" y="172" on="1"/>
        <pt x="456" y="160" on="1"/>
        <pt x="456" y="144" on="0"/>
        <pt x="451" y="127" on="1"/>
        <pt x="435" y="63" on="0"/>
        <pt x="325" y="-21" on="0"/>
        <pt x="246" y="-21" on="1"/>
        <pt x="168" y="-21" on="0"/>
        <pt x="59" y="61" on="0"/>
        <pt x="45" y="125" on="1"/>
        <pt x="43" y="133" on="0"/>
        <pt x="43" y="155" on="1"/>
        <pt x="43" y="219" on="0"/>
        <pt x="83" y="265" on="1"/>
        <pt x="116" y="304" on="0"/>
        <pt x="167" y="332" on="1"/>
        <pt x="176" y="337" on="1"/>
        <pt x="161" y="347" on="1"/>
        <pt x="134" y="364" on="0"/>
        <pt x="121" y="377" on="1"/>
        <pt x="97" y="401" on="0"/>
        <pt x="87" y="423" on="1"/>
        <pt x="69" y="458" on="0"/>
        <pt x="69" y="496" on="1"/>
        <pt x="69" y="568" on="0"/>
      </contour>
      <contour>
        <pt x="249" y="626" on="1"/>
        <pt x="203" y="626" on="0"/>
        <pt x="127" y="575" on="0"/>
        <pt x="127" y="532" on="1"/>
        <pt x="127" y="500" on="0"/>
        <pt x="151" y="474" on="1"/>
        <pt x="159" y="465" on="0"/>
        <pt x="228" y="420" on="1"/>
        <pt x="284" y="384" on="1"/>
        <pt x="294" y="391" on="1"/>
        <pt x="346" y="424" on="0"/>
        <pt x="363" y="469" on="1"/>
        <pt x="371" y="486" on="0"/>
        <pt x="371" y="513" on="1"/>
        <pt x="371" y="531" on="0"/>
        <pt x="369" y="539" on="1"/>
        <pt x="359" y="577" on="0"/>
        <pt x="294" y="626" on="0"/>
      </contour>
      <contour>
        <pt x="250" y="21" on="1"/>
        <pt x="310" y="21" on="0"/>
        <pt x="393" y="92" on="0"/>
        <pt x="393" y="140" on="1"/>
        <pt x="393" y="179" on="0"/>
        <pt x="362" y="213" on="1"/>
        <pt x="350" y="225" on="0"/>
        <pt x="277" y="272" on="1"/>
        <pt x="263" y="281" on="0"/>
        <pt x="228" y="303" on="0"/>
        <pt x="220" y="308" on="1"/>
        <pt x="212" y="313" on="1"/>
        <pt x="207" y="313" on="0"/>
        <pt x="184" y="295" on="1"/>
        <pt x="127" y="254" on="0"/>
        <pt x="111" y="194" on="1"/>
        <pt x="106" y="172" on="0"/>
        <pt x="106" y="157" on="1"/>
        <pt x="106" y="100" on="0"/>
        <pt x="192" y="21" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 49 values pushed */
          72 51 34 11 5 5 3 2 1 74 0 0 4 1 2 3 0 2 99 5 1 3 3 1 91
          0 1 1 14 1 76 62 61 44 43 61 80 62 80 43 60 44 60 25 23 33 6 6 21
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="five" xMin="50" yMin="-216" xMax="448" yMax="453">
      <contour>
        <pt x="159" y="-44" on="1"/>
        <pt x="159" y="-67" on="0"/>
        <pt x="130" y="-94" on="0"/>
        <pt x="109" y="-96" on="1"/>
        <pt x="102" y="-96" on="1"/>
        <pt x="107" y="-105" on="1"/>
        <pt x="148" y="-173" on="0"/>
        <pt x="228" y="-173" on="1"/>
        <pt x="255" y="-173" on="0"/>
        <pt x="280" y="-162" on="1"/>
        <pt x="321" y="-141" on="0"/>
        <pt x="351" y="-62" on="0"/>
        <pt x="351" y="8" on="1"/>
        <pt x="351" y="67" on="0"/>
        <pt x="336" y="130" on="0"/>
        <pt x="316" y="151" on="1"/>
        <pt x="290" y="176" on="0"/>
        <pt x="255" y="176" on="1"/>
        <pt x="175" y="176" on="0"/>
        <pt x="136" y="109" on="1"/>
        <pt x="129" y="100" on="0"/>
        <pt x="114" y="100" on="1"/>
        <pt x="97" y="100" on="0"/>
        <pt x="95" y="106" on="1"/>
        <pt x="93" y="110" on="0"/>
        <pt x="93" y="277" on="1"/>
        <pt x="93" y="306" on="0"/>
        <pt x="92" y="386" on="0"/>
        <pt x="92" y="397" on="1"/>
        <pt x="92" y="451" on="0"/>
        <pt x="98" y="451" on="1"/>
        <pt x="100" y="452" on="0"/>
        <pt x="103" y="452" on="1"/>
        <pt x="107" y="452" on="0"/>
        <pt x="110" y="451" on="1"/>
        <pt x="178" y="423" on="0"/>
        <pt x="251" y="423" on="1"/>
        <pt x="290" y="423" on="0"/>
        <pt x="314" y="428" on="1"/>
        <pt x="354" y="434" on="0"/>
        <pt x="388" y="449" on="1"/>
        <pt x="397" y="453" on="0"/>
        <pt x="401" y="453" on="1"/>
        <pt x="410" y="453" on="0"/>
        <pt x="410" y="435" on="1"/>
        <pt x="410" y="422" on="1"/>
        <pt x="333" y="331" on="0"/>
        <pt x="203" y="331" on="1"/>
        <pt x="156" y="331" on="0"/>
        <pt x="140" y="339" on="1"/>
        <pt x="139" y="339" on="0"/>
        <pt x="139" y="254" on="1"/>
        <pt x="139" y="168" on="1"/>
        <pt x="164" y="189" on="0"/>
        <pt x="182" y="197" on="1"/>
        <pt x="218" y="214" on="0"/>
        <pt x="256" y="214" on="1"/>
        <pt x="345" y="214" on="0"/>
        <pt x="400" y="143" on="1"/>
        <pt x="448" y="84" on="0"/>
        <pt x="448" y="0" on="1"/>
        <pt x="448" y="-60" on="0"/>
        <pt x="416" y="-113" on="1"/>
        <pt x="389" y="-157" on="0"/>
        <pt x="289" y="-216" on="0"/>
        <pt x="229" y="-216" on="1"/>
        <pt x="207" y="-216" on="0"/>
        <pt x="184" y="-211" on="1"/>
        <pt x="128" y="-195" on="0"/>
        <pt x="54" y="-110" on="0"/>
        <pt x="50" y="-49" on="1"/>
        <pt x="50" y="-20" on="0"/>
        <pt x="79" y="13" on="0"/>
        <pt x="105" y="13" on="1"/>
        <pt x="129" y="13" on="0"/>
        <pt x="159" y="-18" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 79 values pushed */
          49 45 2 5 3 52 1 2 1 5 1 0 8 3 74 0 4 3 4 114 0 2 1 8 1
          2 8 112 0 8 0 1 8 0 110 0 3 0 5 6 3 5 99 0 6 0 1 2 6 1
          99 0 0 7 7 0 87 0 0 0 7 91 0 7 0 7 79 38 39 39 35 36 45 34 40
          38 9 6 29
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="four" xMin="28" yMin="-194" xMax="471" yMax="464">
      <contour>
        <pt x="193" y="-154" on="1"/>
        <pt x="199" y="-148" on="1"/>
        <pt x="228" y="-148" on="1"/>
        <pt x="232" y="-148" on="0"/>
        <pt x="245" y="-148" on="0"/>
        <pt x="252" y="-147" on="0"/>
        <pt x="262" y="-147" on="0"/>
        <pt x="267" y="-146" on="0"/>
        <pt x="274" y="-145" on="0"/>
        <pt x="278" y="-144" on="0"/>
        <pt x="283" y="-142" on="0"/>
        <pt x="285" y="-140" on="0"/>
        <pt x="286" y="-138" on="1"/>
        <pt x="289" y="-134" on="1"/>
        <pt x="289" y="0" on="1"/>
        <pt x="163" y="0" on="1"/>
        <pt x="61" y="0" on="0"/>
        <pt x="32" y="1" on="0"/>
        <pt x="30" y="6" on="1"/>
        <pt x="28" y="8" on="0"/>
        <pt x="28" y="27" on="1"/>
        <pt x="28" y="46" on="1"/>
        <pt x="40" y="63" on="1"/>
        <pt x="111" y="161" on="1"/>
        <pt x="182" y="259" on="0"/>
        <pt x="326" y="458" on="0"/>
        <pt x="330" y="462" on="1"/>
        <pt x="333" y="464" on="0"/>
        <pt x="352" y="464" on="1"/>
        <pt x="371" y="464" on="1"/>
        <pt x="377" y="458" on="1"/>
        <pt x="377" y="46" on="1"/>
        <pt x="464" y="46" on="1"/>
        <pt x="468" y="42" on="0"/>
        <pt x="471" y="40" on="1"/>
        <pt x="471" y="6" on="1"/>
        <pt x="468" y="4" on="0"/>
        <pt x="464" y="0" on="1"/>
        <pt x="377" y="0" on="1"/>
        <pt x="377" y="-65" on="1"/>
        <pt x="377" y="-132" on="0"/>
        <pt x="378" y="-134" on="1"/>
        <pt x="380" y="-143" on="0"/>
        <pt x="391" y="-144" on="1"/>
        <pt x="409" y="-148" on="0"/>
        <pt x="446" y="-148" on="1"/>
        <pt x="464" y="-148" on="1"/>
        <pt x="468" y="-151" on="0"/>
        <pt x="471" y="-155" on="1"/>
        <pt x="471" y="-187" on="1"/>
        <pt x="464" y="-194" on="1"/>
        <pt x="453" y="-194" on="1"/>
        <pt x="395" y="-192" on="0"/>
        <pt x="325" y="-192" on="1"/>
        <pt x="227" y="-192" on="0"/>
        <pt x="210" y="-194" on="1"/>
        <pt x="199" y="-194" on="1"/>
        <pt x="193" y="-188" on="1"/>
      </contour>
      <contour>
        <pt x="295" y="46" on="1"/>
        <pt x="295" y="350" on="1"/>
        <pt x="245" y="282" on="0"/>
        <pt x="185" y="198" on="1"/>
        <pt x="75" y="46" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 73 values pushed */
          59 30 2 3 2 35 34 2 1 3 13 1 0 1 57 49 48 0 4 6 0 4 74 21 1
          3 1 73 0 2 3 2 114 5 1 0 7 1 6 0 6 96 9 8 2 3 3 1 91 4
          1 1 1 16 1 76 58 58 58 62 58 62 17 68 38 21 18 42 56 81 10 6 28
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="nine" xMin="42" yMin="-216" xMax="457" yMax="453">
      <contour>
        <pt x="119" y="-49" on="1"/>
        <pt x="142" y="-49" on="0"/>
        <pt x="171" y="-80" on="0"/>
        <pt x="171" y="-101" on="1"/>
        <pt x="171" y="-124" on="0"/>
        <pt x="157" y="-138" on="1"/>
        <pt x="144" y="-151" on="0"/>
        <pt x="134" y="-151" on="1"/>
        <pt x="128" y="-151" on="0"/>
        <pt x="137" y="-157" on="1"/>
        <pt x="164" y="-173" on="0"/>
        <pt x="206" y="-173" on="1"/>
        <pt x="273" y="-173" on="0"/>
        <pt x="317" y="-108" on="1"/>
        <pt x="356" y="-49" on="0"/>
        <pt x="356" y="79" on="1"/>
        <pt x="356" y="86" on="1"/>
        <pt x="350" y="77" on="1"/>
        <pt x="307" y="9" on="0"/>
        <pt x="231" y="9" on="1"/>
        <pt x="215" y="9" on="0"/>
        <pt x="201" y="11" on="1"/>
        <pt x="138" y="23" on="0"/>
        <pt x="92" y="81" on="1"/>
        <pt x="42" y="141" on="0"/>
        <pt x="42" y="228" on="1"/>
        <pt x="42" y="288" on="0"/>
        <pt x="64" y="333" on="1"/>
        <pt x="79" y="362" on="0"/>
        <pt x="133" y="417" on="0"/>
        <pt x="160" y="431" on="1"/>
        <pt x="199" y="452" on="0"/>
        <pt x="235" y="452" on="1"/>
        <pt x="237" y="452" on="0"/>
        <pt x="251" y="453" on="0"/>
        <pt x="255" y="453" on="1"/>
        <pt x="260" y="453" on="0"/>
        <pt x="274" y="452" on="0"/>
        <pt x="276" y="452" on="1"/>
        <pt x="352" y="442" on="0"/>
        <pt x="440" y="313" on="0"/>
        <pt x="451" y="219" on="1"/>
        <pt x="457" y="179" on="0"/>
        <pt x="457" y="128" on="1"/>
        <pt x="457" y="24" on="0"/>
        <pt x="384" y="-137" on="0"/>
        <pt x="320" y="-180" on="1"/>
        <pt x="263" y="-216" on="0"/>
        <pt x="206" y="-216" on="1"/>
        <pt x="146" y="-216" on="0"/>
        <pt x="67" y="-157" on="0"/>
        <pt x="67" y="-104" on="1"/>
        <pt x="67" y="-79" on="0"/>
        <pt x="97" y="-49" on="0"/>
      </contour>
      <contour>
        <pt x="303" y="397" on="1"/>
        <pt x="283" y="412" on="0"/>
        <pt x="248" y="412" on="1"/>
        <pt x="207" y="412" on="0"/>
        <pt x="179" y="386" on="1"/>
        <pt x="155" y="360" on="0"/>
        <pt x="143" y="295" on="0"/>
        <pt x="143" y="224" on="1"/>
        <pt x="143" y="185" on="0"/>
        <pt x="144" y="173" on="1"/>
        <pt x="147" y="114" on="0"/>
        <pt x="163" y="88" on="1"/>
        <pt x="190" y="46" on="0"/>
        <pt x="242" y="46" on="1"/>
        <pt x="281" y="46" on="0"/>
        <pt x="308" y="74" on="1"/>
        <pt x="355" y="121" on="0"/>
        <pt x="355" y="223" on="1"/>
        <pt x="355" y="322" on="0"/>
        <pt x="337" y="356" on="1"/>
        <pt x="326" y="381" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 65 values pushed */
          63 15 2 7 6 1 74 0 4 0 6 7 4 6 99 8 1 0 0 1 2 0 1 99 0
          2 0 5 2 5 95 0 7 7 3 91 0 3 3 16 3 76 1 0 68 66 57 55 49 47
          36 31 20 18 12 10 7 6 0 53 1 53 9 6 20
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="nonmarkingreturn"/><!-- contains no outline data -->

    <TTGlyph name="one" xMin="86" yMin="0" xMax="426" yMax="453">
      <contour>
        <pt x="86" y="403" on="1"/>
        <pt x="90" y="407" on="0"/>
        <pt x="92" y="410" on="1"/>
        <pt x="116" y="410" on="1"/>
        <pt x="158" y="411" on="0"/>
        <pt x="182" y="416" on="1"/>
        <pt x="234" y="423" on="0"/>
        <pt x="274" y="447" on="1"/>
        <pt x="284" y="453" on="0"/>
        <pt x="288" y="453" on="1"/>
        <pt x="293" y="453" on="0"/>
        <pt x="301" y="447" on="1"/>
        <pt x="301" y="254" on="1"/>
        <pt x="301" y="62" on="0"/>
        <pt x="303" y="60" on="1"/>
        <pt x="307" y="53" on="0"/>
        <pt x="313" y="51" on="1"/>
        <pt x="330" y="46" on="0"/>
        <pt x="394" y="46" on="1"/>
        <pt x="418" y="46" on="0"/>
        <pt x="426" y="40" on="0"/>
        <pt x="426" y="23" on="1"/>
        <pt x="426" y="7" on="0"/>
        <pt x="422" y="0" on="0"/>
        <pt x="411" y="0" on="1"/>
        <pt x="392" y="0" on="0"/>
        <pt x="295" y="2" on="0"/>
        <pt x="221" y="2" on="0"/>
        <pt x="125" y="0" on="0"/>
        <pt x="106" y="0" on="1"/>
        <pt x="95" y="0" on="0"/>
        <pt x="91" y="7" on="0"/>
        <pt x="91" y="23" on="1"/>
        <pt x="91" y="40" on="0"/>
        <pt x="99" y="46" on="0"/>
        <pt x="123" y="46" on="1"/>
        <pt x="187" y="46" on="0"/>
        <pt x="204" y="51" on="1"/>
        <pt x="212" y="55" on="0"/>
        <pt x="215" y="61" on="1"/>
        <pt x="216" y="63" on="0"/>
        <pt x="216" y="220" on="1"/>
        <pt x="216" y="376" on="1"/>
        <pt x="193" y="366" on="0"/>
        <pt x="119" y="364" on="1"/>
        <pt x="93" y="364" on="1"/>
        <pt x="86" y="371" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 50 values pushed */
          11 1 0 1 46 42 0 3 5 0 39 1 2 5 3 74 0 1 0 1 114 0 0 0 5
          2 0 5 99 4 1 2 2 3 92 0 3 3 16 3 76 39 36 116 39 36 34 6 6 26
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="seven" xMin="55" yMin="-216" xMax="485" yMax="463">
      <contour>
        <pt x="75" y="246" on="1"/>
        <pt x="63" y="246" on="0"/>
        <pt x="58" y="248" on="0"/>
        <pt x="55" y="255" on="1"/>
        <pt x="55" y="259" on="0"/>
        <pt x="89" y="456" on="0"/>
        <pt x="90" y="458" on="1"/>
        <pt x="94" y="462" on="1"/>
        <pt x="99" y="462" on="1"/>
        <pt x="104" y="463" on="0"/>
        <pt x="109" y="463" on="1"/>
        <pt x="121" y="463" on="1"/>
        <pt x="128" y="456" on="0"/>
        <pt x="128" y="452" on="1"/>
        <pt x="128" y="438" on="0"/>
        <pt x="165" y="434" on="1"/>
        <pt x="204" y="431" on="0"/>
        <pt x="356" y="431" on="1"/>
        <pt x="478" y="431" on="1"/>
        <pt x="482" y="427" on="0"/>
        <pt x="485" y="425" on="1"/>
        <pt x="485" y="392" on="1"/>
        <pt x="414" y="298" on="1"/>
        <pt x="341" y="200" on="0"/>
        <pt x="338" y="195" on="1"/>
        <pt x="287" y="112" on="0"/>
        <pt x="277" y="-29" on="1"/>
        <pt x="274" y="-65" on="0"/>
        <pt x="274" y="-137" on="1"/>
        <pt x="274" y="-173" on="0"/>
        <pt x="272" y="-177" on="1"/>
        <pt x="262" y="-216" on="0"/>
        <pt x="223" y="-216" on="1"/>
        <pt x="181" y="-216" on="0"/>
        <pt x="171" y="-177" on="1"/>
        <pt x="170" y="-172" on="0"/>
        <pt x="170" y="-148" on="1"/>
        <pt x="174" y="2" on="0"/>
        <pt x="258" y="149" on="1"/>
        <pt x="287" y="197" on="0"/>
        <pt x="348" y="279" on="1"/>
        <pt x="395" y="340" on="0"/>
        <pt x="395" y="342" on="1"/>
        <pt x="396" y="343" on="0"/>
        <pt x="356" y="343" on="0"/>
        <pt x="274" y="343" on="1"/>
        <pt x="122" y="342" on="0"/>
        <pt x="117" y="339" on="1"/>
        <pt x="109" y="335" on="0"/>
        <pt x="98" y="272" on="1"/>
        <pt x="94" y="251" on="0"/>
        <pt x="90" y="248" on="1"/>
        <pt x="88" y="246" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 67 values pushed */
          21 20 2 4 2 3 1 0 4 34 26 2 3 0 3 74 0 1 2 1 114 5 1 0 4
          3 4 0 3 112 0 3 3 113 0 2 4 4 2 87 0 2 2 4 91 0 4 2 4 79
          1 0 46 44 33 31 18 16 11 9 0 52 1 52 6 6 20
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="six" xMin="42" yMin="-22" xMax="456" yMax="665">
      <contour>
        <pt x="143" y="356" on="1"/>
        <pt x="166" y="394" on="0"/>
        <pt x="223" y="434" on="0"/>
        <pt x="266" y="434" on="1"/>
        <pt x="317" y="434" on="0"/>
        <pt x="357" y="409" on="1"/>
        <pt x="406" y="375" on="0"/>
        <pt x="435" y="317" on="1"/>
        <pt x="456" y="268" on="0"/>
        <pt x="456" y="210" on="1"/>
        <pt x="456" y="192" on="1"/>
        <pt x="456" y="169" on="0"/>
        <pt x="451" y="149" on="1"/>
        <pt x="439" y="90" on="0"/>
        <pt x="389" y="38" on="1"/>
        <pt x="346" y="-7" on="0"/>
        <pt x="293" y="-18" on="1"/>
        <pt x="277" y="-22" on="0"/>
        <pt x="253" y="-22" on="1"/>
        <pt x="234" y="-22" on="0"/>
        <pt x="219" y="-19" on="1"/>
        <pt x="145" y="-5" on="0"/>
        <pt x="101" y="61" on="1"/>
        <pt x="42" y="154" on="0"/>
        <pt x="42" y="313" on="1"/>
        <pt x="42" y="421" on="0"/>
        <pt x="118" y="583" on="0"/>
        <pt x="186" y="628" on="1"/>
        <pt x="240" y="665" on="0"/>
        <pt x="296" y="665" on="1"/>
        <pt x="423" y="665" on="0"/>
        <pt x="432" y="557" on="1"/>
        <pt x="432" y="531" on="0"/>
        <pt x="404" y="498" on="0"/>
        <pt x="380" y="498" on="1"/>
        <pt x="357" y="498" on="0"/>
        <pt x="328" y="528" on="0"/>
        <pt x="328" y="550" on="1"/>
        <pt x="328" y="573" on="0"/>
        <pt x="342" y="587" on="1"/>
        <pt x="352" y="597" on="0"/>
        <pt x="367" y="601" on="1"/>
        <pt x="372" y="602" on="1"/>
        <pt x="372" y="605" on="0"/>
        <pt x="355" y="615" on="1"/>
        <pt x="335" y="626" on="0"/>
        <pt x="307" y="626" on="1"/>
        <pt x="290" y="626" on="0"/>
        <pt x="265" y="619" on="1"/>
        <pt x="205" y="600" on="0"/>
        <pt x="174" y="537" on="1"/>
        <pt x="147" y="483" on="0"/>
        <pt x="143" y="376" on="1"/>
      </contour>
      <contour>
        <pt x="280" y="395" on="1"/>
        <pt x="274" y="396" on="0"/>
        <pt x="251" y="396" on="1"/>
        <pt x="241" y="396" on="1"/>
        <pt x="196" y="389" on="0"/>
        <pt x="145" y="288" on="0"/>
        <pt x="145" y="217" on="1"/>
        <pt x="145" y="131" on="0"/>
        <pt x="157" y="95" on="1"/>
        <pt x="166" y="64" on="0"/>
        <pt x="219" y="21" on="0"/>
        <pt x="252" y="21" on="1"/>
        <pt x="293" y="21" on="0"/>
        <pt x="321" y="47" on="1"/>
        <pt x="342" y="68" on="0"/>
        <pt x="356" y="130" on="0"/>
        <pt x="356" y="203" on="1"/>
        <pt x="356" y="271" on="0"/>
        <pt x="351" y="311" on="1"/>
        <pt x="338" y="381" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 10 values pushed */
          31 1 3 4 0 1 6 5 2 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          10
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 34 values pushed */
          0 3 4 0 4 3 104 0 2 0 4 3 2 4 99 0 0 0 5 6 0 5 97 0 6
          6 1 91 0 1 1 14 1 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 35 values pushed */
          0 3 4 0 4 3 0 112 0 2 0 4 3 2 4 99 0 0 0 5 6 0 5 97 0
          6 6 1 91 0 1 1 14 1 76
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 10 values pushed */
          39 54 42 35 41 45 34 7 6 27
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="space"/><!-- contains no outline data -->

    <TTGlyph name="three" xMin="42" yMin="-216" xMax="456" yMax="452">
      <contour>
        <pt x="104" y="-7" on="1"/>
        <pt x="129" y="-7" on="0"/>
        <pt x="162" y="-42" on="0"/>
        <pt x="162" y="-66" on="1"/>
        <pt x="162" y="-87" on="0"/>
        <pt x="136" y="-120" on="0"/>
        <pt x="118" y="-125" on="1"/>
        <pt x="113" y="-126" on="1"/>
        <pt x="113" y="-129" on="0"/>
        <pt x="140" y="-148" on="0"/>
        <pt x="150" y="-153" on="1"/>
        <pt x="192" y="-173" on="0"/>
        <pt x="239" y="-173" on="1"/>
        <pt x="268" y="-173" on="0"/>
        <pt x="292" y="-158" on="1"/>
        <pt x="345" y="-124" on="0"/>
        <pt x="345" y="-24" on="1"/>
        <pt x="345" y="33" on="0"/>
        <pt x="329" y="67" on="1"/>
        <pt x="303" y="115" on="0"/>
        <pt x="257" y="123" on="1"/>
        <pt x="251" y="125" on="0"/>
        <pt x="210" y="125" on="1"/>
        <pt x="172" y="125" on="1"/>
        <pt x="166" y="131" on="0"/>
        <pt x="166" y="142" on="1"/>
        <pt x="166" y="159" on="0"/>
        <pt x="172" y="161" on="1"/>
        <pt x="176" y="161" on="0"/>
        <pt x="241" y="168" on="0"/>
        <pt x="244" y="169" on="1"/>
        <pt x="250" y="169" on="0"/>
        <pt x="260" y="175" on="1"/>
        <pt x="290" y="190" on="0"/>
        <pt x="327" y="264" on="0"/>
        <pt x="327" y="314" on="1"/>
        <pt x="327" y="413" on="0"/>
        <pt x="238" y="413" on="1"/>
        <pt x="180" y="413" on="0"/>
        <pt x="130" y="369" on="1"/>
        <pt x="154" y="362" on="0"/>
        <pt x="181" y="337" on="0"/>
        <pt x="181" y="312" on="1"/>
        <pt x="181" y="289" on="0"/>
        <pt x="149" y="257" on="0"/>
        <pt x="101" y="257" on="0"/>
        <pt x="69" y="287" on="0"/>
        <pt x="69" y="312" on="1"/>
        <pt x="69" y="327" on="0"/>
        <pt x="72" y="339" on="1"/>
        <pt x="81" y="380" on="0"/>
        <pt x="150" y="438" on="0"/>
        <pt x="201" y="449" on="1"/>
        <pt x="218" y="452" on="0"/>
        <pt x="233" y="452" on="1"/>
        <pt x="316" y="452" on="0"/>
        <pt x="368" y="417" on="1"/>
        <pt x="430" y="377" on="0"/>
        <pt x="430" y="313" on="1"/>
        <pt x="430" y="276" on="0"/>
        <pt x="413" y="242" on="1"/>
        <pt x="382" y="180" on="0"/>
        <pt x="311" y="149" on="1"/>
        <pt x="301" y="144" on="1"/>
        <pt x="303" y="143" on="1"/>
        <pt x="305" y="142" on="0"/>
        <pt x="312" y="141" on="0"/>
        <pt x="314" y="140" on="1"/>
        <pt x="432" y="101" on="0"/>
        <pt x="454" y="4" on="1"/>
        <pt x="456" y="-4" on="0"/>
        <pt x="456" y="-25" on="1"/>
        <pt x="456" y="-47" on="0"/>
        <pt x="454" y="-55" on="1"/>
        <pt x="441" y="-117" on="0"/>
        <pt x="346" y="-202" on="0"/>
        <pt x="277" y="-214" on="1"/>
        <pt x="261" y="-216" on="0"/>
        <pt x="241" y="-216" on="1"/>
        <pt x="124" y="-216" on="0"/>
        <pt x="64" y="-138" on="1"/>
        <pt x="42" y="-105" on="0"/>
        <pt x="42" y="-68" on="1"/>
        <pt x="42" y="-39" on="0"/>
        <pt x="75" y="-7" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 78 values pushed */
          39 1 4 3 63 1 2 4 2 74 0 4 3 2 3 4 2 112 0 2 0 3 2 0 110
          7 1 0 1 3 0 1 110 0 5 0 3 4 5 3 99 0 1 6 6 1 87 0 1 1
          6 92 0 6 1 6 80 1 0 79 77 55 53 45 44 38 36 23 20 13 11 0 84 1 84
          8 6 20
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="two" xMin="44" yMin="0" xMax="449" yMax="453">
      <contour>
        <pt x="55" y="334" on="1"/>
        <pt x="55" y="392" on="0"/>
        <pt x="162" y="453" on="0"/>
        <pt x="236" y="453" on="1"/>
        <pt x="320" y="453" on="0"/>
        <pt x="433" y="392" on="0"/>
        <pt x="447" y="331" on="1"/>
        <pt x="448" y="325" on="0"/>
        <pt x="448" y="307" on="1"/>
        <pt x="448" y="286" on="0"/>
        <pt x="446" y="280" on="1"/>
        <pt x="442" y="263" on="0"/>
        <pt x="422" y="234" on="0"/>
        <pt x="403" y="216" on="0"/>
        <pt x="364" y="193" on="0"/>
        <pt x="342" y="182" on="0"/>
        <pt x="316" y="170" on="1"/>
        <pt x="310" y="167" on="0"/>
        <pt x="291" y="158" on="0"/>
        <pt x="279" y="152" on="0"/>
        <pt x="277" y="151" on="1"/>
        <pt x="269" y="147" on="0"/>
        <pt x="163" y="85" on="0"/>
        <pt x="163" y="83" on="0"/>
        <pt x="267" y="83" on="1"/>
        <pt x="382" y="85" on="1"/>
        <pt x="391" y="85" on="1"/>
        <pt x="398" y="96" on="0"/>
        <pt x="406" y="126" on="1"/>
        <pt x="410" y="143" on="0"/>
        <pt x="416" y="148" on="0"/>
        <pt x="429" y="148" on="1"/>
        <pt x="441" y="148" on="0"/>
        <pt x="446" y="146" on="0"/>
        <pt x="449" y="139" on="1"/>
        <pt x="422" y="9" on="0"/>
        <pt x="420" y="7" on="1"/>
        <pt x="420" y="6" on="0"/>
        <pt x="414" y="0" on="1"/>
        <pt x="233" y="0" on="1"/>
        <pt x="94" y="0" on="0"/>
        <pt x="47" y="1" on="0"/>
        <pt x="46" y="5" on="1"/>
        <pt x="46" y="5" on="0"/>
        <pt x="46" y="6" on="1"/>
        <pt x="44" y="8" on="0"/>
        <pt x="44" y="24" on="1"/>
        <pt x="44" y="39" on="0"/>
        <pt x="46" y="41" on="1"/>
        <pt x="47" y="44" on="0"/>
        <pt x="215" y="157" on="1"/>
        <pt x="279" y="200" on="0"/>
        <pt x="294" y="212" on="1"/>
        <pt x="347" y="257" on="0"/>
        <pt x="347" y="304" on="1"/>
        <pt x="347" y="352" on="0"/>
        <pt x="268" y="407" on="0"/>
        <pt x="203" y="407" on="1"/>
        <pt x="150" y="407" on="0"/>
        <pt x="120" y="377" on="1"/>
        <pt x="118" y="375" on="0"/>
        <pt x="123" y="373" on="1"/>
        <pt x="146" y="362" on="0"/>
        <pt x="146" y="332" on="1"/>
        <pt x="146" y="313" on="0"/>
        <pt x="121" y="288" on="0"/>
        <pt x="81" y="288" on="0"/>
        <pt x="55" y="314" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 59 values pushed */
          59 6 2 5 4 34 1 1 2 2 74 0 5 4 2 4 5 2 112 0 2 1 4 2 1
          110 0 0 0 4 5 0 4 99 0 1 1 3 91 0 3 3 16 3 76 66 65 58 56 41
          38 32 30 26 22 34 6 6 21
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="uni00A0"/><!-- contains no outline data -->

    <TTGlyph name="uniEFFD" xMin="0" yMin="0" xMax="300" yMax="100">
      <contour>
        <pt x="0" y="0" on="1"/>
        <pt x="0" y="100" on="1"/>
        <pt x="100" y="100" on="1"/>
        <pt x="100" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="200" y="0" on="1"/>
        <pt x="200" y="100" on="1"/>
        <pt x="300" y="100" on="1"/>
        <pt x="300" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 6 values pushed */
          5 4 1 0 2 48
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="uniEFFE" xMin="0" yMin="0" xMax="300" yMax="100">
      <contour>
        <pt x="0" y="0" on="1"/>
        <pt x="0" y="100" on="1"/>
        <pt x="100" y="100" on="1"/>
        <pt x="100" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="200" y="0" on="1"/>
        <pt x="200" y="100" on="1"/>
        <pt x="300" y="100" on="1"/>
        <pt x="300" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 6 values pushed */
          5 4 1 0 2 48
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="uniEFFF" xMin="0" yMin="0" xMax="100" yMax="100">
      <contour>
        <pt x="0" y="0" on="1"/>
        <pt x="0" y="100" on="1"/>
        <pt x="100" y="100" on="1"/>
        <pt x="100" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 4 values pushed */
          1 0 1 48
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="zero" xMin="39" yMin="-22" xMax="460" yMax="452">
      <contour>
        <pt x="242" y="452" on="1"/>
        <pt x="355" y="452" on="0"/>
        <pt x="460" y="332" on="0"/>
        <pt x="460" y="213" on="1"/>
        <pt x="460" y="-22" on="0"/>
        <pt x="250" y="-22" on="1"/>
        <pt x="39" y="-22" on="0"/>
        <pt x="39" y="213" on="1"/>
        <pt x="39" y="325" on="0"/>
        <pt x="139" y="452" on="0"/>
      </contour>
      <contour>
        <pt x="364" y="242" on="1"/>
        <pt x="364" y="279" on="0"/>
        <pt x="361" y="323" on="0"/>
        <pt x="349" y="373" on="0"/>
        <pt x="326" y="398" on="0"/>
        <pt x="285" y="415" on="0"/>
        <pt x="254" y="415" on="1"/>
        <pt x="250" y="415" on="0"/>
        <pt x="240" y="416" on="0"/>
        <pt x="238" y="416" on="1"/>
        <pt x="208" y="416" on="0"/>
        <pt x="159" y="388" on="0"/>
        <pt x="150" y="368" on="1"/>
        <pt x="142" y="351" on="0"/>
        <pt x="137" y="304" on="1"/>
        <pt x="136" y="294" on="0"/>
        <pt x="136" y="221" on="1"/>
        <pt x="136" y="173" on="1"/>
        <pt x="136" y="107" on="0"/>
        <pt x="159" y="40" on="0"/>
        <pt x="200" y="23" on="1"/>
        <pt x="219" y="16" on="0"/>
        <pt x="250" y="16" on="1"/>
        <pt x="283" y="16" on="0"/>
        <pt x="327" y="36" on="0"/>
        <pt x="350" y="63" on="0"/>
        <pt x="362" y="121" on="0"/>
        <pt x="364" y="166" on="0"/>
        <pt x="364" y="209" on="1"/>
        <pt x="364" y="221" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 38 values pushed */
          5 1 0 3 1 2 4 0 2 99 0 4 4 1 91 0 1 1 14 1 76 1 0 33 31
          20 18 16 15 6 4 0 9 1 9 6 6 20
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

  </glyf>

  <name>
    <namerecord nameID="0" platformID="1" platEncID="0" langID="0x0" unicode="True">
      Copyright (c) 2009-2010 Design Science, Inc.
Copyright (c) 2014 Khan Academy
    </namerecord>
    <namerecord nameID="1" platformID="1" platEncID="0" langID="0x0" unicode="True">
      KaTeX_Caligraphic
    </namerecord>
    <namerecord nameID="2" platformID="1" platEncID="0" langID="0x0" unicode="True">
      Regular
    </namerecord>
    <namerecord nameID="3" platformID="1" platEncID="0" langID="0x0" unicode="True">
      FontForge 2.0 : KaTeX_Caligraphic-Regular
    </namerecord>
    <namerecord nameID="4" platformID="1" platEncID="0" langID="0x0" unicode="True">
      KaTeX_Caligraphic-Regular
    </namerecord>
    <namerecord nameID="5" platformID="1" platEncID="0" langID="0x0" unicode="True">
      Version 1.1; ttfautohint (v1.3)
    </namerecord>
    <namerecord nameID="6" platformID="1" platEncID="0" langID="0x0" unicode="True">
      KaTeX_Caligraphic-Regular
    </namerecord>
    <namerecord nameID="13" platformID="1" platEncID="0" langID="0x0" unicode="True">
      Copyright (c) 2009-2010, Design Science, Inc. (&lt;www.mathjax.org&gt;)
Copyright (c) 2014 Khan Academy (&lt;www.khanacademy.org&gt;),
with Reserved Font Name KaTeX_Caligraphic.

This Font Software is licensed under the SIL Open Font License, Version 1.1.
This license available with a FAQ at:
http://scripts.sil.org/OFL
    </namerecord>
    <namerecord nameID="14" platformID="1" platEncID="0" langID="0x0" unicode="True">
      http://scripts.sil.org/OFL
    </namerecord>
    <namerecord nameID="16" platformID="1" platEncID="0" langID="0x0" unicode="True">
      KaTeX_Caligraphic
    </namerecord>
    <namerecord nameID="17" platformID="1" platEncID="0" langID="0x0" unicode="True">
      Regular
    </namerecord>
    <namerecord nameID="0" platformID="3" platEncID="1" langID="0x409">
      Copyright (c) 2009-2010 Design Science, Inc.
Copyright (c) 2014 Khan Academy
    </namerecord>
    <namerecord nameID="1" platformID="3" platEncID="1" langID="0x409">
      KaTeX_Caligraphic
    </namerecord>
    <namerecord nameID="2" platformID="3" platEncID="1" langID="0x409">
      Regular
    </namerecord>
    <namerecord nameID="3" platformID="3" platEncID="1" langID="0x409">
      FontForge 2.0 : KaTeX_Caligraphic-Regular
    </namerecord>
    <namerecord nameID="4" platformID="3" platEncID="1" langID="0x409">
      KaTeX_Caligraphic-Regular
    </namerecord>
    <namerecord nameID="5" platformID="3" platEncID="1" langID="0x409">
      Version 1.1; ttfautohint (v1.3)
    </namerecord>
    <namerecord nameID="6" platformID="3" platEncID="1" langID="0x409">
      KaTeX_Caligraphic-Regular
    </namerecord>
    <namerecord nameID="13" platformID="3" platEncID="1" langID="0x409">
      Copyright (c) 2009-2010, Design Science, Inc. (&lt;www.mathjax.org&gt;)
Copyright (c) 2014 Khan Academy (&lt;www.khanacademy.org&gt;),
with Reserved Font Name KaTeX_Caligraphic.

This Font Software is licensed under the SIL Open Font License, Version 1.1.
This license available with a FAQ at:
http://scripts.sil.org/OFL
    </namerecord>
    <namerecord nameID="14" platformID="3" platEncID="1" langID="0x409">
      http://scripts.sil.org/OFL
    </namerecord>
    <namerecord nameID="16" platformID="3" platEncID="1" langID="0x409">
      KaTeX_Caligraphic
    </namerecord>
    <namerecord nameID="17" platformID="3" platEncID="1" langID="0x409">
      Regular
    </namerecord>
  </name>

  <post>
    <formatType value="2.0"/>
    <italicAngle value="0.0"/>
    <underlinePosition value="-125"/>
    <underlineThickness value="50"/>
    <isFixedPitch value="0"/>
    <minMemType42 value="0"/>
    <maxMemType42 value="0"/>
    <minMemType1 value="0"/>
    <maxMemType1 value="0"/>
    <psNames>
      <!-- This file uses unique glyph names based on the information
           found in the 'post' table. Since these names might not be unique,
           we have to invent artificial names in case of clashes. In order to
           be able to retain the original information, we need a name to
           ps name mapping for those cases where they differ. That's what
           you see below.
            -->
    </psNames>
    <extraNames>
      <!-- following are the name that are not taken from the standard Mac glyph order -->
      <psName name="uni00A0"/>
      <psName name="uniEFFD"/>
      <psName name="uniEFFE"/>
      <psName name="uniEFFF"/>
    </extraNames>
  </post>

  <gasp>
    <gaspRange rangeMaxPPEM="65535" rangeGaspBehavior="15"/>
  </gasp>

  <FFTM>
    <!-- FontForge's timestamp, font source creation and modification dates -->
    <version value="1"/>
    <FFTimeStamp value="Tue Jul 31 14:57:19 2012"/>
    <sourceCreated value="Mon Oct 12 19:21:51 2009"/>
    <sourceModified value="Tue Jan 17 04:00:23 2017"/>
  </FFTM>

</ttFont>
