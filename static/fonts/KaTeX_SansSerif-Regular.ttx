<?xml version="1.0" encoding="UTF-8"?>
<ttFont sfntVersion="\x00\x01\x00\x00" ttLibVersion="3.3">

  <GlyphOrder>
    <!-- The 'id' attribute is only for humans; it is ignored when parsed. -->
    <GlyphID id="0" name=".notdef"/>
    <GlyphID id="1" name=".null"/>
    <GlyphID id="2" name="nonmarkingreturn"/>
    <GlyphID id="3" name="space"/>
    <GlyphID id="4" name="exclam"/>
    <GlyphID id="5" name="quotedbl"/>
    <GlyphID id="6" name="numbersign"/>
    <GlyphID id="7" name="dollar"/>
    <GlyphID id="8" name="percent"/>
    <GlyphID id="9" name="ampersand"/>
    <GlyphID id="10" name="quotesingle"/>
    <GlyphID id="11" name="parenleft"/>
    <GlyphID id="12" name="parenright"/>
    <GlyphID id="13" name="asterisk"/>
    <GlyphID id="14" name="plus"/>
    <GlyphID id="15" name="comma"/>
    <GlyphID id="16" name="hyphen"/>
    <GlyphID id="17" name="period"/>
    <GlyphID id="18" name="slash"/>
    <GlyphID id="19" name="zero"/>
    <GlyphID id="20" name="one"/>
    <GlyphID id="21" name="two"/>
    <GlyphID id="22" name="three"/>
    <GlyphID id="23" name="four"/>
    <GlyphID id="24" name="five"/>
    <GlyphID id="25" name="six"/>
    <GlyphID id="26" name="seven"/>
    <GlyphID id="27" name="eight"/>
    <GlyphID id="28" name="nine"/>
    <GlyphID id="29" name="colon"/>
    <GlyphID id="30" name="semicolon"/>
    <GlyphID id="31" name="equal"/>
    <GlyphID id="32" name="question"/>
    <GlyphID id="33" name="at"/>
    <GlyphID id="34" name="A"/>
    <GlyphID id="35" name="B"/>
    <GlyphID id="36" name="C"/>
    <GlyphID id="37" name="D"/>
    <GlyphID id="38" name="E"/>
    <GlyphID id="39" name="F"/>
    <GlyphID id="40" name="G"/>
    <GlyphID id="41" name="H"/>
    <GlyphID id="42" name="I"/>
    <GlyphID id="43" name="J"/>
    <GlyphID id="44" name="K"/>
    <GlyphID id="45" name="L"/>
    <GlyphID id="46" name="M"/>
    <GlyphID id="47" name="N"/>
    <GlyphID id="48" name="O"/>
    <GlyphID id="49" name="P"/>
    <GlyphID id="50" name="Q"/>
    <GlyphID id="51" name="R"/>
    <GlyphID id="52" name="S"/>
    <GlyphID id="53" name="T"/>
    <GlyphID id="54" name="U"/>
    <GlyphID id="55" name="V"/>
    <GlyphID id="56" name="W"/>
    <GlyphID id="57" name="X"/>
    <GlyphID id="58" name="Y"/>
    <GlyphID id="59" name="Z"/>
    <GlyphID id="60" name="bracketleft"/>
    <GlyphID id="61" name="bracketright"/>
    <GlyphID id="62" name="asciicircum"/>
    <GlyphID id="63" name="underscore"/>
    <GlyphID id="64" name="a"/>
    <GlyphID id="65" name="b"/>
    <GlyphID id="66" name="c"/>
    <GlyphID id="67" name="d"/>
    <GlyphID id="68" name="e"/>
    <GlyphID id="69" name="f"/>
    <GlyphID id="70" name="g"/>
    <GlyphID id="71" name="h"/>
    <GlyphID id="72" name="i"/>
    <GlyphID id="73" name="j"/>
    <GlyphID id="74" name="k"/>
    <GlyphID id="75" name="l"/>
    <GlyphID id="76" name="m"/>
    <GlyphID id="77" name="n"/>
    <GlyphID id="78" name="o"/>
    <GlyphID id="79" name="p"/>
    <GlyphID id="80" name="q"/>
    <GlyphID id="81" name="r"/>
    <GlyphID id="82" name="s"/>
    <GlyphID id="83" name="t"/>
    <GlyphID id="84" name="u"/>
    <GlyphID id="85" name="v"/>
    <GlyphID id="86" name="w"/>
    <GlyphID id="87" name="x"/>
    <GlyphID id="88" name="y"/>
    <GlyphID id="89" name="z"/>
    <GlyphID id="90" name="asciitilde"/>
    <GlyphID id="91" name="uni00A0"/>
    <GlyphID id="92" name="dotlessi"/>
    <GlyphID id="93" name="uni0237"/>
    <GlyphID id="94" name="gravecomb"/>
    <GlyphID id="95" name="acutecomb"/>
    <GlyphID id="96" name="uni0302"/>
    <GlyphID id="97" name="tildecomb"/>
    <GlyphID id="98" name="uni0304"/>
    <GlyphID id="99" name="uni0306"/>
    <GlyphID id="100" name="uni0307"/>
    <GlyphID id="101" name="uni0308"/>
    <GlyphID id="102" name="uni030A"/>
    <GlyphID id="103" name="uni030B"/>
    <GlyphID id="104" name="uni030C"/>
    <GlyphID id="105" name="Gamma"/>
    <GlyphID id="106" name="Delta"/>
    <GlyphID id="107" name="Theta"/>
    <GlyphID id="108" name="Lambda"/>
    <GlyphID id="109" name="Xi"/>
    <GlyphID id="110" name="Pi"/>
    <GlyphID id="111" name="Sigma"/>
    <GlyphID id="112" name="Upsilon"/>
    <GlyphID id="113" name="Phi"/>
    <GlyphID id="114" name="Psi"/>
    <GlyphID id="115" name="Omega"/>
    <GlyphID id="116" name="endash"/>
    <GlyphID id="117" name="emdash"/>
    <GlyphID id="118" name="quoteleft"/>
    <GlyphID id="119" name="quoteright"/>
    <GlyphID id="120" name="quotedblleft"/>
    <GlyphID id="121" name="quotedblright"/>
    <GlyphID id="122" name="uniEFFD"/>
    <GlyphID id="123" name="uniEFFE"/>
    <GlyphID id="124" name="uniEFFF"/>
  </GlyphOrder>

  <head>
    <!-- Most of this table will be recalculated by the compiler -->
    <tableVersion value="1.0"/>
    <fontRevision value="1.0"/>
    <checkSumAdjustment value="0xacb013f6"/>
    <magicNumber value="0x5f0f3cf5"/>
    <flags value="00000000 00011111"/>
    <unitsPerEm value="1000"/>
    <created value="Mon Jun 29 22:52:19 2015"/>
    <modified value="Mon Jun 29 22:52:19 2015"/>
    <xMin value="-431"/>
    <yMin value="-250"/>
    <xMax value="999"/>
    <yMax value="750"/>
    <macStyle value="00000000 00000000"/>
    <lowestRecPPEM value="8"/>
    <fontDirectionHint value="2"/>
    <indexToLocFormat value="0"/>
    <glyphDataFormat value="0"/>
  </head>

  <hhea>
    <tableVersion value="0x00010000"/>
    <ascent value="750"/>
    <descent value="-250"/>
    <lineGap value="90"/>
    <advanceWidthMax value="1000"/>
    <minLeftSideBearing value="-431"/>
    <minRightSideBearing value="-41"/>
    <xMaxExtent value="999"/>
    <caretSlopeRise value="1"/>
    <caretSlopeRun value="0"/>
    <caretOffset value="0"/>
    <reserved0 value="0"/>
    <reserved1 value="0"/>
    <reserved2 value="0"/>
    <reserved3 value="0"/>
    <metricDataFormat value="0"/>
    <numberOfHMetrics value="125"/>
  </hhea>

  <maxp>
    <!-- Most of this table will be recalculated by the compiler -->
    <tableVersion value="0x10000"/>
    <numGlyphs value="125"/>
    <maxPoints value="106"/>
    <maxContours value="5"/>
    <maxCompositePoints value="0"/>
    <maxCompositeContours value="0"/>
    <maxZones value="2"/>
    <maxTwilightPoints value="34"/>
    <maxStorage value="50"/>
    <maxFunctionDefs value="119"/>
    <maxInstructionDefs value="0"/>
    <maxStackElements value="100"/>
    <maxSizeOfInstructions value="288"/>
    <maxComponentElements value="0"/>
    <maxComponentDepth value="0"/>
  </maxp>

  <OS_2>
    <!-- The fields 'usFirstCharIndex' and 'usLastCharIndex'
         will be recalculated by the compiler -->
    <version value="2"/>
    <xAvgCharWidth value="407"/>
    <usWeightClass value="400"/>
    <usWidthClass value="5"/>
    <fsType value="00000000 00000000"/>
    <ySubscriptXSize value="650"/>
    <ySubscriptYSize value="700"/>
    <ySubscriptXOffset value="0"/>
    <ySubscriptYOffset value="140"/>
    <ySuperscriptXSize value="650"/>
    <ySuperscriptYSize value="700"/>
    <ySuperscriptXOffset value="0"/>
    <ySuperscriptYOffset value="480"/>
    <yStrikeoutSize value="49"/>
    <yStrikeoutPosition value="258"/>
    <sFamilyClass value="0"/>
    <panose>
      <bFamilyType value="0"/>
      <bSerifStyle value="0"/>
      <bWeight value="0"/>
      <bProportion value="0"/>
      <bContrast value="0"/>
      <bStrokeVariation value="0"/>
      <bArmStyle value="0"/>
      <bLetterForm value="0"/>
      <bMidline value="0"/>
      <bXHeight value="0"/>
    </panose>
    <ulUnicodeRange1 value="10000000 00000000 00000000 11101111"/>
    <ulUnicodeRange2 value="00010000 00000000 11101100 11101101"/>
    <ulUnicodeRange3 value="00000000 00000000 00000000 00000000"/>
    <ulUnicodeRange4 value="00000000 00000000 00000000 00000000"/>
    <achVendID value="PfEd"/>
    <fsSelection value="00000000 01000000"/>
    <usFirstCharIndex value="32"/>
    <usLastCharIndex value="61439"/>
    <sTypoAscender value="800"/>
    <sTypoDescender value="-200"/>
    <sTypoLineGap value="90"/>
    <usWinAscent value="750"/>
    <usWinDescent value="250"/>
    <ulCodePageRange1 value="00100000 00000000 00000000 10001111"/>
    <ulCodePageRange2 value="01011110 00000011 00000000 00000000"/>
    <sxHeight value="444"/>
    <sCapHeight value="694"/>
    <usDefaultChar value="0"/>
    <usBreakChar value="32"/>
    <usMaxContext value="1"/>
  </OS_2>

  <hmtx>
    <mtx name=".notdef" width="250" lsb="50"/>
    <mtx name=".null" width="0" lsb="0"/>
    <mtx name="A" width="667" lsb="28"/>
    <mtx name="B" width="667" lsb="90"/>
    <mtx name="C" width="639" lsb="59"/>
    <mtx name="D" width="722" lsb="88"/>
    <mtx name="Delta" width="833" lsb="42"/>
    <mtx name="E" width="597" lsb="86"/>
    <mtx name="F" width="569" lsb="86"/>
    <mtx name="G" width="667" lsb="59"/>
    <mtx name="Gamma" width="542" lsb="87"/>
    <mtx name="H" width="708" lsb="86"/>
    <mtx name="I" width="278" lsb="87"/>
    <mtx name="J" width="472" lsb="43"/>
    <mtx name="K" width="694" lsb="88"/>
    <mtx name="L" width="542" lsb="87"/>
    <mtx name="Lambda" width="611" lsb="28"/>
    <mtx name="M" width="875" lsb="92"/>
    <mtx name="N" width="708" lsb="88"/>
    <mtx name="O" width="736" lsb="55"/>
    <mtx name="Omega" width="722" lsb="44"/>
    <mtx name="P" width="639" lsb="88"/>
    <mtx name="Phi" width="722" lsb="55"/>
    <mtx name="Pi" width="708" lsb="86"/>
    <mtx name="Psi" width="778" lsb="55"/>
    <mtx name="Q" width="736" lsb="55"/>
    <mtx name="R" width="646" lsb="88"/>
    <mtx name="S" width="556" lsb="44"/>
    <mtx name="Sigma" width="722" lsb="55"/>
    <mtx name="T" width="681" lsb="36"/>
    <mtx name="Theta" width="778" lsb="56"/>
    <mtx name="U" width="688" lsb="87"/>
    <mtx name="Upsilon" width="778" lsb="55"/>
    <mtx name="V" width="667" lsb="14"/>
    <mtx name="W" width="944" lsb="14"/>
    <mtx name="X" width="667" lsb="14"/>
    <mtx name="Xi" width="667" lsb="42"/>
    <mtx name="Y" width="667" lsb="4"/>
    <mtx name="Z" width="611" lsb="55"/>
    <mtx name="a" width="481" lsb="38"/>
    <mtx name="acutecomb" width="0" lsb="-301"/>
    <mtx name="ampersand" width="758" lsb="42"/>
    <mtx name="asciicircum" width="500" lsb="79"/>
    <mtx name="asciitilde" width="500" lsb="83"/>
    <mtx name="asterisk" width="500" lsb="63"/>
    <mtx name="at" width="667" lsb="56"/>
    <mtx name="b" width="517" lsb="75"/>
    <mtx name="bracketleft" width="289" lsb="94"/>
    <mtx name="bracketright" width="289" lsb="22"/>
    <mtx name="c" width="444" lsb="34"/>
    <mtx name="colon" width="278" lsb="90"/>
    <mtx name="comma" width="278" lsb="89"/>
    <mtx name="d" width="517" lsb="33"/>
    <mtx name="dollar" width="500" lsb="44"/>
    <mtx name="dotlessi" width="239" lsb="74"/>
    <mtx name="e" width="444" lsb="28"/>
    <mtx name="eight" width="500" lsb="43"/>
    <mtx name="emdash" width="1000" lsb="0"/>
    <mtx name="endash" width="500" lsb="0"/>
    <mtx name="equal" width="778" lsb="56"/>
    <mtx name="exclam" width="319" lsb="110"/>
    <mtx name="f" width="306" lsb="27"/>
    <mtx name="five" width="500" lsb="33"/>
    <mtx name="four" width="500" lsb="28"/>
    <mtx name="g" width="500" lsb="28"/>
    <mtx name="gravecomb" width="0" lsb="-417"/>
    <mtx name="h" width="517" lsb="73"/>
    <mtx name="hyphen" width="333" lsb="11"/>
    <mtx name="i" width="239" lsb="67"/>
    <mtx name="j" width="267" lsb="-59"/>
    <mtx name="k" width="489" lsb="76"/>
    <mtx name="l" width="239" lsb="74"/>
    <mtx name="m" width="794" lsb="73"/>
    <mtx name="n" width="517" lsb="73"/>
    <mtx name="nine" width="500" lsb="42"/>
    <mtx name="nonmarkingreturn" width="333" lsb="0"/>
    <mtx name="numbersign" width="833" lsb="56"/>
    <mtx name="o" width="500" lsb="28"/>
    <mtx name="one" width="500" lsb="83"/>
    <mtx name="p" width="517" lsb="75"/>
    <mtx name="parenleft" width="389" lsb="74"/>
    <mtx name="parenright" width="389" lsb="55"/>
    <mtx name="percent" width="833" lsb="56"/>
    <mtx name="period" width="278" lsb="90"/>
    <mtx name="plus" width="778" lsb="56"/>
    <mtx name="q" width="517" lsb="33"/>
    <mtx name="question" width="472" lsb="55"/>
    <mtx name="quotedbl" width="500" lsb="32"/>
    <mtx name="quotedblleft" width="500" lsb="174"/>
    <mtx name="quotedblright" width="500" lsb="32"/>
    <mtx name="quoteleft" width="278" lsb="90"/>
    <mtx name="quoteright" width="278" lsb="89"/>
    <mtx name="quotesingle" width="278" lsb="89"/>
    <mtx name="r" width="342" lsb="74"/>
    <mtx name="s" width="383" lsb="28"/>
    <mtx name="semicolon" width="278" lsb="89"/>
    <mtx name="seven" width="500" lsb="42"/>
    <mtx name="six" width="500" lsb="42"/>
    <mtx name="slash" width="500" lsb="56"/>
    <mtx name="space" width="250" lsb="0"/>
    <mtx name="t" width="361" lsb="18"/>
    <mtx name="three" width="500" lsb="42"/>
    <mtx name="tildecomb" width="0" lsb="-417"/>
    <mtx name="two" width="500" lsb="42"/>
    <mtx name="u" width="517" lsb="73"/>
    <mtx name="underscore" width="500" lsb="0"/>
    <mtx name="uni00A0" width="250" lsb="0"/>
    <mtx name="uni0237" width="267" lsb="-59"/>
    <mtx name="uni0302" width="0" lsb="-421"/>
    <mtx name="uni0304" width="0" lsb="-431"/>
    <mtx name="uni0306" width="0" lsb="-427"/>
    <mtx name="uni0307" width="0" lsb="-302"/>
    <mtx name="uni0308" width="0" lsb="-397"/>
    <mtx name="uni030A" width="0" lsb="-319"/>
    <mtx name="uni030B" width="0" lsb="-399"/>
    <mtx name="uni030C" width="0" lsb="-421"/>
    <mtx name="uniEFFD" width="300" lsb="0"/>
    <mtx name="uniEFFE" width="300" lsb="0"/>
    <mtx name="uniEFFF" width="100" lsb="0"/>
    <mtx name="v" width="461" lsb="14"/>
    <mtx name="w" width="683" lsb="14"/>
    <mtx name="x" width="461" lsb="0"/>
    <mtx name="y" width="461" lsb="14"/>
    <mtx name="z" width="435" lsb="28"/>
    <mtx name="zero" width="500" lsb="39"/>
  </hmtx>

  <cmap>
    <tableVersion version="0"/>
    <cmap_format_4 platformID="0" platEncID="3" language="0">
      <map code="0x20" name="space"/><!-- SPACE -->
      <map code="0x21" name="exclam"/><!-- EXCLAMATION MARK -->
      <map code="0x22" name="quotedbl"/><!-- QUOTATION MARK -->
      <map code="0x23" name="numbersign"/><!-- NUMBER SIGN -->
      <map code="0x24" name="dollar"/><!-- DOLLAR SIGN -->
      <map code="0x25" name="percent"/><!-- PERCENT SIGN -->
      <map code="0x26" name="ampersand"/><!-- AMPERSAND -->
      <map code="0x27" name="quotesingle"/><!-- APOSTROPHE -->
      <map code="0x28" name="parenleft"/><!-- LEFT PARENTHESIS -->
      <map code="0x29" name="parenright"/><!-- RIGHT PARENTHESIS -->
      <map code="0x2a" name="asterisk"/><!-- ASTERISK -->
      <map code="0x2b" name="plus"/><!-- PLUS SIGN -->
      <map code="0x2c" name="comma"/><!-- COMMA -->
      <map code="0x2d" name="hyphen"/><!-- HYPHEN-MINUS -->
      <map code="0x2e" name="period"/><!-- FULL STOP -->
      <map code="0x2f" name="slash"/><!-- SOLIDUS -->
      <map code="0x30" name="zero"/><!-- DIGIT ZERO -->
      <map code="0x31" name="one"/><!-- DIGIT ONE -->
      <map code="0x32" name="two"/><!-- DIGIT TWO -->
      <map code="0x33" name="three"/><!-- DIGIT THREE -->
      <map code="0x34" name="four"/><!-- DIGIT FOUR -->
      <map code="0x35" name="five"/><!-- DIGIT FIVE -->
      <map code="0x36" name="six"/><!-- DIGIT SIX -->
      <map code="0x37" name="seven"/><!-- DIGIT SEVEN -->
      <map code="0x38" name="eight"/><!-- DIGIT EIGHT -->
      <map code="0x39" name="nine"/><!-- DIGIT NINE -->
      <map code="0x3a" name="colon"/><!-- COLON -->
      <map code="0x3b" name="semicolon"/><!-- SEMICOLON -->
      <map code="0x3d" name="equal"/><!-- EQUALS SIGN -->
      <map code="0x3f" name="question"/><!-- QUESTION MARK -->
      <map code="0x40" name="at"/><!-- COMMERCIAL AT -->
      <map code="0x41" name="A"/><!-- LATIN CAPITAL LETTER A -->
      <map code="0x42" name="B"/><!-- LATIN CAPITAL LETTER B -->
      <map code="0x43" name="C"/><!-- LATIN CAPITAL LETTER C -->
      <map code="0x44" name="D"/><!-- LATIN CAPITAL LETTER D -->
      <map code="0x45" name="E"/><!-- LATIN CAPITAL LETTER E -->
      <map code="0x46" name="F"/><!-- LATIN CAPITAL LETTER F -->
      <map code="0x47" name="G"/><!-- LATIN CAPITAL LETTER G -->
      <map code="0x48" name="H"/><!-- LATIN CAPITAL LETTER H -->
      <map code="0x49" name="I"/><!-- LATIN CAPITAL LETTER I -->
      <map code="0x4a" name="J"/><!-- LATIN CAPITAL LETTER J -->
      <map code="0x4b" name="K"/><!-- LATIN CAPITAL LETTER K -->
      <map code="0x4c" name="L"/><!-- LATIN CAPITAL LETTER L -->
      <map code="0x4d" name="M"/><!-- LATIN CAPITAL LETTER M -->
      <map code="0x4e" name="N"/><!-- LATIN CAPITAL LETTER N -->
      <map code="0x4f" name="O"/><!-- LATIN CAPITAL LETTER O -->
      <map code="0x50" name="P"/><!-- LATIN CAPITAL LETTER P -->
      <map code="0x51" name="Q"/><!-- LATIN CAPITAL LETTER Q -->
      <map code="0x52" name="R"/><!-- LATIN CAPITAL LETTER R -->
      <map code="0x53" name="S"/><!-- LATIN CAPITAL LETTER S -->
      <map code="0x54" name="T"/><!-- LATIN CAPITAL LETTER T -->
      <map code="0x55" name="U"/><!-- LATIN CAPITAL LETTER U -->
      <map code="0x56" name="V"/><!-- LATIN CAPITAL LETTER V -->
      <map code="0x57" name="W"/><!-- LATIN CAPITAL LETTER W -->
      <map code="0x58" name="X"/><!-- LATIN CAPITAL LETTER X -->
      <map code="0x59" name="Y"/><!-- LATIN CAPITAL LETTER Y -->
      <map code="0x5a" name="Z"/><!-- LATIN CAPITAL LETTER Z -->
      <map code="0x5b" name="bracketleft"/><!-- LEFT SQUARE BRACKET -->
      <map code="0x5d" name="bracketright"/><!-- RIGHT SQUARE BRACKET -->
      <map code="0x5e" name="asciicircum"/><!-- CIRCUMFLEX ACCENT -->
      <map code="0x5f" name="underscore"/><!-- LOW LINE -->
      <map code="0x61" name="a"/><!-- LATIN SMALL LETTER A -->
      <map code="0x62" name="b"/><!-- LATIN SMALL LETTER B -->
      <map code="0x63" name="c"/><!-- LATIN SMALL LETTER C -->
      <map code="0x64" name="d"/><!-- LATIN SMALL LETTER D -->
      <map code="0x65" name="e"/><!-- LATIN SMALL LETTER E -->
      <map code="0x66" name="f"/><!-- LATIN SMALL LETTER F -->
      <map code="0x67" name="g"/><!-- LATIN SMALL LETTER G -->
      <map code="0x68" name="h"/><!-- LATIN SMALL LETTER H -->
      <map code="0x69" name="i"/><!-- LATIN SMALL LETTER I -->
      <map code="0x6a" name="j"/><!-- LATIN SMALL LETTER J -->
      <map code="0x6b" name="k"/><!-- LATIN SMALL LETTER K -->
      <map code="0x6c" name="l"/><!-- LATIN SMALL LETTER L -->
      <map code="0x6d" name="m"/><!-- LATIN SMALL LETTER M -->
      <map code="0x6e" name="n"/><!-- LATIN SMALL LETTER N -->
      <map code="0x6f" name="o"/><!-- LATIN SMALL LETTER O -->
      <map code="0x70" name="p"/><!-- LATIN SMALL LETTER P -->
      <map code="0x71" name="q"/><!-- LATIN SMALL LETTER Q -->
      <map code="0x72" name="r"/><!-- LATIN SMALL LETTER R -->
      <map code="0x73" name="s"/><!-- LATIN SMALL LETTER S -->
      <map code="0x74" name="t"/><!-- LATIN SMALL LETTER T -->
      <map code="0x75" name="u"/><!-- LATIN SMALL LETTER U -->
      <map code="0x76" name="v"/><!-- LATIN SMALL LETTER V -->
      <map code="0x77" name="w"/><!-- LATIN SMALL LETTER W -->
      <map code="0x78" name="x"/><!-- LATIN SMALL LETTER X -->
      <map code="0x79" name="y"/><!-- LATIN SMALL LETTER Y -->
      <map code="0x7a" name="z"/><!-- LATIN SMALL LETTER Z -->
      <map code="0x7e" name="asciitilde"/><!-- TILDE -->
      <map code="0xa0" name="uni00A0"/><!-- NO-BREAK SPACE -->
      <map code="0x131" name="dotlessi"/><!-- LATIN SMALL LETTER DOTLESS I -->
      <map code="0x237" name="uni0237"/><!-- LATIN SMALL LETTER DOTLESS J -->
      <map code="0x300" name="gravecomb"/><!-- COMBINING GRAVE ACCENT -->
      <map code="0x301" name="acutecomb"/><!-- COMBINING ACUTE ACCENT -->
      <map code="0x302" name="uni0302"/><!-- COMBINING CIRCUMFLEX ACCENT -->
      <map code="0x303" name="tildecomb"/><!-- COMBINING TILDE -->
      <map code="0x304" name="uni0304"/><!-- COMBINING MACRON -->
      <map code="0x306" name="uni0306"/><!-- COMBINING BREVE -->
      <map code="0x307" name="uni0307"/><!-- COMBINING DOT ABOVE -->
      <map code="0x308" name="uni0308"/><!-- COMBINING DIAERESIS -->
      <map code="0x30a" name="uni030A"/><!-- COMBINING RING ABOVE -->
      <map code="0x30b" name="uni030B"/><!-- COMBINING DOUBLE ACUTE ACCENT -->
      <map code="0x30c" name="uni030C"/><!-- COMBINING CARON -->
      <map code="0x393" name="Gamma"/><!-- GREEK CAPITAL LETTER GAMMA -->
      <map code="0x394" name="Delta"/><!-- GREEK CAPITAL LETTER DELTA -->
      <map code="0x398" name="Theta"/><!-- GREEK CAPITAL LETTER THETA -->
      <map code="0x39b" name="Lambda"/><!-- GREEK CAPITAL LETTER LAMDA -->
      <map code="0x39e" name="Xi"/><!-- GREEK CAPITAL LETTER XI -->
      <map code="0x3a0" name="Pi"/><!-- GREEK CAPITAL LETTER PI -->
      <map code="0x3a3" name="Sigma"/><!-- GREEK CAPITAL LETTER SIGMA -->
      <map code="0x3a5" name="Upsilon"/><!-- GREEK CAPITAL LETTER UPSILON -->
      <map code="0x3a6" name="Phi"/><!-- GREEK CAPITAL LETTER PHI -->
      <map code="0x3a8" name="Psi"/><!-- GREEK CAPITAL LETTER PSI -->
      <map code="0x3a9" name="Omega"/><!-- GREEK CAPITAL LETTER OMEGA -->
      <map code="0x2013" name="endash"/><!-- EN DASH -->
      <map code="0x2014" name="emdash"/><!-- EM DASH -->
      <map code="0x2018" name="quoteleft"/><!-- LEFT SINGLE QUOTATION MARK -->
      <map code="0x2019" name="quoteright"/><!-- RIGHT SINGLE QUOTATION MARK -->
      <map code="0x201c" name="quotedblleft"/><!-- LEFT DOUBLE QUOTATION MARK -->
      <map code="0x201d" name="quotedblright"/><!-- RIGHT DOUBLE QUOTATION MARK -->
      <map code="0xeffd" name="uniEFFD"/><!-- ???? -->
      <map code="0xeffe" name="uniEFFE"/><!-- ???? -->
      <map code="0xefff" name="uniEFFF"/><!-- ???? -->
    </cmap_format_4>
    <cmap_format_0 platformID="1" platEncID="0" language="0">
      <map code="0x0" name=".null"/>
      <map code="0x1" name=".notdef"/>
      <map code="0x2" name=".notdef"/>
      <map code="0x3" name=".notdef"/>
      <map code="0x4" name=".notdef"/>
      <map code="0x5" name=".notdef"/>
      <map code="0x6" name=".notdef"/>
      <map code="0x7" name=".notdef"/>
      <map code="0x8" name=".null"/>
      <map code="0x9" name="nonmarkingreturn"/>
      <map code="0xa" name=".notdef"/>
      <map code="0xb" name=".notdef"/>
      <map code="0xc" name=".notdef"/>
      <map code="0xd" name="nonmarkingreturn"/>
      <map code="0xe" name=".notdef"/>
      <map code="0xf" name=".notdef"/>
      <map code="0x10" name=".notdef"/>
      <map code="0x11" name=".notdef"/>
      <map code="0x12" name=".notdef"/>
      <map code="0x13" name=".notdef"/>
      <map code="0x14" name=".notdef"/>
      <map code="0x15" name=".notdef"/>
      <map code="0x16" name=".notdef"/>
      <map code="0x17" name=".notdef"/>
      <map code="0x18" name=".notdef"/>
      <map code="0x19" name=".notdef"/>
      <map code="0x1a" name=".notdef"/>
      <map code="0x1b" name=".notdef"/>
      <map code="0x1c" name=".notdef"/>
      <map code="0x1d" name=".null"/>
      <map code="0x1e" name=".notdef"/>
      <map code="0x1f" name=".notdef"/>
      <map code="0x20" name="space"/>
      <map code="0x21" name="exclam"/>
      <map code="0x22" name="quotedbl"/>
      <map code="0x23" name="numbersign"/>
      <map code="0x24" name="dollar"/>
      <map code="0x25" name="percent"/>
      <map code="0x26" name="ampersand"/>
      <map code="0x27" name="quotesingle"/>
      <map code="0x28" name="parenleft"/>
      <map code="0x29" name="parenright"/>
      <map code="0x2a" name="asterisk"/>
      <map code="0x2b" name="plus"/>
      <map code="0x2c" name="comma"/>
      <map code="0x2d" name="hyphen"/>
      <map code="0x2e" name="period"/>
      <map code="0x2f" name="slash"/>
      <map code="0x30" name="zero"/>
      <map code="0x31" name="one"/>
      <map code="0x32" name="two"/>
      <map code="0x33" name="three"/>
      <map code="0x34" name="four"/>
      <map code="0x35" name="five"/>
      <map code="0x36" name="six"/>
      <map code="0x37" name="seven"/>
      <map code="0x38" name="eight"/>
      <map code="0x39" name="nine"/>
      <map code="0x3a" name="colon"/>
      <map code="0x3b" name="semicolon"/>
      <map code="0x3c" name=".notdef"/>
      <map code="0x3d" name="equal"/>
      <map code="0x3e" name=".notdef"/>
      <map code="0x3f" name="question"/>
      <map code="0x40" name="at"/>
      <map code="0x41" name="A"/>
      <map code="0x42" name="B"/>
      <map code="0x43" name="C"/>
      <map code="0x44" name="D"/>
      <map code="0x45" name="E"/>
      <map code="0x46" name="F"/>
      <map code="0x47" name="G"/>
      <map code="0x48" name="H"/>
      <map code="0x49" name="I"/>
      <map code="0x4a" name="J"/>
      <map code="0x4b" name="K"/>
      <map code="0x4c" name="L"/>
      <map code="0x4d" name="M"/>
      <map code="0x4e" name="N"/>
      <map code="0x4f" name="O"/>
      <map code="0x50" name="P"/>
      <map code="0x51" name="Q"/>
      <map code="0x52" name="R"/>
      <map code="0x53" name="S"/>
      <map code="0x54" name="T"/>
      <map code="0x55" name="U"/>
      <map code="0x56" name="V"/>
      <map code="0x57" name="W"/>
      <map code="0x58" name="X"/>
      <map code="0x59" name="Y"/>
      <map code="0x5a" name="Z"/>
      <map code="0x5b" name="bracketleft"/>
      <map code="0x5c" name=".notdef"/>
      <map code="0x5d" name="bracketright"/>
      <map code="0x5e" name="asciicircum"/>
      <map code="0x5f" name="underscore"/>
      <map code="0x60" name=".notdef"/>
      <map code="0x61" name="a"/>
      <map code="0x62" name="b"/>
      <map code="0x63" name="c"/>
      <map code="0x64" name="d"/>
      <map code="0x65" name="e"/>
      <map code="0x66" name="f"/>
      <map code="0x67" name="g"/>
      <map code="0x68" name="h"/>
      <map code="0x69" name="i"/>
      <map code="0x6a" name="j"/>
      <map code="0x6b" name="k"/>
      <map code="0x6c" name="l"/>
      <map code="0x6d" name="m"/>
      <map code="0x6e" name="n"/>
      <map code="0x6f" name="o"/>
      <map code="0x70" name="p"/>
      <map code="0x71" name="q"/>
      <map code="0x72" name="r"/>
      <map code="0x73" name="s"/>
      <map code="0x74" name="t"/>
      <map code="0x75" name="u"/>
      <map code="0x76" name="v"/>
      <map code="0x77" name="w"/>
      <map code="0x78" name="x"/>
      <map code="0x79" name="y"/>
      <map code="0x7a" name="z"/>
      <map code="0x7b" name=".notdef"/>
      <map code="0x7c" name=".notdef"/>
      <map code="0x7d" name=".notdef"/>
      <map code="0x7e" name="asciitilde"/>
      <map code="0x7f" name=".notdef"/>
      <map code="0x80" name=".notdef"/>
      <map code="0x81" name=".notdef"/>
      <map code="0x82" name=".notdef"/>
      <map code="0x83" name=".notdef"/>
      <map code="0x84" name=".notdef"/>
      <map code="0x85" name=".notdef"/>
      <map code="0x86" name=".notdef"/>
      <map code="0x87" name=".notdef"/>
      <map code="0x88" name=".notdef"/>
      <map code="0x89" name=".notdef"/>
      <map code="0x8a" name=".notdef"/>
      <map code="0x8b" name=".notdef"/>
      <map code="0x8c" name=".notdef"/>
      <map code="0x8d" name=".notdef"/>
      <map code="0x8e" name=".notdef"/>
      <map code="0x8f" name=".notdef"/>
      <map code="0x90" name=".notdef"/>
      <map code="0x91" name=".notdef"/>
      <map code="0x92" name=".notdef"/>
      <map code="0x93" name=".notdef"/>
      <map code="0x94" name=".notdef"/>
      <map code="0x95" name=".notdef"/>
      <map code="0x96" name=".notdef"/>
      <map code="0x97" name=".notdef"/>
      <map code="0x98" name=".notdef"/>
      <map code="0x99" name=".notdef"/>
      <map code="0x9a" name=".notdef"/>
      <map code="0x9b" name=".notdef"/>
      <map code="0x9c" name=".notdef"/>
      <map code="0x9d" name=".notdef"/>
      <map code="0x9e" name=".notdef"/>
      <map code="0x9f" name=".notdef"/>
      <map code="0xa0" name=".notdef"/>
      <map code="0xa1" name=".notdef"/>
      <map code="0xa2" name=".notdef"/>
      <map code="0xa3" name=".notdef"/>
      <map code="0xa4" name=".notdef"/>
      <map code="0xa5" name=".notdef"/>
      <map code="0xa6" name=".notdef"/>
      <map code="0xa7" name=".notdef"/>
      <map code="0xa8" name=".notdef"/>
      <map code="0xa9" name=".notdef"/>
      <map code="0xaa" name=".notdef"/>
      <map code="0xab" name=".notdef"/>
      <map code="0xac" name=".notdef"/>
      <map code="0xad" name=".notdef"/>
      <map code="0xae" name=".notdef"/>
      <map code="0xaf" name=".notdef"/>
      <map code="0xb0" name=".notdef"/>
      <map code="0xb1" name=".notdef"/>
      <map code="0xb2" name=".notdef"/>
      <map code="0xb3" name=".notdef"/>
      <map code="0xb4" name=".notdef"/>
      <map code="0xb5" name=".notdef"/>
      <map code="0xb6" name=".notdef"/>
      <map code="0xb7" name=".notdef"/>
      <map code="0xb8" name=".notdef"/>
      <map code="0xb9" name=".notdef"/>
      <map code="0xba" name=".notdef"/>
      <map code="0xbb" name=".notdef"/>
      <map code="0xbc" name=".notdef"/>
      <map code="0xbd" name="Omega"/>
      <map code="0xbe" name=".notdef"/>
      <map code="0xbf" name=".notdef"/>
      <map code="0xc0" name=".notdef"/>
      <map code="0xc1" name=".notdef"/>
      <map code="0xc2" name=".notdef"/>
      <map code="0xc3" name=".notdef"/>
      <map code="0xc4" name=".notdef"/>
      <map code="0xc5" name=".notdef"/>
      <map code="0xc6" name=".notdef"/>
      <map code="0xc7" name=".notdef"/>
      <map code="0xc8" name=".notdef"/>
      <map code="0xc9" name=".notdef"/>
      <map code="0xca" name="uni00A0"/>
      <map code="0xcb" name=".notdef"/>
      <map code="0xcc" name=".notdef"/>
      <map code="0xcd" name=".notdef"/>
      <map code="0xce" name=".notdef"/>
      <map code="0xcf" name=".notdef"/>
      <map code="0xd0" name="endash"/>
      <map code="0xd1" name="emdash"/>
      <map code="0xd2" name="quotedblleft"/>
      <map code="0xd3" name="quotedblright"/>
      <map code="0xd4" name="quoteleft"/>
      <map code="0xd5" name="quoteright"/>
      <map code="0xd6" name=".notdef"/>
      <map code="0xd7" name=".notdef"/>
      <map code="0xd8" name=".notdef"/>
      <map code="0xd9" name=".notdef"/>
      <map code="0xda" name=".notdef"/>
      <map code="0xdb" name=".notdef"/>
      <map code="0xdc" name=".notdef"/>
      <map code="0xdd" name=".notdef"/>
      <map code="0xde" name=".notdef"/>
      <map code="0xdf" name=".notdef"/>
      <map code="0xe0" name=".notdef"/>
      <map code="0xe1" name=".notdef"/>
      <map code="0xe2" name=".notdef"/>
      <map code="0xe3" name=".notdef"/>
      <map code="0xe4" name=".notdef"/>
      <map code="0xe5" name=".notdef"/>
      <map code="0xe6" name=".notdef"/>
      <map code="0xe7" name=".notdef"/>
      <map code="0xe8" name=".notdef"/>
      <map code="0xe9" name=".notdef"/>
      <map code="0xea" name=".notdef"/>
      <map code="0xeb" name=".notdef"/>
      <map code="0xec" name=".notdef"/>
      <map code="0xed" name=".notdef"/>
      <map code="0xee" name=".notdef"/>
      <map code="0xef" name=".notdef"/>
      <map code="0xf0" name=".notdef"/>
      <map code="0xf1" name=".notdef"/>
      <map code="0xf2" name=".notdef"/>
      <map code="0xf3" name=".notdef"/>
      <map code="0xf4" name=".notdef"/>
      <map code="0xf5" name="dotlessi"/>
      <map code="0xf6" name=".notdef"/>
      <map code="0xf7" name=".notdef"/>
      <map code="0xf8" name=".notdef"/>
      <map code="0xf9" name=".notdef"/>
      <map code="0xfa" name=".notdef"/>
      <map code="0xfb" name=".notdef"/>
      <map code="0xfc" name=".notdef"/>
      <map code="0xfd" name=".notdef"/>
      <map code="0xfe" name=".notdef"/>
      <map code="0xff" name=".notdef"/>
    </cmap_format_0>
    <cmap_format_4 platformID="3" platEncID="1" language="0">
      <map code="0x20" name="space"/><!-- SPACE -->
      <map code="0x21" name="exclam"/><!-- EXCLAMATION MARK -->
      <map code="0x22" name="quotedbl"/><!-- QUOTATION MARK -->
      <map code="0x23" name="numbersign"/><!-- NUMBER SIGN -->
      <map code="0x24" name="dollar"/><!-- DOLLAR SIGN -->
      <map code="0x25" name="percent"/><!-- PERCENT SIGN -->
      <map code="0x26" name="ampersand"/><!-- AMPERSAND -->
      <map code="0x27" name="quotesingle"/><!-- APOSTROPHE -->
      <map code="0x28" name="parenleft"/><!-- LEFT PARENTHESIS -->
      <map code="0x29" name="parenright"/><!-- RIGHT PARENTHESIS -->
      <map code="0x2a" name="asterisk"/><!-- ASTERISK -->
      <map code="0x2b" name="plus"/><!-- PLUS SIGN -->
      <map code="0x2c" name="comma"/><!-- COMMA -->
      <map code="0x2d" name="hyphen"/><!-- HYPHEN-MINUS -->
      <map code="0x2e" name="period"/><!-- FULL STOP -->
      <map code="0x2f" name="slash"/><!-- SOLIDUS -->
      <map code="0x30" name="zero"/><!-- DIGIT ZERO -->
      <map code="0x31" name="one"/><!-- DIGIT ONE -->
      <map code="0x32" name="two"/><!-- DIGIT TWO -->
      <map code="0x33" name="three"/><!-- DIGIT THREE -->
      <map code="0x34" name="four"/><!-- DIGIT FOUR -->
      <map code="0x35" name="five"/><!-- DIGIT FIVE -->
      <map code="0x36" name="six"/><!-- DIGIT SIX -->
      <map code="0x37" name="seven"/><!-- DIGIT SEVEN -->
      <map code="0x38" name="eight"/><!-- DIGIT EIGHT -->
      <map code="0x39" name="nine"/><!-- DIGIT NINE -->
      <map code="0x3a" name="colon"/><!-- COLON -->
      <map code="0x3b" name="semicolon"/><!-- SEMICOLON -->
      <map code="0x3d" name="equal"/><!-- EQUALS SIGN -->
      <map code="0x3f" name="question"/><!-- QUESTION MARK -->
      <map code="0x40" name="at"/><!-- COMMERCIAL AT -->
      <map code="0x41" name="A"/><!-- LATIN CAPITAL LETTER A -->
      <map code="0x42" name="B"/><!-- LATIN CAPITAL LETTER B -->
      <map code="0x43" name="C"/><!-- LATIN CAPITAL LETTER C -->
      <map code="0x44" name="D"/><!-- LATIN CAPITAL LETTER D -->
      <map code="0x45" name="E"/><!-- LATIN CAPITAL LETTER E -->
      <map code="0x46" name="F"/><!-- LATIN CAPITAL LETTER F -->
      <map code="0x47" name="G"/><!-- LATIN CAPITAL LETTER G -->
      <map code="0x48" name="H"/><!-- LATIN CAPITAL LETTER H -->
      <map code="0x49" name="I"/><!-- LATIN CAPITAL LETTER I -->
      <map code="0x4a" name="J"/><!-- LATIN CAPITAL LETTER J -->
      <map code="0x4b" name="K"/><!-- LATIN CAPITAL LETTER K -->
      <map code="0x4c" name="L"/><!-- LATIN CAPITAL LETTER L -->
      <map code="0x4d" name="M"/><!-- LATIN CAPITAL LETTER M -->
      <map code="0x4e" name="N"/><!-- LATIN CAPITAL LETTER N -->
      <map code="0x4f" name="O"/><!-- LATIN CAPITAL LETTER O -->
      <map code="0x50" name="P"/><!-- LATIN CAPITAL LETTER P -->
      <map code="0x51" name="Q"/><!-- LATIN CAPITAL LETTER Q -->
      <map code="0x52" name="R"/><!-- LATIN CAPITAL LETTER R -->
      <map code="0x53" name="S"/><!-- LATIN CAPITAL LETTER S -->
      <map code="0x54" name="T"/><!-- LATIN CAPITAL LETTER T -->
      <map code="0x55" name="U"/><!-- LATIN CAPITAL LETTER U -->
      <map code="0x56" name="V"/><!-- LATIN CAPITAL LETTER V -->
      <map code="0x57" name="W"/><!-- LATIN CAPITAL LETTER W -->
      <map code="0x58" name="X"/><!-- LATIN CAPITAL LETTER X -->
      <map code="0x59" name="Y"/><!-- LATIN CAPITAL LETTER Y -->
      <map code="0x5a" name="Z"/><!-- LATIN CAPITAL LETTER Z -->
      <map code="0x5b" name="bracketleft"/><!-- LEFT SQUARE BRACKET -->
      <map code="0x5d" name="bracketright"/><!-- RIGHT SQUARE BRACKET -->
      <map code="0x5e" name="asciicircum"/><!-- CIRCUMFLEX ACCENT -->
      <map code="0x5f" name="underscore"/><!-- LOW LINE -->
      <map code="0x61" name="a"/><!-- LATIN SMALL LETTER A -->
      <map code="0x62" name="b"/><!-- LATIN SMALL LETTER B -->
      <map code="0x63" name="c"/><!-- LATIN SMALL LETTER C -->
      <map code="0x64" name="d"/><!-- LATIN SMALL LETTER D -->
      <map code="0x65" name="e"/><!-- LATIN SMALL LETTER E -->
      <map code="0x66" name="f"/><!-- LATIN SMALL LETTER F -->
      <map code="0x67" name="g"/><!-- LATIN SMALL LETTER G -->
      <map code="0x68" name="h"/><!-- LATIN SMALL LETTER H -->
      <map code="0x69" name="i"/><!-- LATIN SMALL LETTER I -->
      <map code="0x6a" name="j"/><!-- LATIN SMALL LETTER J -->
      <map code="0x6b" name="k"/><!-- LATIN SMALL LETTER K -->
      <map code="0x6c" name="l"/><!-- LATIN SMALL LETTER L -->
      <map code="0x6d" name="m"/><!-- LATIN SMALL LETTER M -->
      <map code="0x6e" name="n"/><!-- LATIN SMALL LETTER N -->
      <map code="0x6f" name="o"/><!-- LATIN SMALL LETTER O -->
      <map code="0x70" name="p"/><!-- LATIN SMALL LETTER P -->
      <map code="0x71" name="q"/><!-- LATIN SMALL LETTER Q -->
      <map code="0x72" name="r"/><!-- LATIN SMALL LETTER R -->
      <map code="0x73" name="s"/><!-- LATIN SMALL LETTER S -->
      <map code="0x74" name="t"/><!-- LATIN SMALL LETTER T -->
      <map code="0x75" name="u"/><!-- LATIN SMALL LETTER U -->
      <map code="0x76" name="v"/><!-- LATIN SMALL LETTER V -->
      <map code="0x77" name="w"/><!-- LATIN SMALL LETTER W -->
      <map code="0x78" name="x"/><!-- LATIN SMALL LETTER X -->
      <map code="0x79" name="y"/><!-- LATIN SMALL LETTER Y -->
      <map code="0x7a" name="z"/><!-- LATIN SMALL LETTER Z -->
      <map code="0x7e" name="asciitilde"/><!-- TILDE -->
      <map code="0xa0" name="uni00A0"/><!-- NO-BREAK SPACE -->
      <map code="0x131" name="dotlessi"/><!-- LATIN SMALL LETTER DOTLESS I -->
      <map code="0x237" name="uni0237"/><!-- LATIN SMALL LETTER DOTLESS J -->
      <map code="0x300" name="gravecomb"/><!-- COMBINING GRAVE ACCENT -->
      <map code="0x301" name="acutecomb"/><!-- COMBINING ACUTE ACCENT -->
      <map code="0x302" name="uni0302"/><!-- COMBINING CIRCUMFLEX ACCENT -->
      <map code="0x303" name="tildecomb"/><!-- COMBINING TILDE -->
      <map code="0x304" name="uni0304"/><!-- COMBINING MACRON -->
      <map code="0x306" name="uni0306"/><!-- COMBINING BREVE -->
      <map code="0x307" name="uni0307"/><!-- COMBINING DOT ABOVE -->
      <map code="0x308" name="uni0308"/><!-- COMBINING DIAERESIS -->
      <map code="0x30a" name="uni030A"/><!-- COMBINING RING ABOVE -->
      <map code="0x30b" name="uni030B"/><!-- COMBINING DOUBLE ACUTE ACCENT -->
      <map code="0x30c" name="uni030C"/><!-- COMBINING CARON -->
      <map code="0x393" name="Gamma"/><!-- GREEK CAPITAL LETTER GAMMA -->
      <map code="0x394" name="Delta"/><!-- GREEK CAPITAL LETTER DELTA -->
      <map code="0x398" name="Theta"/><!-- GREEK CAPITAL LETTER THETA -->
      <map code="0x39b" name="Lambda"/><!-- GREEK CAPITAL LETTER LAMDA -->
      <map code="0x39e" name="Xi"/><!-- GREEK CAPITAL LETTER XI -->
      <map code="0x3a0" name="Pi"/><!-- GREEK CAPITAL LETTER PI -->
      <map code="0x3a3" name="Sigma"/><!-- GREEK CAPITAL LETTER SIGMA -->
      <map code="0x3a5" name="Upsilon"/><!-- GREEK CAPITAL LETTER UPSILON -->
      <map code="0x3a6" name="Phi"/><!-- GREEK CAPITAL LETTER PHI -->
      <map code="0x3a8" name="Psi"/><!-- GREEK CAPITAL LETTER PSI -->
      <map code="0x3a9" name="Omega"/><!-- GREEK CAPITAL LETTER OMEGA -->
      <map code="0x2013" name="endash"/><!-- EN DASH -->
      <map code="0x2014" name="emdash"/><!-- EM DASH -->
      <map code="0x2018" name="quoteleft"/><!-- LEFT SINGLE QUOTATION MARK -->
      <map code="0x2019" name="quoteright"/><!-- RIGHT SINGLE QUOTATION MARK -->
      <map code="0x201c" name="quotedblleft"/><!-- LEFT DOUBLE QUOTATION MARK -->
      <map code="0x201d" name="quotedblright"/><!-- RIGHT DOUBLE QUOTATION MARK -->
      <map code="0xeffd" name="uniEFFD"/><!-- ???? -->
      <map code="0xeffe" name="uniEFFE"/><!-- ???? -->
      <map code="0xefff" name="uniEFFF"/><!-- ???? -->
    </cmap_format_4>
  </cmap>

  <fpgm>
    <assembly>
      PUSHB[ ]	/* 1 value pushed */
      0
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      NEQ[ ]	/* NotEqual */
      IF[ ]	/* If */
      RCVT[ ]	/* ReadCVT */
      EIF[ ]	/* EndIf */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      MPPEM[ ]	/* MeasurePixelPerEm */
      PUSHW[ ]	/* 1 value pushed */
      14
      LTEQ[ ]	/* LessThenOrEqual */
      MPPEM[ ]	/* MeasurePixelPerEm */
      PUSHB[ ]	/* 1 value pushed */
      6
      GTEQ[ ]	/* GreaterThanOrEqual */
      AND[ ]	/* LogicalAnd */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      52
      ELSE[ ]	/* Else */
      PUSHB[ ]	/* 1 value pushed */
      40
      EIF[ ]	/* EndIf */
      ADD[ ]	/* Add */
      FLOOR[ ]	/* Floor */
      DUP[ ]	/* DuplicateTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      NEQ[ ]	/* NotEqual */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      SUB[ ]	/* Subtract */
      PUSHW[ ]	/* 2 values pushed */
      2048 2048
      MUL[ ]	/* Multiply */
      MUL[ ]	/* Multiply */
      SWAP[ ]	/* SwapTopStack */
      DIV[ ]	/* Divide */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 1 value pushed */
      0
      RS[ ]	/* ReadStore */
      SWAP[ ]	/* SwapTopStack */
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSHB[ ]	/* 3 values pushed */
      0 1 0
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      WS[ ]	/* WriteStore */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      1
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      32
      ADD[ ]	/* Add */
      FLOOR[ ]	/* Floor */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      2
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      ABS[ ]	/* Absolute */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      192
      LT[ ]	/* LessThan */
      PUSHB[ ]	/* 1 value pushed */
      4
      MINDEX[ ]	/* MoveXToTopStack */
      AND[ ]	/* LogicalAnd */
      PUSHB[ ]	/* 3 values pushed */
      40 1 10
      RS[ ]	/* ReadStore */
      RCVT[ ]	/* ReadCVT */
      MUL[ ]	/* Multiply */
      RCVT[ ]	/* ReadCVT */
      GT[ ]	/* GreaterThan */
      OR[ ]	/* LogicalOr */
      IF[ ]	/* If */
      POP[ ]	/* PopTopStack */
      SWAP[ ]	/* SwapTopStack */
      POP[ ]	/* PopTopStack */
      ELSE[ ]	/* Else */
      ROLL[ ]	/* RollTopThreeStack */
      IF[ ]	/* If */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      80
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      POP[ ]	/* PopTopStack */
      PUSHB[ ]	/* 1 value pushed */
      64
      EIF[ ]	/* EndIf */
      ELSE[ ]	/* Else */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      56
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      POP[ ]	/* PopTopStack */
      PUSHB[ ]	/* 1 value pushed */
      56
      EIF[ ]	/* EndIf */
      EIF[ ]	/* EndIf */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 2 values pushed */
      1 10
      RS[ ]	/* ReadStore */
      RCVT[ ]	/* ReadCVT */
      MUL[ ]	/* Multiply */
      RCVT[ ]	/* ReadCVT */
      SUB[ ]	/* Subtract */
      ABS[ ]	/* Absolute */
      PUSHB[ ]	/* 1 value pushed */
      40
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      POP[ ]	/* PopTopStack */
      PUSHB[ ]	/* 2 values pushed */
      1 10
      RS[ ]	/* ReadStore */
      RCVT[ ]	/* ReadCVT */
      MUL[ ]	/* Multiply */
      RCVT[ ]	/* ReadCVT */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      48
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      POP[ ]	/* PopTopStack */
      PUSHB[ ]	/* 1 value pushed */
      48
      EIF[ ]	/* EndIf */
      ELSE[ ]	/* Else */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      192
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      DUP[ ]	/* DuplicateTopStack */
      FLOOR[ ]	/* Floor */
      DUP[ ]	/* DuplicateTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      ROLL[ ]	/* RollTopThreeStack */
      SUB[ ]	/* Subtract */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      10
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      ADD[ ]	/* Add */
      ELSE[ ]	/* Else */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      32
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      POP[ ]	/* PopTopStack */
      PUSHB[ ]	/* 1 value pushed */
      10
      ADD[ ]	/* Add */
      ELSE[ ]	/* Else */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      54
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      POP[ ]	/* PopTopStack */
      PUSHB[ ]	/* 1 value pushed */
      54
      ADD[ ]	/* Add */
      ELSE[ ]	/* Else */
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      EIF[ ]	/* EndIf */
      EIF[ ]	/* EndIf */
      ELSE[ ]	/* Else */
      PUSHB[ ]	/* 1 value pushed */
      1
      CALL[ ]	/* CallFunction */
      EIF[ ]	/* EndIf */
      EIF[ ]	/* EndIf */
      SWAP[ ]	/* SwapTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      NEG[ ]	/* Negate */
      EIF[ ]	/* EndIf */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      3
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      RCVT[ ]	/* ReadCVT */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      SUB[ ]	/* Subtract */
      ABS[ ]	/* Absolute */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      5
      RS[ ]	/* ReadStore */
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      5
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 1 value pushed */
      6
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 1 value pushed */
      1
      ADD[ ]	/* Add */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      4
      FDEF[ ]	/* FunctionDefinition */
      SWAP[ ]	/* SwapTopStack */
      POP[ ]	/* PopTopStack */
      SWAP[ ]	/* SwapTopStack */
      POP[ ]	/* PopTopStack */
      DUP[ ]	/* DuplicateTopStack */
      ABS[ ]	/* Absolute */
      PUSHB[ ]	/* 2 values pushed */
      5 98
      WS[ ]	/* WriteStore */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      6
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 2 values pushed */
      1 10
      RS[ ]	/* ReadStore */
      RCVT[ ]	/* ReadCVT */
      MUL[ ]	/* Multiply */
      PUSHB[ ]	/* 2 values pushed */
      1 10
      RS[ ]	/* ReadStore */
      PUSHB[ ]	/* 1 value pushed */
      1
      ADD[ ]	/* Add */
      RCVT[ ]	/* ReadCVT */
      MUL[ ]	/* Multiply */
      PUSHB[ ]	/* 1 value pushed */
      3
      LOOPCALL[ ]	/* LoopAndCallFunction */
      POP[ ]	/* PopTopStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      6
      RS[ ]	/* ReadStore */
      DUP[ ]	/* DuplicateTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      DUP[ ]	/* DuplicateTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      PUSHB[ ]	/* 1 value pushed */
      1
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 2 values pushed */
      48 5
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      4
      MINDEX[ ]	/* MoveXToTopStack */
      LTEQ[ ]	/* LessThenOrEqual */
      IF[ ]	/* If */
      ADD[ ]	/* Add */
      LT[ ]	/* LessThan */
      ELSE[ ]	/* Else */
      SUB[ ]	/* Subtract */
      GT[ ]	/* GreaterThan */
      EIF[ ]	/* EndIf */
      IF[ ]	/* If */
      SWAP[ ]	/* SwapTopStack */
      EIF[ ]	/* EndIf */
      POP[ ]	/* PopTopStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      64
      GTEQ[ ]	/* GreaterThanOrEqual */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      1
      CALL[ ]	/* CallFunction */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      PUSHB[ ]	/* 1 value pushed */
      64
      EIF[ ]	/* EndIf */
      SWAP[ ]	/* SwapTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      NEG[ ]	/* Negate */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      5
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      7
      RS[ ]	/* ReadStore */
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 3 values pushed */
      0 2 0
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      WS[ ]	/* WriteStore */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      6
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      7
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 1 value pushed */
      2
      DIV[ ]	/* Divide */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      PUSHB[ ]	/* 1 value pushed */
      1
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 1 value pushed */
      5
      LOOPCALL[ ]	/* LoopAndCallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      7
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      RCVT[ ]	/* ReadCVT */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      11
      RS[ ]	/* ReadStore */
      MUL[ ]	/* Multiply */
      PUSHW[ ]	/* 1 value pushed */
      1024
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      ADD[ ]	/* Add */
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSHB[ ]	/* 1 value pushed */
      1
      ADD[ ]	/* Add */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      8
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      7 11 0
      RS[ ]	/* ReadStore */
      RCVT[ ]	/* ReadCVT */
      WS[ ]	/* WriteStore */
      LOOPCALL[ ]	/* LoopAndCallFunction */
      POP[ ]	/* PopTopStack */
      PUSHB[ ]	/* 3 values pushed */
      0 1 0
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      WS[ ]	/* WriteStore */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      9
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      0
      RS[ ]	/* ReadStore */
      SWAP[ ]	/* SwapTopStack */
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSHB[ ]	/* 3 values pushed */
      0 1 0
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      WS[ ]	/* WriteStore */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      10
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      RCVT[ ]	/* ReadCVT */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      1
      CALL[ ]	/* CallFunction */
      SWAP[ ]	/* SwapTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      RS[ ]	/* ReadStore */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      ADD[ ]	/* Add */
      DUP[ ]	/* DuplicateTopStack */
      RCVT[ ]	/* ReadCVT */
      ROLL[ ]	/* RollTopThreeStack */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      DUP[ ]	/* DuplicateTopStack */
      ABS[ ]	/* Absolute */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      32
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      POP[ ]	/* PopTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      ELSE[ ]	/* Else */
      PUSHB[ ]	/* 1 value pushed */
      48
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      32
      ELSE[ ]	/* Else */
      PUSHB[ ]	/* 1 value pushed */
      64
      EIF[ ]	/* EndIf */
      EIF[ ]	/* EndIf */
      SWAP[ ]	/* SwapTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      NEG[ ]	/* Negate */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 1 value pushed */
      3
      CINDEX[ ]	/* CopyXToTopStack */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      WCVTP[ ]	/* WriteCVTInPixels */
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSHB[ ]	/* 1 value pushed */
      1
      ADD[ ]	/* Add */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      11
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      RCVT[ ]	/* ReadCVT */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      1
      CALL[ ]	/* CallFunction */
      SWAP[ ]	/* SwapTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      RS[ ]	/* ReadStore */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      ADD[ ]	/* Add */
      DUP[ ]	/* DuplicateTopStack */
      RCVT[ ]	/* ReadCVT */
      ROLL[ ]	/* RollTopThreeStack */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      DUP[ ]	/* DuplicateTopStack */
      ABS[ ]	/* Absolute */
      PUSHB[ ]	/* 1 value pushed */
      36
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      0
      ELSE[ ]	/* Else */
      PUSHB[ ]	/* 1 value pushed */
      64
      EIF[ ]	/* EndIf */
      SWAP[ ]	/* SwapTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      NEG[ ]	/* Negate */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 1 value pushed */
      3
      CINDEX[ ]	/* CopyXToTopStack */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      WCVTP[ ]	/* WriteCVTInPixels */
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSHB[ ]	/* 1 value pushed */
      1
      ADD[ ]	/* Add */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      12
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 3 values pushed */
      11 10 3
      RCVT[ ]	/* ReadCVT */
      IF[ ]	/* If */
      POP[ ]	/* PopTopStack */
      ELSE[ ]	/* Else */
      SWAP[ ]	/* SwapTopStack */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      LOOPCALL[ ]	/* LoopAndCallFunction */
      POP[ ]	/* PopTopStack */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      13
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      2 2
      RCVT[ ]	/* ReadCVT */
      PUSHB[ ]	/* 1 value pushed */
      100
      SUB[ ]	/* Subtract */
      WCVTP[ ]	/* WriteCVTInPixels */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      14
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      1
      ADD[ ]	/* Add */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      12
      RS[ ]	/* ReadStore */
      MD[1]	/* MeasureDistance */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      12
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 1 value pushed */
      13
      RS[ ]	/* ReadStore */
      MD[1]	/* MeasureDistance */
      PUSHB[ ]	/* 1 value pushed */
      0
      GT[ ]	/* GreaterThan */
      IF[ ]	/* If */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      13
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      15
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      16
      DIV[ ]	/* Divide */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      DUP[ ]	/* DuplicateTopStack */
      PUSHW[ ]	/* 1 value pushed */
      1024
      MUL[ ]	/* Multiply */
      ROLL[ ]	/* RollTopThreeStack */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 1 value pushed */
      14
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      DUP[ ]	/* DuplicateTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      ADD[ ]	/* Add */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      14
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      SWAP[ ]	/* SwapTopStack */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      16
      FDEF[ ]	/* FunctionDefinition */
      MPPEM[ ]	/* MeasurePixelPerEm */
      EQ[ ]	/* Equal */
      IF[ ]	/* If */
      PUSHB[ ]	/* 2 values pushed */
      4 100
      WCVTP[ ]	/* WriteCVTInPixels */
      EIF[ ]	/* EndIf */
      DEPTH[ ]	/* GetDepthStack */
      PUSHB[ ]	/* 1 value pushed */
      13
      NEG[ ]	/* Negate */
      SWAP[ ]	/* SwapTopStack */
      JROT[ ]	/* JumpRelativeOnTrue */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      17
      FDEF[ ]	/* FunctionDefinition */
      MPPEM[ ]	/* MeasurePixelPerEm */
      LTEQ[ ]	/* LessThenOrEqual */
      IF[ ]	/* If */
      MPPEM[ ]	/* MeasurePixelPerEm */
      GTEQ[ ]	/* GreaterThanOrEqual */
      IF[ ]	/* If */
      PUSHB[ ]	/* 2 values pushed */
      4 100
      WCVTP[ ]	/* WriteCVTInPixels */
      EIF[ ]	/* EndIf */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      DEPTH[ ]	/* GetDepthStack */
      PUSHB[ ]	/* 1 value pushed */
      19
      NEG[ ]	/* Negate */
      SWAP[ ]	/* SwapTopStack */
      JROT[ ]	/* JumpRelativeOnTrue */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      18
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      0 15
      RS[ ]	/* ReadStore */
      NEQ[ ]	/* NotEqual */
      IF[ ]	/* If */
      PUSHB[ ]	/* 2 values pushed */
      15 15
      RS[ ]	/* ReadStore */
      PUSHB[ ]	/* 1 value pushed */
      1
      SUB[ ]	/* Subtract */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 1 value pushed */
      15
      CALL[ ]	/* CallFunction */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 1 value pushed */
      0
      RS[ ]	/* ReadStore */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 2 values pushed */
      12 2
      CINDEX[ ]	/* CopyXToTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 2 values pushed */
      13 2
      CINDEX[ ]	/* CopyXToTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 1 value pushed */
      1
      SZPS[ ]	/* SetZonePointerS */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      3
      CINDEX[ ]	/* CopyXToTopStack */
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 2 values pushed */
      1 0
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      WS[ ]	/* WriteStore */
      ROLL[ ]	/* RollTopThreeStack */
      ROLL[ ]	/* RollTopThreeStack */
      DUP[ ]	/* DuplicateTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 1 value pushed */
      14
      LOOPCALL[ ]	/* LoopAndCallFunction */
      POP[ ]	/* PopTopStack */
      SWAP[ ]	/* SwapTopStack */
      PUSHB[ ]	/* 1 value pushed */
      1
      SUB[ ]	/* Subtract */
      DUP[ ]	/* DuplicateTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 1 value pushed */
      14
      LOOPCALL[ ]	/* LoopAndCallFunction */
      POP[ ]	/* PopTopStack */
      ELSE[ ]	/* Else */
      PUSHB[ ]	/* 2 values pushed */
      1 0
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 1 value pushed */
      14
      LOOPCALL[ ]	/* LoopAndCallFunction */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 1 value pushed */
      12
      RS[ ]	/* ReadStore */
      GC[1]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      13
      RS[ ]	/* ReadStore */
      GC[1]	/* GetCoordOnPVector */
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 1 value pushed */
      2
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      11
      RS[ ]	/* ReadStore */
      MUL[ ]	/* Multiply */
      PUSHW[ ]	/* 1 value pushed */
      1024
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 2 values pushed */
      0 0
      SZP0[ ]	/* SetZonePointer0 */
      SWAP[ ]	/* SwapTopStack */
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSHB[ ]	/* 1 value pushed */
      1
      RS[ ]	/* ReadStore */
      PUSHB[ ]	/* 1 value pushed */
      0
      MIAP[0]	/* MoveIndirectAbsPt */
      PUSHB[ ]	/* 3 values pushed */
      1 1 1
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      WS[ ]	/* WriteStore */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      19
      FDEF[ ]	/* FunctionDefinition */
      SVTCA[0]	/* SetFPVectorToAxis */
      PUSHB[ ]	/* 2 values pushed */
      0 2
      RCVT[ ]	/* ReadCVT */
      EQ[ ]	/* Equal */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      15
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      DUP[ ]	/* DuplicateTopStack */
      RCVT[ ]	/* ReadCVT */
      PUSHB[ ]	/* 1 value pushed */
      11
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 1 value pushed */
      10
      SWAP[ ]	/* SwapTopStack */
      PUSHB[ ]	/* 1 value pushed */
      1
      ADD[ ]	/* Add */
      WS[ ]	/* WriteStore */
      DUP[ ]	/* DuplicateTopStack */
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 1 value pushed */
      1
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 6 values pushed */
      16 16 1 0 14 0
      WS[ ]	/* WriteStore */
      WS[ ]	/* WriteStore */
      ROLL[ ]	/* RollTopThreeStack */
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 2 values pushed */
      18 6
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      117
      CALL[ ]	/* CallFunction */
      ELSE[ ]	/* Else */
      CLEAR[ ]	/* ClearStack */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      20
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      0 19
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      21
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      1 19
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      22
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      2 19
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      23
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      3 19
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      24
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      4 19
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      25
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      5 19
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      26
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      6 19
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      27
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      7 19
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      28
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      8 19
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      29
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      9 19
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      41
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSHB[ ]	/* 1 value pushed */
      1
      DELTAP1[ ]	/* DeltaExceptionP1 */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      42
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSHB[ ]	/* 1 value pushed */
      1
      DELTAP2[ ]	/* DeltaExceptionP2 */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      43
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSHB[ ]	/* 1 value pushed */
      1
      DELTAP3[ ]	/* DeltaExceptionP3 */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      30
      FDEF[ ]	/* FunctionDefinition */
      SVTCA[0]	/* SetFPVectorToAxis */
      PUSHB[ ]	/* 1 value pushed */
      13
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 2 values pushed */
      0 2
      RCVT[ ]	/* ReadCVT */
      EQ[ ]	/* Equal */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      15
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      DUP[ ]	/* DuplicateTopStack */
      RCVT[ ]	/* ReadCVT */
      PUSHB[ ]	/* 1 value pushed */
      11
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 1 value pushed */
      10
      SWAP[ ]	/* SwapTopStack */
      PUSHB[ ]	/* 1 value pushed */
      1
      ADD[ ]	/* Add */
      WS[ ]	/* WriteStore */
      DUP[ ]	/* DuplicateTopStack */
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 1 value pushed */
      1
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 6 values pushed */
      16 16 1 0 14 0
      WS[ ]	/* WriteStore */
      WS[ ]	/* WriteStore */
      ROLL[ ]	/* RollTopThreeStack */
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 2 values pushed */
      18 6
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      117
      CALL[ ]	/* CallFunction */
      ELSE[ ]	/* Else */
      CLEAR[ ]	/* ClearStack */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      31
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      0 30
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      32
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      1 30
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      33
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      2 30
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      34
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      3 30
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      35
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      4 30
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      36
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      5 30
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      37
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      6 30
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      38
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      7 30
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      39
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      8 30
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      40
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      9 30
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      44
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      PUSHB[ ]	/* 1 value pushed */
      1
      ADD[ ]	/* Add */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      45
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 1 value pushed */
      16
      ADD[ ]	/* Add */
      DUP[ ]	/* DuplicateTopStack */
      RS[ ]	/* ReadStore */
      SWAP[ ]	/* SwapTopStack */
      PUSHB[ ]	/* 1 value pushed */
      1
      ADD[ ]	/* Add */
      RS[ ]	/* ReadStore */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 1 value pushed */
      1
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 1 value pushed */
      44
      LOOPCALL[ ]	/* LoopAndCallFunction */
      POP[ ]	/* PopTopStack */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      46
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      45
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      45
      LOOPCALL[ ]	/* LoopAndCallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      47
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      GC[1]	/* GetCoordOnPVector */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      11
      RS[ ]	/* ReadStore */
      MUL[ ]	/* Multiply */
      PUSHW[ ]	/* 1 value pushed */
      1024
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      ADD[ ]	/* Add */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      SHPIX[ ]	/* ShiftZoneByPixel */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      NEQ[ ]	/* NotEqual */
      IF[ ]	/* If */
      DUP[ ]	/* DuplicateTopStack */
      GC[1]	/* GetCoordOnPVector */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      11
      RS[ ]	/* ReadStore */
      MUL[ ]	/* Multiply */
      PUSHW[ ]	/* 1 value pushed */
      1024
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      ADD[ ]	/* Add */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      SHPIX[ ]	/* ShiftZoneByPixel */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      48
      FDEF[ ]	/* FunctionDefinition */
      SVTCA[0]	/* SetFPVectorToAxis */
      PUSHB[ ]	/* 2 values pushed */
      0 2
      RCVT[ ]	/* ReadCVT */
      EQ[ ]	/* Equal */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      1
      SZPS[ ]	/* SetZonePointerS */
      PUSHB[ ]	/* 1 value pushed */
      47
      LOOPCALL[ ]	/* LoopAndCallFunction */
      PUSHB[ ]	/* 2 values pushed */
      5 1
      SZP2[ ]	/* SetZonePointer2 */
      RCVT[ ]	/* ReadCVT */
      IF[ ]	/* If */
      IUP[0]	/* InterpolateUntPts */
      EIF[ ]	/* EndIf */
      ELSE[ ]	/* Else */
      CLEAR[ ]	/* ClearStack */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      49
      FDEF[ ]	/* FunctionDefinition */
      SVTCA[0]	/* SetFPVectorToAxis */
      PUSHB[ ]	/* 1 value pushed */
      13
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 2 values pushed */
      0 2
      RCVT[ ]	/* ReadCVT */
      EQ[ ]	/* Equal */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      1
      SZPS[ ]	/* SetZonePointerS */
      PUSHB[ ]	/* 1 value pushed */
      47
      LOOPCALL[ ]	/* LoopAndCallFunction */
      PUSHB[ ]	/* 2 values pushed */
      5 1
      SZP2[ ]	/* SetZonePointer2 */
      RCVT[ ]	/* ReadCVT */
      IF[ ]	/* If */
      IUP[0]	/* InterpolateUntPts */
      EIF[ ]	/* EndIf */
      ELSE[ ]	/* Else */
      CLEAR[ ]	/* ClearStack */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      50
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      SHC[1]	/* ShiftContourByLastPt */
      PUSHB[ ]	/* 1 value pushed */
      1
      ADD[ ]	/* Add */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      51
      FDEF[ ]	/* FunctionDefinition */
      SVTCA[0]	/* SetFPVectorToAxis */
      PUSHB[ ]	/* 1 value pushed */
      1
      RCVT[ ]	/* ReadCVT */
      MUL[ ]	/* Multiply */
      PUSHW[ ]	/* 1 value pushed */
      1024
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      PUSHB[ ]	/* 1 value pushed */
      1
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      11
      RS[ ]	/* ReadStore */
      MUL[ ]	/* Multiply */
      PUSHW[ ]	/* 1 value pushed */
      1024
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      PUSHB[ ]	/* 1 value pushed */
      1
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      0
      SZPS[ ]	/* SetZonePointerS */
      PUSHB[ ]	/* 5 values pushed */
      0 0 0 0 0
      WCVTP[ ]	/* WriteCVTInPixels */
      MIAP[0]	/* MoveIndirectAbsPt */
      SWAP[ ]	/* SwapTopStack */
      SHPIX[ ]	/* ShiftZoneByPixel */
      PUSHB[ ]	/* 2 values pushed */
      50 1
      SZP2[ ]	/* SetZonePointer2 */
      LOOPCALL[ ]	/* LoopAndCallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      52
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      DUP[ ]	/* DuplicateTopStack */
      GC[1]	/* GetCoordOnPVector */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      11
      RS[ ]	/* ReadStore */
      MUL[ ]	/* Multiply */
      PUSHW[ ]	/* 1 value pushed */
      1024
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 1 value pushed */
      0
      RS[ ]	/* ReadStore */
      SUB[ ]	/* Subtract */
      SHPIX[ ]	/* ShiftZoneByPixel */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      53
      FDEF[ ]	/* FunctionDefinition */
      MDAP[0]	/* MoveDirectAbsPt */
      SLOOP[ ]	/* SetLoopVariable */
      ALIGNRP[ ]	/* AlignRelativePt */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      54
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      DUP[ ]	/* DuplicateTopStack */
      GC[1]	/* GetCoordOnPVector */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      11
      RS[ ]	/* ReadStore */
      MUL[ ]	/* Multiply */
      PUSHW[ ]	/* 1 value pushed */
      1024
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 1 value pushed */
      0
      RS[ ]	/* ReadStore */
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 1 value pushed */
      1
      RS[ ]	/* ReadStore */
      MUL[ ]	/* Multiply */
      SHPIX[ ]	/* ShiftZoneByPixel */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      55
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      2 0
      SZPS[ ]	/* SetZonePointerS */
      CINDEX[ ]	/* CopyXToTopStack */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      DUP[ ]	/* DuplicateTopStack */
      GC[1]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      0
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      MD[0]	/* MeasureDistance */
      ROLL[ ]	/* RollTopThreeStack */
      ROLL[ ]	/* RollTopThreeStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      DUP[ ]	/* DuplicateTopStack */
      IF[ ]	/* If */
      DIV[ ]	/* Divide */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 1 value pushed */
      1
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 3 values pushed */
      54 1 1
      SZP2[ ]	/* SetZonePointer2 */
      SZP1[ ]	/* SetZonePointer1 */
      LOOPCALL[ ]	/* LoopAndCallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      56
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      0
      SZPS[ ]	/* SetZonePointerS */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 1 value pushed */
      9
      RS[ ]	/* ReadStore */
      CALL[ ]	/* CallFunction */
      NEG[ ]	/* Negate */
      ROLL[ ]	/* RollTopThreeStack */
      MDAP[0]	/* MoveDirectAbsPt */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      ROLL[ ]	/* RollTopThreeStack */
      SHPIX[ ]	/* ShiftZoneByPixel */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      57
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      0
      SZPS[ ]	/* SetZonePointerS */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      4
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 1 value pushed */
      9
      RS[ ]	/* ReadStore */
      CALL[ ]	/* CallFunction */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      96
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      64
      LTEQ[ ]	/* LessThenOrEqual */
      IF[ ]	/* If */
      PUSHB[ ]	/* 4 values pushed */
      2 32 3 32
      ELSE[ ]	/* Else */
      PUSHB[ ]	/* 4 values pushed */
      2 38 3 26
      EIF[ ]	/* EndIf */
      WS[ ]	/* WriteStore */
      WS[ ]	/* WriteStore */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      8
      RS[ ]	/* ReadStore */
      DUP[ ]	/* DuplicateTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      SWAP[ ]	/* SwapTopStack */
      GC[0]	/* GetCoordOnPVector */
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 1 value pushed */
      4
      RS[ ]	/* ReadStore */
      PUSHB[ ]	/* 1 value pushed */
      2
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      ADD[ ]	/* Add */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      1
      CALL[ ]	/* CallFunction */
      DUP[ ]	/* DuplicateTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      ROLL[ ]	/* RollTopThreeStack */
      SUB[ ]	/* Subtract */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      2
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      ABS[ ]	/* Absolute */
      SWAP[ ]	/* SwapTopStack */
      PUSHB[ ]	/* 1 value pushed */
      3
      RS[ ]	/* ReadStore */
      SUB[ ]	/* Subtract */
      ABS[ ]	/* Absolute */
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      2
      RS[ ]	/* ReadStore */
      SUB[ ]	/* Subtract */
      ELSE[ ]	/* Else */
      PUSHB[ ]	/* 1 value pushed */
      3
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 1 value pushed */
      3
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      2
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      SUB[ ]	/* Subtract */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      4
      MINDEX[ ]	/* MoveXToTopStack */
      SWAP[ ]	/* SwapTopStack */
      GC[0]	/* GetCoordOnPVector */
      SUB[ ]	/* Subtract */
      SHPIX[ ]	/* ShiftZoneByPixel */
      ELSE[ ]	/* Else */
      SWAP[ ]	/* SwapTopStack */
      PUSHB[ ]	/* 1 value pushed */
      8
      RS[ ]	/* ReadStore */
      GC[0]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      8
      RS[ ]	/* ReadStore */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      ADD[ ]	/* Add */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      4
      RS[ ]	/* ReadStore */
      PUSHB[ ]	/* 1 value pushed */
      2
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      ADD[ ]	/* Add */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      1
      CALL[ ]	/* CallFunction */
      SWAP[ ]	/* SwapTopStack */
      PUSHB[ ]	/* 1 value pushed */
      4
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 1 value pushed */
      1
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      5
      CINDEX[ ]	/* CopyXToTopStack */
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 1 value pushed */
      5
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      2
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      PUSHB[ ]	/* 1 value pushed */
      4
      MINDEX[ ]	/* MoveXToTopStack */
      SUB[ ]	/* Subtract */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      ADD[ ]	/* Add */
      ABS[ ]	/* Absolute */
      SWAP[ ]	/* SwapTopStack */
      PUSHB[ ]	/* 1 value pushed */
      3
      CINDEX[ ]	/* CopyXToTopStack */
      ADD[ ]	/* Add */
      ABS[ ]	/* Absolute */
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      POP[ ]	/* PopTopStack */
      ELSE[ ]	/* Else */
      SWAP[ ]	/* SwapTopStack */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      4
      MINDEX[ ]	/* MoveXToTopStack */
      SWAP[ ]	/* SwapTopStack */
      GC[0]	/* GetCoordOnPVector */
      SUB[ ]	/* Subtract */
      SHPIX[ ]	/* ShiftZoneByPixel */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      58
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      0
      SZPS[ ]	/* SetZonePointerS */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      5
      MINDEX[ ]	/* MoveXToTopStack */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      SWAP[ ]	/* SwapTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      SHPIX[ ]	/* ShiftZoneByPixel */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      59
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      0
      SZPS[ ]	/* SetZonePointerS */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      8
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      GC[0]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      1
      CALL[ ]	/* CallFunction */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      SHPIX[ ]	/* ShiftZoneByPixel */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      60
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      0
      SZPS[ ]	/* SetZonePointerS */
      PUSHB[ ]	/* 1 value pushed */
      3
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 1 value pushed */
      0
      EQ[ ]	/* Equal */
      IF[ ]	/* If */
      MDAP[0]	/* MoveDirectAbsPt */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      SWAP[ ]	/* SwapTopStack */
      POP[ ]	/* PopTopStack */
      ELSE[ ]	/* Else */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      5
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 1 value pushed */
      6
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      5
      CINDEX[ ]	/* CopyXToTopStack */
      MD[0]	/* MeasureDistance */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      SUB[ ]	/* Subtract */
      PUSHW[ ]	/* 2 values pushed */
      2048 2048
      MUL[ ]	/* Multiply */
      MUL[ ]	/* Multiply */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      IF[ ]	/* If */
      DIV[ ]	/* Divide */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      MUL[ ]	/* Multiply */
      PUSHW[ ]	/* 1 value pushed */
      1024
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      ADD[ ]	/* Add */
      SWAP[ ]	/* SwapTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      ROLL[ ]	/* RollTopThreeStack */
      SHPIX[ ]	/* ShiftZoneByPixel */
      SWAP[ ]	/* SwapTopStack */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      61
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      0
      SZPS[ ]	/* SetZonePointerS */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      8
      RS[ ]	/* ReadStore */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      DUP[ ]	/* DuplicateTopStack */
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 1 value pushed */
      32
      ADD[ ]	/* Add */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      2
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      ROLL[ ]	/* RollTopThreeStack */
      SHPIX[ ]	/* ShiftZoneByPixel */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      62
      FDEF[ ]	/* FunctionDefinition */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      GC[0]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      GC[0]	/* GetCoordOnPVector */
      GT[ ]	/* GreaterThan */
      IF[ ]	/* If */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      EIF[ ]	/* EndIf */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSHB[ ]	/* 2 values pushed */
      46 1
      SZP1[ ]	/* SetZonePointer1 */
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      63
      FDEF[ ]	/* FunctionDefinition */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      GC[0]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      GC[0]	/* GetCoordOnPVector */
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      EIF[ ]	/* EndIf */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSHB[ ]	/* 2 values pushed */
      46 1
      SZP1[ ]	/* SetZonePointer1 */
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      64
      FDEF[ ]	/* FunctionDefinition */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      GC[0]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      GC[0]	/* GetCoordOnPVector */
      GT[ ]	/* GreaterThan */
      IF[ ]	/* If */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      EIF[ ]	/* EndIf */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      GC[0]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      GC[0]	/* GetCoordOnPVector */
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      EIF[ ]	/* EndIf */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSHB[ ]	/* 2 values pushed */
      46 1
      SZP1[ ]	/* SetZonePointer1 */
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      65
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      56
      CALL[ ]	/* CallFunction */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      GC[0]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      GC[0]	/* GetCoordOnPVector */
      GT[ ]	/* GreaterThan */
      IF[ ]	/* If */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      EIF[ ]	/* EndIf */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSHB[ ]	/* 2 values pushed */
      46 1
      SZP1[ ]	/* SetZonePointer1 */
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      66
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      57
      CALL[ ]	/* CallFunction */
      ROLL[ ]	/* RollTopThreeStack */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      PUSHB[ ]	/* 1 value pushed */
      4
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      ROLL[ ]	/* RollTopThreeStack */
      SHPIX[ ]	/* ShiftZoneByPixel */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      GC[0]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      GC[0]	/* GetCoordOnPVector */
      GT[ ]	/* GreaterThan */
      IF[ ]	/* If */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      EIF[ ]	/* EndIf */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSHB[ ]	/* 2 values pushed */
      46 1
      SZP1[ ]	/* SetZonePointer1 */
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      4
      RS[ ]	/* ReadStore */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSHB[ ]	/* 1 value pushed */
      46
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      67
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      0
      SZPS[ ]	/* SetZonePointerS */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      4
      MINDEX[ ]	/* MoveXToTopStack */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 1 value pushed */
      9
      RS[ ]	/* ReadStore */
      CALL[ ]	/* CallFunction */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      SWAP[ ]	/* SwapTopStack */
      SHPIX[ ]	/* ShiftZoneByPixel */
      PUSHB[ ]	/* 2 values pushed */
      46 1
      SZP1[ ]	/* SetZonePointer1 */
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      68
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      8 4
      CINDEX[ ]	/* CopyXToTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 1 value pushed */
      0
      SZPS[ ]	/* SetZonePointerS */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      4
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 1 value pushed */
      9
      RS[ ]	/* ReadStore */
      CALL[ ]	/* CallFunction */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      96
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      64
      LTEQ[ ]	/* LessThenOrEqual */
      IF[ ]	/* If */
      PUSHB[ ]	/* 4 values pushed */
      2 32 3 32
      ELSE[ ]	/* Else */
      PUSHB[ ]	/* 4 values pushed */
      2 38 3 26
      EIF[ ]	/* EndIf */
      WS[ ]	/* WriteStore */
      WS[ ]	/* WriteStore */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      GC[1]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      4
      RS[ ]	/* ReadStore */
      PUSHB[ ]	/* 1 value pushed */
      2
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      ADD[ ]	/* Add */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      1
      CALL[ ]	/* CallFunction */
      DUP[ ]	/* DuplicateTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      ROLL[ ]	/* RollTopThreeStack */
      SUB[ ]	/* Subtract */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      2
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      ABS[ ]	/* Absolute */
      SWAP[ ]	/* SwapTopStack */
      PUSHB[ ]	/* 1 value pushed */
      3
      RS[ ]	/* ReadStore */
      SUB[ ]	/* Subtract */
      ABS[ ]	/* Absolute */
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      2
      RS[ ]	/* ReadStore */
      SUB[ ]	/* Subtract */
      ELSE[ ]	/* Else */
      PUSHB[ ]	/* 1 value pushed */
      3
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 1 value pushed */
      3
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      2
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      GC[0]	/* GetCoordOnPVector */
      SUB[ ]	/* Subtract */
      SHPIX[ ]	/* ShiftZoneByPixel */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      SWAP[ ]	/* SwapTopStack */
      SHPIX[ ]	/* ShiftZoneByPixel */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      GC[0]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      1
      CALL[ ]	/* CallFunction */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      SHPIX[ ]	/* ShiftZoneByPixel */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 2 values pushed */
      46 1
      SZP1[ ]	/* SetZonePointer1 */
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      69
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      56
      CALL[ ]	/* CallFunction */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSHB[ ]	/* 2 values pushed */
      46 1
      SZP1[ ]	/* SetZonePointer1 */
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      70
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      57
      CALL[ ]	/* CallFunction */
      POP[ ]	/* PopTopStack */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      PUSHB[ ]	/* 1 value pushed */
      4
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      SWAP[ ]	/* SwapTopStack */
      SHPIX[ ]	/* ShiftZoneByPixel */
      PUSHB[ ]	/* 2 values pushed */
      46 1
      SZP1[ ]	/* SetZonePointer1 */
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      4
      RS[ ]	/* ReadStore */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSHB[ ]	/* 1 value pushed */
      46
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      71
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      0
      SZP2[ ]	/* SetZonePointer2 */
      DUP[ ]	/* DuplicateTopStack */
      GC[1]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      0
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 3 values pushed */
      0 1 1
      SZP2[ ]	/* SetZonePointer2 */
      SZP1[ ]	/* SetZonePointer1 */
      SZP0[ ]	/* SetZonePointer0 */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSHB[ ]	/* 1 value pushed */
      52
      LOOPCALL[ ]	/* LoopAndCallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      72
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      0
      SZP2[ ]	/* SetZonePointer2 */
      DUP[ ]	/* DuplicateTopStack */
      GC[1]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      0
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 3 values pushed */
      0 1 1
      SZP2[ ]	/* SetZonePointer2 */
      SZP1[ ]	/* SetZonePointer1 */
      SZP0[ ]	/* SetZonePointer0 */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSHB[ ]	/* 1 value pushed */
      52
      LOOPCALL[ ]	/* LoopAndCallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      73
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      0 1
      SZP1[ ]	/* SetZonePointer1 */
      SZP0[ ]	/* SetZonePointer0 */
      PUSHB[ ]	/* 1 value pushed */
      53
      LOOPCALL[ ]	/* LoopAndCallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      74
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      55
      LOOPCALL[ ]	/* LoopAndCallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      75
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      0
      SZPS[ ]	/* SetZonePointerS */
      RCVT[ ]	/* ReadCVT */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      DUP[ ]	/* DuplicateTopStack */
      GC[0]	/* GetCoordOnPVector */
      ROLL[ ]	/* RollTopThreeStack */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      SHPIX[ ]	/* ShiftZoneByPixel */
      PUSHB[ ]	/* 2 values pushed */
      46 1
      SZP1[ ]	/* SetZonePointer1 */
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      76
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      8
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 1 value pushed */
      75
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      77
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      0 0 68
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      78
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      0 1 68
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      79
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      1 0 68
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      80
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      1 1 68
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      81
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      0 0 69
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      82
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      0 1 69
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      83
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      1 0 69
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      84
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      1 1 69
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      85
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      0 0 65
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      86
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      0 1 65
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      87
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      1 0 65
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      88
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      1 1 65
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      89
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      0 0 67
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      90
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      0 1 67
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      91
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      1 0 67
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      92
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      1 1 67
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      93
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      0 0 70
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      94
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      0 1 70
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      95
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      1 0 70
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      96
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      1 1 70
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      97
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      0 0 66
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      98
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      0 1 66
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      99
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      1 0 66
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      100
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      1 1 66
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      101
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      58
      CALL[ ]	/* CallFunction */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSHB[ ]	/* 2 values pushed */
      46 1
      SZP1[ ]	/* SetZonePointer1 */
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      102
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      58
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      62
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      103
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      58
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      63
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      104
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      0
      SZPS[ ]	/* SetZonePointerS */
      PUSHB[ ]	/* 1 value pushed */
      58
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      64
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      105
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      59
      CALL[ ]	/* CallFunction */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSHB[ ]	/* 2 values pushed */
      46 1
      SZP1[ ]	/* SetZonePointer1 */
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      106
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      59
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      62
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      107
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      59
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      63
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      108
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      59
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      64
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      109
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      60
      CALL[ ]	/* CallFunction */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSHB[ ]	/* 2 values pushed */
      46 1
      SZP1[ ]	/* SetZonePointer1 */
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      110
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      60
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      62
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      111
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      60
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      63
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      112
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      60
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      64
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      113
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      61
      CALL[ ]	/* CallFunction */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSHB[ ]	/* 2 values pushed */
      46 1
      SZP1[ ]	/* SetZonePointer1 */
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      114
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      61
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      62
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      115
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      61
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      63
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      116
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      61
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      64
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      117
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 4 values pushed */
      9 4 2 3
      RCVT[ ]	/* ReadCVT */
      IF[ ]	/* If */
      POP[ ]	/* PopTopStack */
      ELSE[ ]	/* Else */
      SWAP[ ]	/* SwapTopStack */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      WS[ ]	/* WriteStore */
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      8
      NEG[ ]	/* Negate */
      PUSHB[ ]	/* 1 value pushed */
      3
      DEPTH[ ]	/* GetDepthStack */
      LT[ ]	/* LessThan */
      JROT[ ]	/* JumpRelativeOnTrue */
      PUSHB[ ]	/* 2 values pushed */
      5 1
      SZP2[ ]	/* SetZonePointer2 */
      RCVT[ ]	/* ReadCVT */
      IF[ ]	/* If */
      IUP[0]	/* InterpolateUntPts */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
    </assembly>
  </fpgm>

  <prep>
    <assembly>
      SVTCA[0]	/* SetFPVectorToAxis */
      MPPEM[ ]	/* MeasurePixelPerEm */
      PUSHW[ ]	/* 1 value pushed */
      200
      GT[ ]	/* GreaterThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 2 values pushed */
      1 1
      INSTCTRL[ ]	/* SetInstrExecControl */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 1 value pushed */
      1
      PUSHW[ ]	/* 2 values pushed */
      2048 2048
      MUL[ ]	/* Multiply */
      WCVTF[ ]	/* WriteCVTInFUnits */
      PUSHB[ ]	/* 2 values pushed */
      0 6
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 3 values pushed */
      24 1 0
      LOOPCALL[ ]	/* LoopAndCallFunction */
      PUSHB[ ]	/* 2 values pushed */
      0 6
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 4 values pushed */
      11 8 1 8
      LOOPCALL[ ]	/* LoopAndCallFunction */
      PUSHB[ ]	/* 2 values pushed */
      0 6
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 4 values pushed */
      21 6 1 8
      LOOPCALL[ ]	/* LoopAndCallFunction */
      PUSHB[ ]	/* 2 values pushed */
      0 7
      WS[ ]	/* WriteStore */
      PUSHW[ ]	/* 3 values pushed */
      768 1 9
      LOOPCALL[ ]	/* LoopAndCallFunction */
      PUSHB[ ]	/* 2 values pushed */
      0 8
      WS[ ]	/* WriteStore */
      PUSHW[ ]	/* 3 values pushed */
      64 1 9
      LOOPCALL[ ]	/* LoopAndCallFunction */
      PUSHB[ ]	/* 2 values pushed */
      3 0
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSHB[ ]	/* 2 values pushed */
      36 1
      GETINFO[ ]	/* GetInfo */
      LTEQ[ ]	/* LessThenOrEqual */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      GETINFO[ ]	/* GetInfo */
      IF[ ]	/* If */
      PUSHB[ ]	/* 2 values pushed */
      3 100
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSHB[ ]	/* 2 values pushed */
      38 1
      GETINFO[ ]	/* GetInfo */
      LTEQ[ ]	/* LessThenOrEqual */
      IF[ ]	/* If */
      PUSHW[ ]	/* 3 values pushed */
      2176 1 1088
      GETINFO[ ]	/* GetInfo */
      MUL[ ]	/* Multiply */
      EQ[ ]	/* Equal */
      IF[ ]	/* If */
      PUSHB[ ]	/* 2 values pushed */
      3 0
      WCVTP[ ]	/* WriteCVTInPixels */
      EIF[ ]	/* EndIf */
      EIF[ ]	/* EndIf */
      EIF[ ]	/* EndIf */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 4 values pushed */
      13 8 1 12
      LOOPCALL[ ]	/* LoopAndCallFunction */
      PUSHW[ ]	/* 1 value pushed */
      511
      SCANCTRL[ ]	/* ScanConversionControl */
      PUSHB[ ]	/* 1 value pushed */
      4
      SCANTYPE[ ]	/* ScanType */
      PUSHB[ ]	/* 2 values pushed */
      2 0
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSHB[ ]	/* 2 values pushed */
      5 100
      WCVTP[ ]	/* WriteCVTInPixels */
    </assembly>
  </prep>

  <cvt>
    <cv index="0" value="0"/>
    <cv index="1" value="0"/>
    <cv index="2" value="0"/>
    <cv index="3" value="0"/>
    <cv index="4" value="0"/>
    <cv index="5" value="0"/>
    <cv index="6" value="0"/>
    <cv index="7" value="0"/>
    <cv index="8" value="0"/>
    <cv index="9" value="94"/>
    <cv index="10" value="94"/>
    <cv index="11" value="77"/>
    <cv index="12" value="77"/>
    <cv index="13" value="694"/>
    <cv index="14" value="0"/>
    <cv index="15" value="694"/>
    <cv index="16" value="444"/>
    <cv index="17" value="0"/>
    <cv index="18" value="-194"/>
    <cv index="19" value="533"/>
    <cv index="20" value="0"/>
    <cv index="21" value="715"/>
    <cv index="22" value="-22"/>
    <cv index="23" value="705"/>
    <cv index="24" value="460"/>
    <cv index="25" value="-10"/>
    <cv index="26" value="-205"/>
    <cv index="27" value="533"/>
    <cv index="28" value="0"/>
  </cvt>

  <loca>
    <!-- The 'loca' table will be calculated by the compiler -->
  </loca>

  <glyf>

    <!-- The xMin, yMin, xMax and yMax values
         will be recalculated by the compiler. -->

    <TTGlyph name=".notdef" xMin="50" yMin="0" xMax="200" yMax="533">
      <contour>
        <pt x="50" y="0" on="1"/>
        <pt x="50" y="533" on="1"/>
        <pt x="200" y="533" on="1"/>
        <pt x="200" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="100" y="50" on="1"/>
        <pt x="150" y="50" on="1"/>
        <pt x="150" y="483" on="1"/>
        <pt x="100" y="483" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 6 values pushed */
          6 4 1 0 2 48
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name=".null"/><!-- contains no outline data -->

    <TTGlyph name="A" xMin="28" yMin="0" xMax="638" yMax="694">
      <contour>
        <pt x="28" y="0" on="1"/>
        <pt x="280" y="693" on="1"/>
        <pt x="281" y="694" on="0"/>
        <pt x="333" y="694" on="1"/>
        <pt x="385" y="694" on="1"/>
        <pt x="511" y="349" on="1"/>
        <pt x="636" y="4" on="0"/>
        <pt x="638" y="2" on="1"/>
        <pt x="638" y="0" on="0"/>
        <pt x="584" y="0" on="1"/>
        <pt x="530" y="0" on="1"/>
        <pt x="464" y="183" on="1"/>
        <pt x="184" y="183" on="1"/>
        <pt x="183" y="181" on="1"/>
        <pt x="183" y="178" on="0"/>
        <pt x="123" y="12" on="0"/>
        <pt x="118" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="342" y="537" on="1"/>
        <pt x="325" y="601" on="0"/>
        <pt x="324" y="611" on="1"/>
        <pt x="324" y="606" on="1"/>
        <pt x="315" y="553" on="0"/>
        <pt x="230" y="310" on="1"/>
        <pt x="225" y="298" on="0"/>
        <pt x="215" y="270" on="0"/>
        <pt x="212" y="263" on="1"/>
        <pt x="210" y="256" on="1"/>
        <pt x="210" y="254" on="0"/>
        <pt x="438" y="254" on="0"/>
        <pt x="438" y="255" on="1"/>
        <pt x="434" y="267" on="0"/>
        <pt x="429" y="281" on="1"/>
        <pt x="370" y="447" on="0"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 6 values pushed */
          19 1 4 0 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          34
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 21 values pushed */
          0 4 0 2 1 4 2 98 0 0 0 13 75 5 3 2 1 1 14 1 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          36
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 21 values pushed */
          0 4 0 2 1 4 2 98 0 0 0 13 75 5 3 2 1 1 17 1 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 21 values pushed */
          0 4 0 2 1 4 2 98 0 0 0 15 75 5 3 2 1 1 17 1 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 14 values pushed */
          0 0 28 26 0 16 0 16 17 21 49 6 6 23
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="B" xMin="90" yMin="0" xMax="610" yMax="694">
      <contour>
        <pt x="90" y="0" on="1"/>
        <pt x="90" y="694" on="1"/>
        <pt x="227" y="694" on="1"/>
        <pt x="373" y="693" on="0"/>
        <pt x="396" y="689" on="1"/>
        <pt x="508" y="668" on="0"/>
        <pt x="558" y="594" on="1"/>
        <pt x="583" y="555" on="0"/>
        <pt x="583" y="517" on="1"/>
        <pt x="583" y="493" on="0"/>
        <pt x="572" y="469" on="1"/>
        <pt x="536" y="398" on="0"/>
        <pt x="425" y="363" on="1"/>
        <pt x="430" y="363" on="0"/>
        <pt x="469" y="352" on="1"/>
        <pt x="577" y="313" on="0"/>
        <pt x="605" y="228" on="1"/>
        <pt x="610" y="208" on="0"/>
        <pt x="610" y="192" on="1"/>
        <pt x="610" y="157" on="0"/>
        <pt x="593" y="123" on="1"/>
        <pt x="572" y="80" on="0"/>
        <pt x="483" y="18" on="0"/>
        <pt x="426" y="7" on="1"/>
        <pt x="404" y="2" on="0"/>
        <pt x="370" y="1" on="0"/>
        <pt x="240" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="347" y="621" on="1"/>
        <pt x="340" y="622" on="0"/>
        <pt x="262" y="623" on="1"/>
        <pt x="188" y="623" on="1"/>
        <pt x="188" y="399" on="1"/>
        <pt x="261" y="399" on="1"/>
        <pt x="344" y="400" on="0"/>
        <pt x="371" y="407" on="1"/>
        <pt x="447" y="424" on="0"/>
        <pt x="478" y="475" on="1"/>
        <pt x="490" y="496" on="0"/>
        <pt x="490" y="516" on="1"/>
        <pt x="490" y="566" on="0"/>
        <pt x="424" y="598" on="1"/>
        <pt x="395" y="613" on="0"/>
      </contour>
      <contour>
        <pt x="434" y="297" on="1"/>
        <pt x="400" y="314" on="0"/>
        <pt x="350" y="323" on="0"/>
        <pt x="302" y="323" on="1"/>
        <pt x="259" y="323" on="1"/>
        <pt x="188" y="323" on="1"/>
        <pt x="188" y="71" on="1"/>
        <pt x="274" y="71" on="1"/>
        <pt x="365" y="72" on="0"/>
        <pt x="388" y="77" on="1"/>
        <pt x="436" y="87" on="0"/>
        <pt x="504" y="139" on="0"/>
        <pt x="512" y="173" on="1"/>
        <pt x="514" y="183" on="0"/>
        <pt x="514" y="190" on="1"/>
        <pt x="514" y="231" on="0"/>
        <pt x="480" y="265" on="1"/>
        <pt x="462" y="283" on="0"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 6 values pushed */
          12 1 4 3 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          34
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 30 values pushed */
          0 3 0 4 5 3 4 99 0 2 2 0 91 0 0 0 13 75 0 5 5 1 91 6 1
          1 1 14 1 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          36
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 30 values pushed */
          0 3 0 4 5 3 4 99 0 2 2 0 91 0 0 0 13 75 0 5 5 1 91 6 1
          1 1 17 1 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 30 values pushed */
          0 3 0 4 5 3 4 99 0 2 2 0 91 0 0 0 15 75 0 5 5 1 91 6 1
          1 1 17 1 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 18 values pushed */
          0 0 50 48 47 44 33 31 30 27 0 26 0 24 33 7 6 21
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="C" xMin="59" yMin="-11" xMax="587" yMax="705">
      <contour>
        <pt x="559" y="571" on="1"/>
        <pt x="516" y="599" on="0"/>
        <pt x="444" y="626" on="0"/>
        <pt x="392" y="626" on="1"/>
        <pt x="376" y="626" on="0"/>
        <pt x="369" y="625" on="1"/>
        <pt x="283" y="616" on="0"/>
        <pt x="224" y="538" on="1"/>
        <pt x="164" y="460" on="0"/>
        <pt x="164" y="347" on="1"/>
        <pt x="164" y="263" on="0"/>
        <pt x="197" y="200" on="1"/>
        <pt x="236" y="121" on="0"/>
        <pt x="306" y="88" on="1"/>
        <pt x="347" y="68" on="0"/>
        <pt x="397" y="68" on="1"/>
        <pt x="453" y="68" on="0"/>
        <pt x="522" y="90" on="0"/>
        <pt x="568" y="120" on="1"/>
        <pt x="581" y="129" on="1"/>
        <pt x="582" y="110" on="1"/>
        <pt x="584" y="91" on="0"/>
        <pt x="587" y="50" on="0"/>
        <pt x="587" y="42" on="0"/>
        <pt x="543" y="20" on="1"/>
        <pt x="480" y="-11" on="0"/>
        <pt x="396" y="-11" on="1"/>
        <pt x="226" y="-11" on="0"/>
        <pt x="128" y="128" on="1"/>
        <pt x="59" y="225" on="0"/>
        <pt x="59" y="347" on="1"/>
        <pt x="59" y="505" on="0"/>
        <pt x="169" y="613" on="1"/>
        <pt x="249" y="693" on="0"/>
        <pt x="362" y="704" on="1"/>
        <pt x="365" y="704" on="0"/>
        <pt x="385" y="705" on="0"/>
        <pt x="392" y="705" on="1"/>
        <pt x="471" y="705" on="0"/>
        <pt x="550" y="680" on="1"/>
        <pt x="577" y="670" on="0"/>
        <pt x="577" y="667" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 35 values pushed */
          20 19 2 1 0 1 74 0 0 0 3 91 0 3 3 23 75 0 1 1 2 91 0 2 2
          25 2 76 71 41 42 34 4 6 24
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="D" xMin="88" yMin="0" xMax="666" yMax="694">
      <contour>
        <pt x="88" y="0" on="1"/>
        <pt x="88" y="694" on="1"/>
        <pt x="237" y="694" on="1"/>
        <pt x="386" y="693" on="0"/>
        <pt x="399" y="691" on="1"/>
        <pt x="510" y="672" on="0"/>
        <pt x="649" y="504" on="0"/>
        <pt x="664" y="386" on="1"/>
        <pt x="666" y="366" on="0"/>
        <pt x="666" y="343" on="1"/>
        <pt x="666" y="318" on="0"/>
        <pt x="664" y="302" on="1"/>
        <pt x="649" y="172" on="0"/>
        <pt x="564" y="86" on="1"/>
        <pt x="494" y="18" on="0"/>
        <pt x="400" y="3" on="1"/>
        <pt x="387" y="1" on="0"/>
        <pt x="237" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="359" y="621" on="1"/>
        <pt x="348" y="623" on="0"/>
        <pt x="267" y="623" on="1"/>
        <pt x="189" y="623" on="1"/>
        <pt x="189" y="71" on="1"/>
        <pt x="267" y="71" on="1"/>
        <pt x="349" y="71" on="0"/>
        <pt x="356" y="72" on="1"/>
        <pt x="410" y="77" on="0"/>
        <pt x="499" y="136" on="0"/>
        <pt x="527" y="184" on="1"/>
        <pt x="565" y="251" on="0"/>
        <pt x="565" y="341" on="1"/>
        <pt x="565" y="433" on="0"/>
        <pt x="494" y="568" on="0"/>
        <pt x="431" y="600" on="1"/>
        <pt x="393" y="618" on="0"/>
      </contour>
      <instructions><assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          34
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 22 values pushed */
          0 2 2 0 91 0 0 0 13 75 0 3 3 1 91 4 1 1 1 14 1 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          36
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 22 values pushed */
          0 2 2 0 91 0 0 0 13 75 0 3 3 1 91 4 1 1 1 17 1 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 22 values pushed */
          0 2 2 0 91 0 0 0 15 75 0 3 3 1 91 4 1 1 1 17 1 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 14 values pushed */
          0 0 24 22 21 19 0 17 0 16 33 5 6 21
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Delta" xMin="42" yMin="0" xMax="790" yMax="694">
      <contour>
        <pt x="203" y="348" on="1"/>
        <pt x="362" y="694" on="1"/>
        <pt x="470" y="694" on="1"/>
        <pt x="629" y="348" on="1"/>
        <pt x="789" y="2" on="0"/>
        <pt x="790" y="1" on="1"/>
        <pt x="790" y="0" on="0"/>
        <pt x="42" y="0" on="0"/>
        <pt x="42" y="1" on="1"/>
        <pt x="43" y="2" on="0"/>
      </contour>
      <contour>
        <pt x="413" y="584" on="1"/>
        <pt x="411" y="590" on="0"/>
        <pt x="406" y="606" on="0"/>
        <pt x="405" y="610" on="1"/>
        <pt x="403" y="600" on="1"/>
        <pt x="388" y="544" on="0"/>
        <pt x="191" y="122" on="1"/>
        <pt x="180" y="99" on="1"/>
        <pt x="405" y="98" on="1"/>
        <pt x="630" y="98" on="1"/>
        <pt x="630" y="101" on="0"/>
        <pt x="600" y="163" on="1"/>
        <pt x="443" y="505" on="0"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 6 values pushed */
          18 13 6 1 2 48
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="E" xMin="86" yMin="0" xMax="554" yMax="691">
      <contour>
        <pt x="86" y="0" on="1"/>
        <pt x="86" y="691" on="1"/>
        <pt x="541" y="691" on="1"/>
        <pt x="541" y="611" on="1"/>
        <pt x="366" y="611" on="1"/>
        <pt x="190" y="612" on="1"/>
        <pt x="190" y="397" on="1"/>
        <pt x="513" y="397" on="1"/>
        <pt x="513" y="321" on="1"/>
        <pt x="190" y="321" on="1"/>
        <pt x="190" y="85" on="1"/>
        <pt x="372" y="85" on="1"/>
        <pt x="554" y="86" on="1"/>
        <pt x="554" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          34
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 30 values pushed */
          0 2 0 3 4 2 3 97 0 1 1 0 89 0 0 0 13 75 0 4 4 5 89 6 1
          5 5 14 5 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          36
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 30 values pushed */
          0 2 0 3 4 2 3 97 0 1 1 0 89 0 0 0 13 75 0 4 4 5 89 6 1
          5 5 17 5 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 30 values pushed */
          0 2 0 3 4 2 3 97 0 1 1 0 89 0 0 0 15 75 0 4 4 5 89 6 1
          5 5 17 5 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 14 values pushed */
          0 0 0 13 0 13 33 17 17 33 17 7 6 25
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="F" xMin="86" yMin="0" xMax="526" yMax="691">
      <contour>
        <pt x="86" y="0" on="1"/>
        <pt x="86" y="691" on="1"/>
        <pt x="526" y="691" on="1"/>
        <pt x="526" y="611" on="1"/>
        <pt x="358" y="611" on="1"/>
        <pt x="190" y="612" on="1"/>
        <pt x="190" y="384" on="1"/>
        <pt x="485" y="384" on="1"/>
        <pt x="485" y="308" on="1"/>
        <pt x="190" y="308" on="1"/>
        <pt x="190" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          34
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 25 values pushed */
          0 2 0 3 4 2 3 97 0 1 1 0 89 0 0 0 13 75 5 1 4 4 14 4 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          36
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 25 values pushed */
          0 2 0 3 4 2 3 97 0 1 1 0 89 0 0 0 13 75 5 1 4 4 17 4 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 25 values pushed */
          0 2 0 3 4 2 3 97 0 1 1 0 89 0 0 0 15 75 5 1 4 4 17 4 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 13 values pushed */
          0 0 0 10 0 10 17 17 33 17 6 6 24
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="G" xMin="59" yMin="-11" xMax="599" yMax="704">
      <contour>
        <pt x="392" y="68" on="1"/>
        <pt x="440" y="68" on="0"/>
        <pt x="506" y="84" on="1"/>
        <pt x="506" y="223" on="1"/>
        <pt x="388" y="223" on="1"/>
        <pt x="388" y="299" on="1"/>
        <pt x="599" y="299" on="1"/>
        <pt x="599" y="38" on="1"/>
        <pt x="588" y="33" on="1"/>
        <pt x="493" y="-11" on="0"/>
        <pt x="393" y="-11" on="1"/>
        <pt x="348" y="-11" on="0"/>
        <pt x="301" y="2" on="1"/>
        <pt x="198" y="33" on="0"/>
        <pt x="59" y="221" on="0"/>
        <pt x="59" y="346" on="1"/>
        <pt x="59" y="462" on="0"/>
        <pt x="122" y="557" on="1"/>
        <pt x="171" y="630" on="0"/>
        <pt x="249" y="671" on="1"/>
        <pt x="315" y="704" on="0"/>
        <pt x="384" y="704" on="1"/>
        <pt x="474" y="704" on="0"/>
        <pt x="541" y="679" on="1"/>
        <pt x="590" y="656" on="1"/>
        <pt x="590" y="652" on="0"/>
        <pt x="574" y="558" on="0"/>
        <pt x="573" y="557" on="1"/>
        <pt x="569" y="560" on="0"/>
        <pt x="564" y="564" on="1"/>
        <pt x="490" y="626" on="0"/>
        <pt x="392" y="626" on="1"/>
        <pt x="377" y="626" on="0"/>
        <pt x="370" y="625" on="1"/>
        <pt x="282" y="615" on="0"/>
        <pt x="164" y="459" on="0"/>
        <pt x="164" y="347" on="1"/>
        <pt x="164" y="248" on="0"/>
        <pt x="257" y="102" on="0"/>
        <pt x="330" y="78" on="1"/>
        <pt x="360" y="68" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 63 values pushed */
          24 1 5 4 2 1 0 1 7 1 3 0 3 74 0 2 0 1 0 2 1 97 0 5 5
          4 91 0 4 4 23 75 6 1 0 0 3 91 0 3 3 25 3 76 1 0 32 30 22 20
          11 9 6 5 4 3 0 40 1 40 7 6 20
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Gamma" xMin="87" yMin="0" xMax="499" yMax="691">
      <contour>
        <pt x="87" y="0" on="1"/>
        <pt x="87" y="691" on="1"/>
        <pt x="499" y="691" on="1"/>
        <pt x="499" y="611" on="1"/>
        <pt x="345" y="611" on="1"/>
        <pt x="191" y="612" on="1"/>
        <pt x="191" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 4 values pushed */
          1 0 1 48
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="H" xMin="86" yMin="0" xMax="621" yMax="694">
      <contour>
        <pt x="86" y="0" on="1"/>
        <pt x="86" y="694" on="1"/>
        <pt x="190" y="694" on="1"/>
        <pt x="190" y="399" on="1"/>
        <pt x="517" y="399" on="1"/>
        <pt x="517" y="694" on="1"/>
        <pt x="621" y="694" on="1"/>
        <pt x="621" y="0" on="1"/>
        <pt x="517" y="0" on="1"/>
        <pt x="517" y="323" on="1"/>
        <pt x="190" y="323" on="1"/>
        <pt x="190" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          34
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 22 values pushed */
          0 1 0 4 3 1 4 97 2 1 0 0 13 75 6 5 2 3 3 14 3 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          36
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 22 values pushed */
          0 1 0 4 3 1 4 97 2 1 0 0 13 75 6 5 2 3 3 17 3 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 22 values pushed */
          0 1 0 4 3 1 4 97 2 1 0 0 15 75 6 5 2 3 3 17 3 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 14 values pushed */
          0 0 0 11 0 11 17 17 17 17 17 7 6 25
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="I" xMin="87" yMin="0" xMax="191" yMax="694">
      <contour>
        <pt x="87" y="0" on="1"/>
        <pt x="87" y="694" on="1"/>
        <pt x="191" y="694" on="1"/>
        <pt x="191" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          34
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 12 values pushed */
          0 0 0 13 75 2 1 1 1 14 1 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          36
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 12 values pushed */
          0 0 0 13 75 2 1 1 1 17 1 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 12 values pushed */
          0 0 0 15 75 2 1 1 1 17 1 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 10 values pushed */
          0 0 0 3 0 3 17 3 6 21
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="J" xMin="43" yMin="-22" xMax="388" yMax="694">
      <contour>
        <pt x="287" y="129" on="1"/>
        <pt x="287" y="694" on="1"/>
        <pt x="388" y="694" on="1"/>
        <pt x="388" y="415" on="1"/>
        <pt x="388" y="132" on="0"/>
        <pt x="387" y="125" on="1"/>
        <pt x="384" y="92" on="0"/>
        <pt x="369" y="63" on="1"/>
        <pt x="351" y="23" on="0"/>
        <pt x="268" y="-22" on="0"/>
        <pt x="212" y="-22" on="1"/>
        <pt x="139" y="-22" on="0"/>
        <pt x="61" y="11" on="1"/>
        <pt x="43" y="20" on="1"/>
        <pt x="46" y="42" on="1"/>
        <pt x="50" y="65" on="0"/>
        <pt x="54" y="88" on="1"/>
        <pt x="58" y="110" on="1"/>
        <pt x="58" y="111" on="0"/>
        <pt x="65" y="104" on="1"/>
        <pt x="106" y="53" on="0"/>
        <pt x="181" y="53" on="1"/>
        <pt x="266" y="53" on="0"/>
        <pt x="284" y="121" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 11 values pushed */
          17 0 2 2 0 13 1 1 2 2 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          34
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 16 values pushed */
          0 0 0 13 75 0 2 2 1 91 0 1 1 22 1 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          36
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 16 values pushed */
          0 0 0 13 75 0 2 2 1 91 0 1 1 25 1 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          40
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 16 values pushed */
          0 0 0 15 75 0 2 2 1 91 0 1 1 25 1 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 13 values pushed */
          0 2 0 1 2 1 95 0 0 0 15 0 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 6 values pushed */
          41 39 17 3 6 23
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="K" xMin="88" yMin="0" xMax="651" yMax="694">
      <contour>
        <pt x="88" y="0" on="1"/>
        <pt x="88" y="694" on="1"/>
        <pt x="188" y="694" on="1"/>
        <pt x="188" y="519" on="1"/>
        <pt x="189" y="343" on="1"/>
        <pt x="525" y="694" on="1"/>
        <pt x="638" y="694" on="1"/>
        <pt x="507" y="557" on="1"/>
        <pt x="475" y="524" on="0"/>
        <pt x="409" y="455" on="0"/>
        <pt x="392" y="437" on="1"/>
        <pt x="375" y="419" on="1"/>
        <pt x="399" y="379" on="0"/>
        <pt x="637" y="22" on="1"/>
        <pt x="651" y="0" on="1"/>
        <pt x="541" y="0" on="1"/>
        <pt x="435" y="160" on="1"/>
        <pt x="413" y="193" on="0"/>
        <pt x="352" y="286" on="0"/>
        <pt x="322" y="332" on="0"/>
        <pt x="319" y="336" on="1"/>
        <pt x="309" y="351" on="1"/>
        <pt x="229" y="267" on="0"/>
        <pt x="188" y="225" on="1"/>
        <pt x="188" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 9 values pushed */
          23 21 11 4 4 2 0 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          34
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 14 values pushed */
          1 1 0 0 13 75 4 3 2 2 2 14 2 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          36
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 14 values pushed */
          1 1 0 0 13 75 4 3 2 2 2 17 2 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 14 values pushed */
          1 1 0 0 15 75 4 3 2 2 2 17 2 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 12 values pushed */
          0 0 0 24 0 24 24 19 17 5 6 23
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="L" xMin="87" yMin="0" xMax="499" yMax="694">
      <contour>
        <pt x="87" y="0" on="1"/>
        <pt x="87" y="694" on="1"/>
        <pt x="191" y="694" on="1"/>
        <pt x="191" y="79" on="1"/>
        <pt x="297" y="80" on="1"/>
        <pt x="451" y="80" on="1"/>
        <pt x="499" y="81" on="1"/>
        <pt x="499" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          34
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 17 values pushed */
          0 0 0 13 75 0 1 1 2 90 3 1 2 2 14 2 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          36
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 17 values pushed */
          0 0 0 13 75 0 1 1 2 90 3 1 2 2 17 2 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 17 values pushed */
          0 0 0 15 75 0 1 1 2 90 3 1 2 2 17 2 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 11 values pushed */
          0 0 0 7 0 7 49 17 4 6 22
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Lambda" xMin="28" yMin="0" xMax="582" yMax="694">
      <contour>
        <pt x="141" y="348" on="1"/>
        <pt x="254" y="694" on="1"/>
        <pt x="357" y="694" on="1"/>
        <pt x="469" y="348" on="1"/>
        <pt x="582" y="2" on="0"/>
        <pt x="582" y="0" on="0"/>
        <pt x="527" y="0" on="1"/>
        <pt x="473" y="1" on="1"/>
        <pt x="469" y="11" on="1"/>
        <pt x="468" y="16" on="0"/>
        <pt x="445" y="87" on="1"/>
        <pt x="305" y="518" on="0"/>
        <pt x="296" y="599" on="1"/>
        <pt x="294" y="610" on="1"/>
        <pt x="294" y="606" on="1"/>
        <pt x="294" y="582" on="0"/>
        <pt x="267" y="484" on="1"/>
        <pt x="225" y="330" on="0"/>
        <pt x="119" y="8" on="1"/>
        <pt x="117" y="0" on="1"/>
        <pt x="72" y="0" on="1"/>
        <pt x="28" y="0" on="0"/>
        <pt x="28" y="2" on="0"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 4 values pushed */
          5 1 1 48
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="M" xMin="92" yMin="0" xMax="782" yMax="694">
      <contour>
        <pt x="92" y="0" on="1"/>
        <pt x="92" y="694" on="1"/>
        <pt x="228" y="694" on="1"/>
        <pt x="233" y="680" on="1"/>
        <pt x="234" y="677" on="0"/>
        <pt x="245" y="648" on="0"/>
        <pt x="262" y="602" on="0"/>
        <pt x="270" y="582" on="1"/>
        <pt x="423" y="172" on="0"/>
        <pt x="435" y="115" on="1"/>
        <pt x="436" y="106" on="1"/>
        <pt x="454" y="183" on="0"/>
        <pt x="603" y="582" on="1"/>
        <pt x="611" y="602" on="0"/>
        <pt x="628" y="648" on="0"/>
        <pt x="639" y="677" on="0"/>
        <pt x="640" y="680" on="1"/>
        <pt x="645" y="694" on="1"/>
        <pt x="782" y="694" on="1"/>
        <pt x="782" y="0" on="1"/>
        <pt x="689" y="0" on="1"/>
        <pt x="689" y="305" on="1"/>
        <pt x="688" y="606" on="1"/>
        <pt x="688" y="593" on="0"/>
        <pt x="674" y="543" on="0"/>
        <pt x="637" y="437" on="0"/>
        <pt x="603" y="348" on="0"/>
        <pt x="527" y="150" on="0"/>
        <pt x="500" y="78" on="1"/>
        <pt x="479" y="23" on="1"/>
        <pt x="392" y="23" on="1"/>
        <pt x="364" y="96" on="1"/>
        <pt x="199" y="538" on="0"/>
        <pt x="188" y="598" on="1"/>
        <pt x="186" y="608" on="0"/>
        <pt x="186" y="609" on="1"/>
        <pt x="186" y="588" on="1"/>
        <pt x="185" y="568" on="0"/>
        <pt x="185" y="466" on="0"/>
        <pt x="185" y="387" on="0"/>
        <pt x="185" y="305" on="1"/>
        <pt x="185" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 6 values pushed */
          10 1 3 0 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          21
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 19 values pushed */
          1 1 0 0 13 75 0 3 3 14 75 5 4 2 2 2 14 2 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          34
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 22 values pushed */
          0 3 0 2 0 3 2 112 1 1 0 0 13 75 5 4 2 2 2 14 2 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          36
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 22 values pushed */
          0 3 0 2 0 3 2 112 1 1 0 0 13 75 5 4 2 2 2 17 2 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 22 values pushed */
          0 3 0 2 0 3 2 112 1 1 0 0 15 75 5 4 2 2 2 17 2 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 13 values pushed */
          0 0 0 41 0 41 25 17 31 17 6 6 24
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="N" xMin="88" yMin="0" xMax="619" yMax="694">
      <contour>
        <pt x="88" y="0" on="1"/>
        <pt x="88" y="694" on="1"/>
        <pt x="235" y="694" on="1"/>
        <pt x="252" y="659" on="1"/>
        <pt x="260" y="640" on="0"/>
        <pt x="314" y="531" on="1"/>
        <pt x="463" y="224" on="0"/>
        <pt x="526" y="84" on="1"/>
        <pt x="526" y="694" on="1"/>
        <pt x="619" y="694" on="1"/>
        <pt x="619" y="0" on="1"/>
        <pt x="472" y="0" on="1"/>
        <pt x="455" y="35" on="1"/>
        <pt x="455" y="36" on="0"/>
        <pt x="393" y="164" on="1"/>
        <pt x="209" y="540" on="0"/>
        <pt x="185" y="601" on="1"/>
        <pt x="181" y="611" on="1"/>
        <pt x="181" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 7 values pushed */
          17 7 2 2 0 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          34
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 14 values pushed */
          1 1 0 0 13 75 4 3 2 2 2 14 2 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          36
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 14 values pushed */
          1 1 0 0 13 75 4 3 2 2 2 17 2 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 14 values pushed */
          1 1 0 0 15 75 4 3 2 2 2 17 2 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 12 values pushed */
          0 0 0 18 0 18 17 22 17 5 6 23
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="O" xMin="55" yMin="-22" xMax="680" yMax="715">
      <contour>
        <pt x="227" y="676" on="1"/>
        <pt x="293" y="715" on="0"/>
        <pt x="361" y="715" on="1"/>
        <pt x="386" y="715" on="0"/>
        <pt x="406" y="713" on="1"/>
        <pt x="471" y="703" on="0"/>
        <pt x="583" y="624" on="0"/>
        <pt x="622" y="560" on="1"/>
        <pt x="680" y="465" on="0"/>
        <pt x="680" y="344" on="1"/>
        <pt x="680" y="311" on="0"/>
        <pt x="676" y="286" on="1"/>
        <pt x="660" y="168" on="0"/>
        <pt x="513" y="-3" on="0"/>
        <pt x="403" y="-20" on="1"/>
        <pt x="387" y="-22" on="0"/>
        <pt x="368" y="-22" on="1"/>
        <pt x="348" y="-22" on="0"/>
        <pt x="332" y="-20" on="1"/>
        <pt x="236" y="-5" on="0"/>
        <pt x="165" y="66" on="1"/>
        <pt x="130" y="101" on="0"/>
        <pt x="105" y="145" on="1"/>
        <pt x="55" y="234" on="0"/>
        <pt x="55" y="345" on="1"/>
        <pt x="55" y="399" on="0"/>
        <pt x="69" y="455" on="1"/>
        <pt x="88" y="526" on="0"/>
        <pt x="170" y="642" on="0"/>
      </contour>
      <contour>
        <pt x="576" y="360" on="1"/>
        <pt x="576" y="462" on="0"/>
        <pt x="482" y="616" on="0"/>
        <pt x="401" y="634" on="1"/>
        <pt x="371" y="637" on="0"/>
        <pt x="362" y="637" on="1"/>
        <pt x="352" y="637" on="0"/>
        <pt x="348" y="636" on="1"/>
        <pt x="262" y="626" on="0"/>
        <pt x="159" y="466" on="0"/>
        <pt x="159" y="360" on="1"/>
        <pt x="159" y="247" on="0"/>
        <pt x="254" y="79" on="0"/>
        <pt x="338" y="61" on="1"/>
        <pt x="346" y="59" on="0"/>
        <pt x="368" y="59" on="1"/>
        <pt x="389" y="59" on="0"/>
        <pt x="397" y="61" on="1"/>
        <pt x="478" y="78" on="0"/>
        <pt x="576" y="246" on="0"/>
      </contour>
      <instructions><assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          34
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 21 values pushed */
          0 2 2 0 91 0 0 0 21 75 0 3 3 1 91 0 1 1 22 1 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          36
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 21 values pushed */
          0 2 2 0 91 0 0 0 21 75 0 3 3 1 91 0 1 1 25 1 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          40
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 21 values pushed */
          0 2 2 0 91 0 0 0 23 75 0 3 3 1 91 0 1 1 25 1 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          49
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 18 values pushed */
          0 3 0 1 3 1 95 0 2 2 0 91 0 0 0 23 2 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 24 values pushed */
          0 0 0 2 3 0 2 99 0 3 1 1 3 87 0 3 3 1 91 0 1 3 1 79
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 9 values pushed */
          45 43 35 33 44 33 4 6 22
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Omega" xMin="44" yMin="0" xMax="677" yMax="716">
      <contour>
        <pt x="69" y="537" on="1"/>
        <pt x="98" y="614" on="0"/>
        <pt x="255" y="716" on="0"/>
        <pt x="359" y="716" on="1"/>
        <pt x="506" y="716" on="0"/>
        <pt x="598" y="621" on="1"/>
        <pt x="666" y="551" on="0"/>
        <pt x="666" y="462" on="1"/>
        <pt x="666" y="449" on="0"/>
        <pt x="665" y="442" on="1"/>
        <pt x="661" y="397" on="0"/>
        <pt x="627" y="308" on="0"/>
        <pt x="583" y="230" on="1"/>
        <pt x="539" y="151" on="0"/>
        <pt x="529" y="126" on="1"/>
        <pt x="515" y="91" on="0"/>
        <pt x="515" y="86" on="1"/>
        <pt x="517" y="85" on="0"/>
        <pt x="528" y="85" on="1"/>
        <pt x="530" y="85" on="0"/>
        <pt x="575" y="86" on="0"/>
        <pt x="596" y="86" on="1"/>
        <pt x="677" y="86" on="1"/>
        <pt x="677" y="0" on="1"/>
        <pt x="425" y="0" on="1"/>
        <pt x="425" y="14" on="1"/>
        <pt x="429" y="79" on="0"/>
        <pt x="465" y="168" on="1"/>
        <pt x="481" y="204" on="0"/>
        <pt x="492" y="228" on="1"/>
        <pt x="539" y="331" on="0"/>
        <pt x="550" y="375" on="1"/>
        <pt x="562" y="417" on="0"/>
        <pt x="562" y="460" on="1"/>
        <pt x="562" y="540" on="0"/>
        <pt x="450" y="639" on="0"/>
        <pt x="361" y="639" on="1"/>
        <pt x="277" y="639" on="0"/>
        <pt x="168" y="550" on="0"/>
        <pt x="160" y="480" on="1"/>
        <pt x="159" y="474" on="0"/>
        <pt x="159" y="460" on="1"/>
        <pt x="159" y="417" on="0"/>
        <pt x="171" y="375" on="1"/>
        <pt x="182" y="331" on="0"/>
        <pt x="229" y="228" on="1"/>
        <pt x="240" y="204" on="0"/>
        <pt x="256" y="168" on="1"/>
        <pt x="292" y="79" on="0"/>
        <pt x="296" y="14" on="1"/>
        <pt x="296" y="0" on="1"/>
        <pt x="44" y="0" on="1"/>
        <pt x="44" y="86" on="1"/>
        <pt x="125" y="86" on="1"/>
        <pt x="146" y="86" on="0"/>
        <pt x="191" y="85" on="0"/>
        <pt x="193" y="85" on="1"/>
        <pt x="206" y="86" on="1"/>
        <pt x="206" y="91" on="0"/>
        <pt x="192" y="126" on="1"/>
        <pt x="182" y="151" on="0"/>
        <pt x="138" y="230" on="1"/>
        <pt x="71" y="350" on="0"/>
        <pt x="60" y="415" on="1"/>
        <pt x="55" y="442" on="0"/>
        <pt x="55" y="462" on="1"/>
        <pt x="55" y="500" on="0"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 4 values pushed */
          23 2 1 48
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="P" xMin="88" yMin="0" xMax="583" yMax="694">
      <contour>
        <pt x="88" y="0" on="1"/>
        <pt x="88" y="694" on="1"/>
        <pt x="230" y="694" on="1"/>
        <pt x="373" y="693" on="0"/>
        <pt x="386" y="691" on="1"/>
        <pt x="472" y="678" on="0"/>
        <pt x="583" y="560" on="0"/>
        <pt x="583" y="485" on="1"/>
        <pt x="583" y="467" on="0"/>
        <pt x="578" y="444" on="1"/>
        <pt x="564" y="378" on="0"/>
        <pt x="454" y="285" on="0"/>
        <pt x="379" y="276" on="1"/>
        <pt x="369" y="274" on="0"/>
        <pt x="279" y="274" on="1"/>
        <pt x="192" y="274" on="1"/>
        <pt x="192" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="357" y="621" on="1"/>
        <pt x="350" y="622" on="0"/>
        <pt x="268" y="623" on="1"/>
        <pt x="189" y="623" on="1"/>
        <pt x="189" y="347" on="1"/>
        <pt x="268" y="347" on="1"/>
        <pt x="350" y="348" on="0"/>
        <pt x="357" y="349" on="1"/>
        <pt x="465" y="367" on="0"/>
        <pt x="485" y="457" on="1"/>
        <pt x="486" y="463" on="0"/>
        <pt x="486" y="485" on="1"/>
        <pt x="486" y="532" on="0"/>
        <pt x="462" y="564" on="1"/>
        <pt x="428" y="609" on="0"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 6 values pushed */
          26 1 4 3 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          34
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 25 values pushed */
          0 4 0 1 2 4 1 99 0 3 3 0 91 0 0 0 13 75 5 1 2 2 14 2 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          36
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 25 values pushed */
          0 4 0 1 2 4 1 99 0 3 3 0 91 0 0 0 13 75 5 1 2 2 17 2 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 25 values pushed */
          0 4 0 1 2 4 1 99 0 3 3 0 91 0 0 0 15 75 5 1 2 2 17 2 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 15 values pushed */
          0 0 23 21 20 17 0 16 0 16 42 33 6 6 22
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Phi" xMin="55" yMin="0" xMax="666" yMax="694">
      <contour>
        <pt x="312" y="641" on="1"/>
        <pt x="312" y="694" on="1"/>
        <pt x="410" y="694" on="1"/>
        <pt x="410" y="587" on="1"/>
        <pt x="413" y="587" on="1"/>
        <pt x="448" y="581" on="0"/>
        <pt x="477" y="572" on="1"/>
        <pt x="598" y="532" on="0"/>
        <pt x="645" y="435" on="1"/>
        <pt x="666" y="392" on="0"/>
        <pt x="666" y="302" on="0"/>
        <pt x="645" y="260" on="1"/>
        <pt x="588" y="137" on="0"/>
        <pt x="413" y="107" on="1"/>
        <pt x="410" y="107" on="1"/>
        <pt x="410" y="0" on="1"/>
        <pt x="312" y="0" on="1"/>
        <pt x="312" y="54" on="1"/>
        <pt x="312" y="107" on="0"/>
        <pt x="311" y="107" on="1"/>
        <pt x="304" y="108" on="0"/>
        <pt x="296" y="109" on="1"/>
        <pt x="199" y="126" on="0"/>
        <pt x="55" y="255" on="0"/>
        <pt x="55" y="439" on="0"/>
        <pt x="199" y="568" on="0"/>
        <pt x="296" y="585" on="1"/>
        <pt x="311" y="587" on="1"/>
        <pt x="312" y="587" on="0"/>
      </contour>
      <contour>
        <pt x="312" y="347" on="1"/>
        <pt x="312" y="510" on="0"/>
        <pt x="310" y="510" on="1"/>
        <pt x="292" y="510" on="0"/>
        <pt x="264" y="497" on="1"/>
        <pt x="176" y="463" on="0"/>
        <pt x="159" y="377" on="1"/>
        <pt x="157" y="369" on="0"/>
        <pt x="157" y="325" on="0"/>
        <pt x="159" y="317" on="1"/>
        <pt x="176" y="231" on="0"/>
        <pt x="268" y="195" on="1"/>
        <pt x="285" y="190" on="0"/>
        <pt x="312" y="184" on="1"/>
      </contour>
      <contour>
        <pt x="428" y="506" on="1"/>
        <pt x="419" y="509" on="0"/>
        <pt x="414" y="509" on="1"/>
        <pt x="410" y="510" on="1"/>
        <pt x="410" y="184" on="1"/>
        <pt x="454" y="195" on="0"/>
        <pt x="473" y="203" on="1"/>
        <pt x="547" y="240" on="0"/>
        <pt x="562" y="317" on="1"/>
        <pt x="564" y="325" on="0"/>
        <pt x="564" y="347" on="1"/>
        <pt x="564" y="411" on="0"/>
        <pt x="524" y="454" on="1"/>
        <pt x="484" y="494" on="0"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 8 values pushed */
          47 46 42 30 15 1 3 48
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Pi" xMin="86" yMin="0" xMax="621" yMax="691">
      <contour>
        <pt x="86" y="0" on="1"/>
        <pt x="86" y="691" on="1"/>
        <pt x="621" y="691" on="1"/>
        <pt x="621" y="0" on="1"/>
        <pt x="517" y="0" on="1"/>
        <pt x="517" y="615" on="1"/>
        <pt x="190" y="615" on="1"/>
        <pt x="190" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 4 values pushed */
          1 0 1 48
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Psi" xMin="55" yMin="0" xMax="722" yMax="694">
      <contour>
        <pt x="340" y="187" on="1"/>
        <pt x="340" y="694" on="1"/>
        <pt x="438" y="694" on="1"/>
        <pt x="438" y="187" on="1"/>
        <pt x="478" y="204" on="0"/>
        <pt x="495" y="219" on="1"/>
        <pt x="534" y="252" on="0"/>
        <pt x="550" y="315" on="1"/>
        <pt x="561" y="356" on="0"/>
        <pt x="562" y="435" on="1"/>
        <pt x="562" y="575" on="0"/>
        <pt x="593" y="608" on="1"/>
        <pt x="609" y="622" on="0"/>
        <pt x="629" y="622" on="1"/>
        <pt x="632" y="622" on="0"/>
        <pt x="659" y="621" on="0"/>
        <pt x="670" y="621" on="1"/>
        <pt x="722" y="621" on="1"/>
        <pt x="722" y="545" on="1"/>
        <pt x="719" y="545" on="1"/>
        <pt x="718" y="545" on="0"/>
        <pt x="712" y="544" on="0"/>
        <pt x="710" y="544" on="1"/>
        <pt x="679" y="536" on="0"/>
        <pt x="666" y="487" on="1"/>
        <pt x="664" y="475" on="0"/>
        <pt x="657" y="356" on="0"/>
        <pt x="655" y="343" on="1"/>
        <pt x="626" y="142" on="0"/>
        <pt x="446" y="109" on="1"/>
        <pt x="438" y="108" on="1"/>
        <pt x="438" y="0" on="1"/>
        <pt x="340" y="0" on="1"/>
        <pt x="340" y="108" on="1"/>
        <pt x="326" y="110" on="1"/>
        <pt x="240" y="126" on="0"/>
        <pt x="134" y="250" on="0"/>
        <pt x="122" y="346" on="1"/>
        <pt x="120" y="359" on="0"/>
        <pt x="113" y="476" on="0"/>
        <pt x="111" y="487" on="1"/>
        <pt x="98" y="536" on="0"/>
        <pt x="67" y="544" on="1"/>
        <pt x="65" y="544" on="0"/>
        <pt x="59" y="545" on="0"/>
        <pt x="58" y="545" on="1"/>
        <pt x="55" y="545" on="1"/>
        <pt x="55" y="621" on="1"/>
        <pt x="107" y="621" on="1"/>
        <pt x="160" y="621" on="0"/>
        <pt x="163" y="620" on="1"/>
        <pt x="191" y="613" on="0"/>
        <pt x="202" y="573" on="1"/>
        <pt x="214" y="535" on="0"/>
        <pt x="215" y="435" on="1"/>
        <pt x="216" y="369" on="0"/>
        <pt x="221" y="340" on="1"/>
        <pt x="230" y="287" on="0"/>
        <pt x="256" y="249" on="1"/>
        <pt x="283" y="206" on="0"/>
        <pt x="333" y="190" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 4 values pushed */
          31 1 1 48
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Q" xMin="55" yMin="-125" xMax="680" yMax="715">
      <contour>
        <pt x="227" y="676" on="1"/>
        <pt x="293" y="715" on="0"/>
        <pt x="361" y="715" on="1"/>
        <pt x="386" y="715" on="0"/>
        <pt x="406" y="713" on="1"/>
        <pt x="471" y="703" on="0"/>
        <pt x="583" y="624" on="0"/>
        <pt x="622" y="560" on="1"/>
        <pt x="680" y="465" on="0"/>
        <pt x="680" y="344" on="1"/>
        <pt x="680" y="311" on="0"/>
        <pt x="676" y="286" on="1"/>
        <pt x="661" y="175" on="0"/>
        <pt x="596" y="94" on="1"/>
        <pt x="577" y="70" on="0"/>
        <pt x="546" y="44" on="1"/>
        <pt x="536" y="36" on="0"/>
        <pt x="536" y="35" on="1"/>
        <pt x="537" y="34" on="0"/>
        <pt x="587" y="-35" on="0"/>
        <pt x="644" y="-115" on="0"/>
        <pt x="652" y="-125" on="1"/>
        <pt x="531" y="-125" on="1"/>
        <pt x="496" y="-76" on="0"/>
        <pt x="452" y="-8" on="1"/>
        <pt x="440" y="-12" on="1"/>
        <pt x="407" y="-22" on="0"/>
        <pt x="369" y="-22" on="1"/>
        <pt x="257" y="-22" on="0"/>
        <pt x="165" y="66" on="1"/>
        <pt x="130" y="101" on="0"/>
        <pt x="105" y="145" on="1"/>
        <pt x="55" y="234" on="0"/>
        <pt x="55" y="345" on="1"/>
        <pt x="55" y="399" on="0"/>
        <pt x="69" y="455" on="1"/>
        <pt x="88" y="526" on="0"/>
        <pt x="170" y="642" on="0"/>
      </contour>
      <contour>
        <pt x="404" y="61" on="1"/>
        <pt x="404" y="63" on="0"/>
        <pt x="315" y="193" on="0"/>
        <pt x="315" y="194" on="1"/>
        <pt x="421" y="194" on="1"/>
        <pt x="453" y="150" on="1"/>
        <pt x="485" y="105" on="0"/>
        <pt x="486" y="105" on="1"/>
        <pt x="492" y="110" on="1"/>
        <pt x="498" y="116" on="0"/>
        <pt x="513" y="133" on="0"/>
        <pt x="517" y="138" on="1"/>
        <pt x="579" y="218" on="0"/>
        <pt x="579" y="345" on="1"/>
        <pt x="579" y="456" on="0"/>
        <pt x="474" y="624" on="0"/>
        <pt x="388" y="636" on="1"/>
        <pt x="382" y="637" on="0"/>
        <pt x="369" y="637" on="1"/>
        <pt x="320" y="637" on="0"/>
        <pt x="235" y="582" on="0"/>
        <pt x="209" y="542" on="1"/>
        <pt x="156" y="462" on="0"/>
        <pt x="156" y="345" on="1"/>
        <pt x="156" y="234" on="0"/>
        <pt x="256" y="76" on="0"/>
        <pt x="337" y="60" on="1"/>
        <pt x="347" y="58" on="0"/>
        <pt x="368" y="58" on="1"/>
        <pt x="390" y="58" on="0"/>
        <pt x="395" y="59" on="1"/>
        <pt x="397" y="59" on="0"/>
        <pt x="401" y="60" on="0"/>
        <pt x="402" y="60" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 6 values pushed */
          24 1 2 5 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          10
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 33 values pushed */
          0 3 4 5 5 3 104 0 1 2 1 115 0 4 4 0 91 0 0 0 21 75 0 5 5
          2 92 0 2 2 22 2 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          34
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 34 values pushed */
          0 3 4 5 4 3 5 112 0 1 2 1 115 0 4 4 0 91 0 0 0 21 75 0 5
          5 2 92 0 2 2 22 2 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          36
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 34 values pushed */
          0 3 4 5 4 3 5 112 0 1 2 1 115 0 4 4 0 91 0 0 0 21 75 0 5
          5 2 92 0 2 2 25 2 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          40
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 34 values pushed */
          0 3 4 5 4 3 5 112 0 1 2 1 115 0 4 4 0 91 0 0 0 23 75 0 5
          5 2 92 0 2 2 25 2 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          49
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 32 values pushed */
          0 3 4 5 4 3 5 112 0 1 2 1 115 0 5 0 2 1 5 2 100 0 4 4 0
          91 0 0 0 23 4 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 37 values pushed */
          0 3 4 5 4 3 5 112 0 1 2 1 115 0 0 0 4 3 0 4 99 0 5 2 2
          5 87 0 5 5 2 92 0 2 5 2 80
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 14 values pushed */
          67 65 57 54 42 40 28 26 22 21 33 6 6 21
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="R" xMin="88" yMin="0" xMax="617" yMax="694">
      <contour>
        <pt x="88" y="0" on="1"/>
        <pt x="88" y="694" on="1"/>
        <pt x="227" y="694" on="1"/>
        <pt x="370" y="693" on="0"/>
        <pt x="379" y="692" on="1"/>
        <pt x="434" y="683" on="0"/>
        <pt x="474" y="663" on="1"/>
        <pt x="528" y="637" on="0"/>
        <pt x="589" y="552" on="0"/>
        <pt x="589" y="504" on="1"/>
        <pt x="589" y="445" on="0"/>
        <pt x="506" y="350" on="0"/>
        <pt x="441" y="326" on="1"/>
        <pt x="429" y="320" on="1"/>
        <pt x="440" y="300" on="1"/>
        <pt x="452" y="280" on="0"/>
        <pt x="503" y="195" on="0"/>
        <pt x="523" y="160" on="1"/>
        <pt x="617" y="1" on="1"/>
        <pt x="565" y="0" on="1"/>
        <pt x="513" y="0" on="0"/>
        <pt x="512" y="1" on="1"/>
        <pt x="512" y="2" on="0"/>
        <pt x="424" y="156" on="1"/>
        <pt x="337" y="309" on="1"/>
        <pt x="189" y="309" on="1"/>
        <pt x="189" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="367" y="620" on="1"/>
        <pt x="354" y="622" on="0"/>
        <pt x="271" y="623" on="1"/>
        <pt x="189" y="623" on="1"/>
        <pt x="189" y="385" on="1"/>
        <pt x="271" y="385" on="1"/>
        <pt x="363" y="386" on="0"/>
        <pt x="388" y="392" on="1"/>
        <pt x="472" y="412" on="0"/>
        <pt x="490" y="479" on="1"/>
        <pt x="492" y="485" on="0"/>
        <pt x="492" y="523" on="0"/>
        <pt x="490" y="529" on="1"/>
        <pt x="471" y="603" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 10 values pushed */
          36 1 5 4 13 1 2 5 2 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          34
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 26 values pushed */
          0 5 0 2 1 5 2 97 0 4 4 0 91 0 0 0 13 75 6 3 2 1 1 14 1
          76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          36
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 26 values pushed */
          0 5 0 2 1 5 2 97 0 4 4 0 91 0 0 0 13 75 6 3 2 1 1 17 1
          76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 26 values pushed */
          0 5 0 2 1 5 2 97 0 4 4 0 91 0 0 0 15 75 6 3 2 1 1 17 1
          76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 16 values pushed */
          0 0 33 31 30 28 0 26 0 26 20 47 33 7 6 23
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="S" xMin="44" yMin="-22" xMax="500" yMax="716">
      <contour>
        <pt x="44" y="50" on="1"/>
        <pt x="62" y="146" on="1"/>
        <pt x="121" y="87" on="0"/>
        <pt x="216" y="68" on="1"/>
        <pt x="245" y="63" on="0"/>
        <pt x="274" y="63" on="1"/>
        <pt x="286" y="63" on="1"/>
        <pt x="303" y="63" on="0"/>
        <pt x="319" y="69" on="1"/>
        <pt x="357" y="81" on="0"/>
        <pt x="406" y="142" on="0"/>
        <pt x="406" y="182" on="1"/>
        <pt x="406" y="245" on="0"/>
        <pt x="352" y="280" on="1"/>
        <pt x="338" y="290" on="0"/>
        <pt x="310" y="299" on="0"/>
        <pt x="259" y="312" on="1"/>
        <pt x="196" y="327" on="0"/>
        <pt x="173" y="339" on="1"/>
        <pt x="122" y="363" on="0"/>
        <pt x="55" y="454" on="0"/>
        <pt x="55" y="514" on="1"/>
        <pt x="55" y="546" on="0"/>
        <pt x="65" y="573" on="1"/>
        <pt x="87" y="638" on="0"/>
        <pt x="204" y="716" on="0"/>
        <pt x="283" y="716" on="1"/>
        <pt x="370" y="716" on="0"/>
        <pt x="447" y="677" on="1"/>
        <pt x="467" y="667" on="1"/>
        <pt x="467" y="666" on="0"/>
        <pt x="450" y="569" on="0"/>
        <pt x="449" y="568" on="1"/>
        <pt x="446" y="571" on="0"/>
        <pt x="442" y="574" on="1"/>
        <pt x="405" y="606" on="0"/>
        <pt x="335" y="634" on="0"/>
        <pt x="282" y="634" on="1"/>
        <pt x="230" y="634" on="0"/>
        <pt x="163" y="588" on="0"/>
        <pt x="152" y="549" on="1"/>
        <pt x="150" y="543" on="0"/>
        <pt x="150" y="525" on="1"/>
        <pt x="150" y="511" on="0"/>
        <pt x="151" y="506" on="1"/>
        <pt x="163" y="458" on="0"/>
        <pt x="212" y="435" on="1"/>
        <pt x="228" y="427" on="0"/>
        <pt x="289" y="412" on="1"/>
        <pt x="353" y="396" on="0"/>
        <pt x="378" y="384" on="1"/>
        <pt x="433" y="357" on="0"/>
        <pt x="500" y="255" on="0"/>
        <pt x="500" y="194" on="1"/>
        <pt x="500" y="105" on="0"/>
        <pt x="372" y="-22" on="0"/>
        <pt x="272" y="-22" on="1"/>
        <pt x="244" y="-22" on="0"/>
        <pt x="219" y="-18" on="1"/>
        <pt x="131" y="-6" on="0"/>
        <pt x="51" y="43" on="1"/>
        <pt x="44" y="48" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 11 values pushed */
          29 1 2 1 42 1 2 0 2 2 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          34
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 21 values pushed */
          0 2 2 1 91 0 1 1 21 75 0 0 0 3 91 0 3 3 22 3 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          36
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 21 values pushed */
          0 2 2 1 91 0 1 1 21 75 0 0 0 3 91 0 3 3 25 3 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          40
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 21 values pushed */
          0 2 2 1 91 0 1 1 23 75 0 0 0 3 91 0 3 3 25 3 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          45
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 18 values pushed */
          0 0 0 3 0 3 95 0 2 2 1 91 0 1 1 23 2 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 24 values pushed */
          0 1 0 2 0 1 2 99 0 0 3 3 0 87 0 0 0 3 91 0 3 0 3 79
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 10 values pushed */
          57 55 38 36 27 25 52 4 6 21
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Sigma" xMin="55" yMin="0" xMax="666" yMax="694">
      <contour>
        <pt x="55" y="0" on="1"/>
        <pt x="61" y="10" on="0"/>
        <pt x="285" y="329" on="0"/>
        <pt x="288" y="332" on="1"/>
        <pt x="288" y="334" on="0"/>
        <pt x="172" y="474" on="1"/>
        <pt x="55" y="615" on="1"/>
        <pt x="55" y="694" on="1"/>
        <pt x="666" y="694" on="1"/>
        <pt x="666" y="614" on="1"/>
        <pt x="428" y="614" on="1"/>
        <pt x="190" y="615" on="1"/>
        <pt x="199" y="604" on="1"/>
        <pt x="216" y="584" on="1"/>
        <pt x="233" y="563" on="0"/>
        <pt x="285" y="500" on="0"/>
        <pt x="310" y="470" on="1"/>
        <pt x="412" y="347" on="1"/>
        <pt x="322" y="218" on="1"/>
        <pt x="240" y="101" on="0"/>
        <pt x="228" y="84" on="1"/>
        <pt x="447" y="85" on="1"/>
        <pt x="666" y="85" on="1"/>
        <pt x="666" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 4 values pushed */
          7 0 1 48
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="T" xMin="36" yMin="0" xMax="644" yMax="688">
      <contour>
        <pt x="36" y="608" on="1"/>
        <pt x="36" y="688" on="1"/>
        <pt x="644" y="688" on="1"/>
        <pt x="644" y="608" on="1"/>
        <pt x="518" y="608" on="1"/>
        <pt x="392" y="609" on="1"/>
        <pt x="392" y="0" on="1"/>
        <pt x="288" y="0" on="1"/>
        <pt x="288" y="609" on="1"/>
        <pt x="162" y="608" on="1"/>
      </contour>
      <instructions><assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          34
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 18 values pushed */
          4 3 2 1 1 0 89 0 0 0 13 75 0 2 2 14 2 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          36
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 18 values pushed */
          4 3 2 1 1 0 89 0 0 0 13 75 0 2 2 17 2 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 18 values pushed */
          4 3 2 1 1 0 89 0 0 0 15 75 0 2 2 17 2 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 12 values pushed */
          0 0 0 9 0 8 17 33 17 5 6 23
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Theta" xMin="56" yMin="-21" xMax="722" yMax="716">
      <contour>
        <pt x="56" y="344" on="1"/>
        <pt x="56" y="495" on="0"/>
        <pt x="235" y="703" on="0"/>
        <pt x="363" y="715" on="1"/>
        <pt x="371" y="716" on="0"/>
        <pt x="388" y="716" on="1"/>
        <pt x="461" y="716" on="0"/>
        <pt x="524" y="683" on="1"/>
        <pt x="605" y="643" on="0"/>
        <pt x="708" y="489" on="0"/>
        <pt x="720" y="390" on="1"/>
        <pt x="722" y="368" on="0"/>
        <pt x="722" y="320" on="0"/>
        <pt x="720" y="300" on="1"/>
        <pt x="705" y="186" on="0"/>
        <pt x="639" y="102" on="1"/>
        <pt x="609" y="67" on="0"/>
        <pt x="587" y="50" on="1"/>
        <pt x="518" y="-6" on="0"/>
        <pt x="430" y="-19" on="1"/>
        <pt x="418" y="-21" on="0"/>
        <pt x="389" y="-21" on="1"/>
        <pt x="359" y="-21" on="0"/>
        <pt x="347" y="-19" on="1"/>
        <pt x="230" y="-1" on="0"/>
        <pt x="72" y="176" on="0"/>
        <pt x="57" y="300" on="1"/>
        <pt x="56" y="310" on="0"/>
      </contour>
      <contour>
        <pt x="420" y="637" on="1"/>
        <pt x="404" y="639" on="0"/>
        <pt x="380" y="639" on="1"/>
        <pt x="333" y="639" on="0"/>
        <pt x="290" y="614" on="1"/>
        <pt x="227" y="579" on="0"/>
        <pt x="153" y="438" on="0"/>
        <pt x="153" y="344" on="1"/>
        <pt x="153" y="231" on="0"/>
        <pt x="266" y="75" on="0"/>
        <pt x="355" y="58" on="1"/>
        <pt x="363" y="56" on="0"/>
        <pt x="388" y="56" on="1"/>
        <pt x="431" y="56" on="0"/>
        <pt x="469" y="72" on="1"/>
        <pt x="540" y="102" on="0"/>
        <pt x="624" y="246" on="0"/>
        <pt x="624" y="345" on="1"/>
        <pt x="624" y="451" on="0"/>
        <pt x="575" y="529" on="1"/>
        <pt x="517" y="620" on="0"/>
      </contour>
      <contour>
        <pt x="209" y="299" on="1"/>
        <pt x="209" y="397" on="1"/>
        <pt x="568" y="397" on="1"/>
        <pt x="568" y="299" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 8 values pushed */
          50 49 39 29 20 4 3 48
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="U" xMin="87" yMin="-22" xMax="600" yMax="694">
      <contour>
        <pt x="87" y="450" on="1"/>
        <pt x="87" y="694" on="1"/>
        <pt x="191" y="694" on="1"/>
        <pt x="191" y="449" on="1"/>
        <pt x="192" y="203" on="0"/>
        <pt x="193" y="194" on="1"/>
        <pt x="203" y="130" on="0"/>
        <pt x="239" y="94" on="1"/>
        <pt x="281" y="49" on="0"/>
        <pt x="347" y="49" on="1"/>
        <pt x="406" y="49" on="0"/>
        <pt x="489" y="122" on="0"/>
        <pt x="501" y="178" on="1"/>
        <pt x="505" y="195" on="0"/>
        <pt x="506" y="241" on="0"/>
        <pt x="507" y="449" on="1"/>
        <pt x="507" y="694" on="1"/>
        <pt x="600" y="694" on="1"/>
        <pt x="600" y="450" on="1"/>
        <pt x="600" y="414" on="0"/>
        <pt x="600" y="356" on="1"/>
        <pt x="599" y="198" on="0"/>
        <pt x="595" y="181" on="1"/>
        <pt x="594" y="178" on="0"/>
        <pt x="594" y="177" on="1"/>
        <pt x="580" y="115" on="0"/>
        <pt x="496" y="17" on="0"/>
        <pt x="439" y="-4" on="1"/>
        <pt x="394" y="-22" on="0"/>
        <pt x="345" y="-22" on="1"/>
        <pt x="266" y="-22" on="0"/>
        <pt x="142" y="60" on="0"/>
        <pt x="112" y="123" on="1"/>
        <pt x="97" y="153" on="0"/>
        <pt x="89" y="196" on="1"/>
        <pt x="88" y="205" on="0"/>
      </contour>
      <instructions><assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          34
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 17 values pushed */
          2 1 0 0 13 75 0 1 1 3 91 0 3 3 22 3 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          36
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 17 values pushed */
          2 1 0 0 13 75 0 1 1 3 91 0 3 3 25 3 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          40
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 17 values pushed */
          2 1 0 0 15 75 0 1 1 3 91 0 3 3 25 3 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 14 values pushed */
          0 1 0 3 1 3 95 2 1 0 0 15 0 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 7 values pushed */
          43 22 38 17 4 6 24
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Upsilon" xMin="55" yMin="0" xMax="722" yMax="716">
      <contour>
        <pt x="219" y="716" on="1"/>
        <pt x="353" y="716" on="0"/>
        <pt x="389" y="510" on="1"/>
        <pt x="390" y="511" on="0"/>
        <pt x="392" y="527" on="1"/>
        <pt x="426" y="709" on="0"/>
        <pt x="552" y="716" on="1"/>
        <pt x="557" y="716" on="1"/>
        <pt x="622" y="716" on="0"/>
        <pt x="717" y="629" on="0"/>
        <pt x="722" y="565" on="1"/>
        <pt x="722" y="555" on="1"/>
        <pt x="629" y="555" on="1"/>
        <pt x="629" y="563" on="1"/>
        <pt x="627" y="593" on="0"/>
        <pt x="587" y="638" on="0"/>
        <pt x="557" y="638" on="1"/>
        <pt x="534" y="638" on="0"/>
        <pt x="515" y="630" on="1"/>
        <pt x="455" y="602" on="0"/>
        <pt x="445" y="473" on="1"/>
        <pt x="441" y="438" on="0"/>
        <pt x="441" y="202" on="1"/>
        <pt x="441" y="0" on="1"/>
        <pt x="337" y="0" on="1"/>
        <pt x="337" y="202" on="1"/>
        <pt x="337" y="453" on="0"/>
        <pt x="331" y="497" on="1"/>
        <pt x="313" y="634" on="0"/>
        <pt x="226" y="638" on="1"/>
        <pt x="194" y="638" on="0"/>
        <pt x="178" y="622" on="1"/>
        <pt x="151" y="600" on="0"/>
        <pt x="148" y="563" on="1"/>
        <pt x="148" y="555" on="1"/>
        <pt x="55" y="555" on="1"/>
        <pt x="55" y="565" on="1"/>
        <pt x="57" y="601" on="0"/>
        <pt x="95" y="666" on="0"/>
        <pt x="122" y="684" on="1"/>
        <pt x="165" y="716" on="0"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 4 values pushed */
          23 0 1 48
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="V" xMin="14" yMin="0" xMax="652" yMax="694">
      <contour>
        <pt x="14" y="692" on="1"/>
        <pt x="14" y="694" on="0"/>
        <pt x="68" y="694" on="1"/>
        <pt x="122" y="694" on="1"/>
        <pt x="146" y="633" on="1"/>
        <pt x="325" y="165" on="0"/>
        <pt x="339" y="90" on="1"/>
        <pt x="340" y="87" on="0"/>
        <pt x="341" y="87" on="1"/>
        <pt x="341" y="92" on="0"/>
        <pt x="354" y="137" on="1"/>
        <pt x="390" y="252" on="0"/>
        <pt x="530" y="619" on="1"/>
        <pt x="558" y="694" on="1"/>
        <pt x="605" y="694" on="1"/>
        <pt x="652" y="694" on="0"/>
        <pt x="652" y="692" on="1"/>
        <pt x="650" y="690" on="0"/>
        <pt x="395" y="18" on="0"/>
        <pt x="390" y="10" on="1"/>
        <pt x="387" y="0" on="1"/>
        <pt x="279" y="0" on="1"/>
        <pt x="276" y="10" on="1"/>
        <pt x="271" y="18" on="0"/>
        <pt x="16" y="690" on="0"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 6 values pushed */
          6 1 2 0 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          34
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 12 values pushed */
          1 1 0 0 13 75 0 2 2 14 2 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          36
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 12 values pushed */
          1 1 0 0 13 75 0 2 2 17 2 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 12 values pushed */
          1 1 0 0 15 75 0 2 2 17 2 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 6 values pushed */
          21 42 18 3 6 23
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="W" xMin="14" yMin="0" xMax="929" yMax="694">
      <contour>
        <pt x="14" y="693" on="1"/>
        <pt x="14" y="694" on="0"/>
        <pt x="64" y="694" on="1"/>
        <pt x="115" y="694" on="1"/>
        <pt x="117" y="685" on="0"/>
        <pt x="139" y="610" on="0"/>
        <pt x="168" y="510" on="0"/>
        <pt x="174" y="488" on="1"/>
        <pt x="270" y="143" on="0"/>
        <pt x="270" y="90" on="1"/>
        <pt x="271" y="85" on="1"/>
        <pt x="272" y="86" on="0"/>
        <pt x="272" y="92" on="1"/>
        <pt x="272" y="101" on="0"/>
        <pt x="280" y="147" on="1"/>
        <pt x="305" y="267" on="0"/>
        <pt x="405" y="616" on="1"/>
        <pt x="427" y="694" on="1"/>
        <pt x="524" y="694" on="1"/>
        <pt x="553" y="590" on="1"/>
        <pt x="672" y="174" on="0"/>
        <pt x="681" y="95" on="1"/>
        <pt x="682" y="84" on="1"/>
        <pt x="684" y="95" on="1"/>
        <pt x="693" y="177" on="0"/>
        <pt x="814" y="600" on="1"/>
        <pt x="820" y="621" on="0"/>
        <pt x="834" y="669" on="0"/>
        <pt x="838" y="680" on="1"/>
        <pt x="841" y="692" on="1"/>
        <pt x="841" y="694" on="0"/>
        <pt x="929" y="694" on="0"/>
        <pt x="929" y="693" on="1"/>
        <pt x="929" y="691" on="0"/>
        <pt x="829" y="346" on="1"/>
        <pt x="730" y="0" on="1"/>
        <pt x="679" y="0" on="1"/>
        <pt x="628" y="1" on="1"/>
        <pt x="606" y="75" on="1"/>
        <pt x="478" y="524" on="0"/>
        <pt x="470" y="600" on="1"/>
        <pt x="469" y="611" on="1"/>
        <pt x="467" y="600" on="1"/>
        <pt x="458" y="518" on="0"/>
        <pt x="338" y="101" on="1"/>
        <pt x="310" y="0" on="1"/>
        <pt x="213" y="0" on="1"/>
        <pt x="114" y="346" on="1"/>
        <pt x="14" y="691" on="0"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 8 values pushed */
          41 22 9 3 3 0 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          34
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 15 values pushed */
          2 1 5 3 0 0 13 75 4 1 3 3 14 3 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          36
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 15 values pushed */
          2 1 5 3 0 0 13 75 4 1 3 3 17 3 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 15 values pushed */
          2 1 5 3 0 0 15 75 4 1 3 3 17 3 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 17 values pushed */
          3 0 46 45 37 35 31 29 18 17 0 48 3 48 6 6 20
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="X" xMin="14" yMin="0" xMax="652" yMax="694">
      <contour>
        <pt x="14" y="0" on="1"/>
        <pt x="79" y="92" on="1"/>
        <pt x="144" y="183" on="0"/>
        <pt x="210" y="275" on="1"/>
        <pt x="275" y="367" on="1"/>
        <pt x="153" y="528" on="1"/>
        <pt x="123" y="567" on="0"/>
        <pt x="61" y="650" on="0"/>
        <pt x="29" y="692" on="0"/>
        <pt x="28" y="694" on="1"/>
        <pt x="150" y="694" on="1"/>
        <pt x="228" y="584" on="1"/>
        <pt x="315" y="463" on="0"/>
        <pt x="316" y="461" on="1"/>
        <pt x="326" y="448" on="1"/>
        <pt x="497" y="694" on="1"/>
        <pt x="610" y="694" on="1"/>
        <pt x="609" y="692" on="1"/>
        <pt x="606" y="689" on="0"/>
        <pt x="492" y="528" on="1"/>
        <pt x="440" y="454" on="0"/>
        <pt x="377" y="366" on="0"/>
        <pt x="378" y="366" on="1"/>
        <pt x="378" y="365" on="0"/>
        <pt x="515" y="182" on="1"/>
        <pt x="652" y="0" on="1"/>
        <pt x="531" y="0" on="1"/>
        <pt x="429" y="146" on="1"/>
        <pt x="326" y="292" on="1"/>
        <pt x="326" y="293" on="0"/>
        <pt x="272" y="214" on="0"/>
        <pt x="226" y="146" on="1"/>
        <pt x="128" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 8 values pushed */
          28 14 4 3 2 0 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          34
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 14 values pushed */
          1 1 0 0 13 75 4 3 2 2 2 14 2 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          36
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 14 values pushed */
          1 1 0 0 13 75 4 3 2 2 2 17 2 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 14 values pushed */
          1 1 0 0 15 75 4 3 2 2 2 17 2 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 12 values pushed */
          0 0 0 32 0 32 25 21 40 5 6 23
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Xi" xMin="42" yMin="0" xMax="624" yMax="688">
      <contour>
        <pt x="47" y="600" on="1"/>
        <pt x="47" y="688" on="1"/>
        <pt x="619" y="688" on="1"/>
        <pt x="619" y="600" on="1"/>
      </contour>
      <contour>
        <pt x="111" y="314" on="1"/>
        <pt x="111" y="401" on="1"/>
        <pt x="555" y="401" on="1"/>
        <pt x="555" y="314" on="1"/>
      </contour>
      <contour>
        <pt x="42" y="0" on="1"/>
        <pt x="42" y="88" on="1"/>
        <pt x="624" y="88" on="1"/>
        <pt x="624" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 8 values pushed */
          9 8 5 4 1 0 3 48
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Y" xMin="4" yMin="0" xMax="663" yMax="694">
      <contour>
        <pt x="4" y="693" on="1"/>
        <pt x="64" y="694" on="1"/>
        <pt x="125" y="694" on="1"/>
        <pt x="174" y="621" on="1"/>
        <pt x="335" y="378" on="0"/>
        <pt x="340" y="364" on="1"/>
        <pt x="341" y="362" on="1"/>
        <pt x="409" y="480" on="0"/>
        <pt x="549" y="680" on="1"/>
        <pt x="558" y="694" on="1"/>
        <pt x="663" y="694" on="1"/>
        <pt x="662" y="693" on="0"/>
        <pt x="647" y="670" on="0"/>
        <pt x="620" y="631" on="0"/>
        <pt x="587" y="582" on="0"/>
        <pt x="543" y="516" on="0"/>
        <pt x="521" y="483" on="1"/>
        <pt x="383" y="277" on="1"/>
        <pt x="383" y="0" on="1"/>
        <pt x="282" y="0" on="1"/>
        <pt x="282" y="278" on="1"/>
        <pt x="143" y="485" on="1"/>
        <pt x="112" y="531" on="0"/>
        <pt x="38" y="642" on="0"/>
        <pt x="21" y="668" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 8 values pushed */
          20 17 5 3 2 0 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          34
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 12 values pushed */
          1 1 0 0 13 75 0 2 2 14 2 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          36
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 12 values pushed */
          1 1 0 0 13 75 0 2 2 17 2 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 12 values pushed */
          1 1 0 0 15 75 0 2 2 17 2 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 6 values pushed */
          24 23 32 3 6 23
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Z" xMin="55" yMin="0" xMax="560" yMax="694">
      <contour>
        <pt x="69" y="617" on="1"/>
        <pt x="69" y="694" on="1"/>
        <pt x="555" y="694" on="1"/>
        <pt x="555" y="643" on="1"/>
        <pt x="373" y="362" on="1"/>
        <pt x="190" y="81" on="0"/>
        <pt x="190" y="79" on="1"/>
        <pt x="234" y="79" on="1"/>
        <pt x="244" y="79" on="0"/>
        <pt x="300" y="80" on="0"/>
        <pt x="389" y="81" on="0"/>
        <pt x="419" y="81" on="1"/>
        <pt x="560" y="81" on="1"/>
        <pt x="560" y="0" on="1"/>
        <pt x="55" y="0" on="1"/>
        <pt x="55" y="53" on="1"/>
        <pt x="237" y="334" on="1"/>
        <pt x="420" y="615" on="0"/>
        <pt x="420" y="617" on="1"/>
        <pt x="413" y="618" on="0"/>
        <pt x="387" y="618" on="1"/>
        <pt x="380" y="618" on="0"/>
        <pt x="287" y="617" on="0"/>
        <pt x="245" y="617" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 10 values pushed */
          3 1 3 0 15 1 2 1 2 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          34
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 22 values pushed */
          4 1 3 3 0 89 0 0 0 13 75 0 1 1 2 89 0 2 2 14 2 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          36
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 22 values pushed */
          4 1 3 3 0 89 0 0 0 13 75 0 1 1 2 89 0 2 2 17 2 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 22 values pushed */
          4 1 3 3 0 89 0 0 0 15 75 0 1 1 2 89 0 2 2 17 2 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 12 values pushed */
          0 0 0 23 0 19 17 115 17 5 6 23
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="a" xMin="38" yMin="-10" xMax="407" yMax="460">
      <contour>
        <pt x="91" y="426" on="1"/>
        <pt x="156" y="460" on="0"/>
        <pt x="227" y="460" on="1"/>
        <pt x="261" y="460" on="0"/>
        <pt x="267" y="459" on="1"/>
        <pt x="330" y="447" on="0"/>
        <pt x="368" y="400" on="1"/>
        <pt x="398" y="366" on="0"/>
        <pt x="406" y="315" on="1"/>
        <pt x="407" y="306" on="0"/>
        <pt x="407" y="152" on="1"/>
        <pt x="407" y="0" on="1"/>
        <pt x="317" y="0" on="1"/>
        <pt x="317" y="39" on="1"/>
        <pt x="306" y="32" on="1"/>
        <pt x="244" y="-10" on="0"/>
        <pt x="159" y="-10" on="1"/>
        <pt x="137" y="-10" on="0"/>
        <pt x="129" y="-8" on="1"/>
        <pt x="88" y="3" on="0"/>
        <pt x="38" y="75" on="0"/>
        <pt x="38" y="126" on="1"/>
        <pt x="38" y="142" on="0"/>
        <pt x="39" y="146" on="1"/>
        <pt x="52" y="187" on="0"/>
        <pt x="105" y="213" on="1"/>
        <pt x="177" y="247" on="0"/>
        <pt x="295" y="252" on="1"/>
        <pt x="314" y="252" on="1"/>
        <pt x="314" y="277" on="1"/>
        <pt x="314" y="305" on="0"/>
        <pt x="313" y="310" on="1"/>
        <pt x="308" y="343" on="0"/>
        <pt x="265" y="387" on="0"/>
        <pt x="236" y="387" on="1"/>
        <pt x="161" y="387" on="0"/>
        <pt x="97" y="346" on="1"/>
        <pt x="94" y="344" on="0"/>
        <pt x="87" y="339" on="0"/>
        <pt x="85" y="338" on="1"/>
        <pt x="83" y="337" on="1"/>
        <pt x="82" y="355" on="1"/>
        <pt x="80" y="373" on="0"/>
        <pt x="77" y="413" on="0"/>
        <pt x="77" y="417" on="1"/>
      </contour>
      <contour>
        <pt x="124" y="126" on="1"/>
        <pt x="124" y="99" on="0"/>
        <pt x="174" y="66" on="0"/>
        <pt x="208" y="66" on="1"/>
        <pt x="244" y="66" on="0"/>
        <pt x="298" y="98" on="0"/>
        <pt x="309" y="124" on="1"/>
        <pt x="314" y="137" on="0"/>
        <pt x="314" y="166" on="1"/>
        <pt x="314" y="186" on="1"/>
        <pt x="303" y="186" on="1"/>
        <pt x="240" y="184" on="0"/>
        <pt x="188" y="172" on="1"/>
        <pt x="152" y="163" on="0"/>
        <pt x="124" y="144" on="0"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 6 values pushed */
          13 1 1 5 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          23
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 30 values pushed */
          0 3 0 6 5 3 6 99 0 4 4 0 91 0 0 0 24 75 0 5 5 1 91 2 1
          1 1 14 1 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          34
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 34 values pushed */
          0 3 0 6 5 3 6 99 0 4 4 0 91 0 0 0 24 75 0 1 1 14 75 0 5
          5 2 91 0 2 2 25 2 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          47
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 34 values pushed */
          0 3 0 6 5 3 6 99 0 4 4 0 91 0 0 0 24 75 0 1 1 17 75 0 5
          5 2 91 0 2 2 25 2 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 32 values pushed */
          0 0 0 4 3 0 4 99 0 3 0 6 5 3 6 99 0 1 1 17 75 0 5 5 2
          91 0 2 2 25 2 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 10 values pushed */
          37 44 37 41 35 24 33 7 6 27
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="acutecomb" xMin="-301" yMin="527" xMax="-84" yMax="694">
      <contour>
        <pt x="-239" y="612" on="1"/>
        <pt x="-177" y="694" on="1"/>
        <pt x="-84" y="694" on="1"/>
        <pt x="-86" y="692" on="1"/>
        <pt x="-86" y="691" on="0"/>
        <pt x="-104" y="670" on="0"/>
        <pt x="-142" y="625" on="0"/>
        <pt x="-157" y="608" on="1"/>
        <pt x="-226" y="527" on="1"/>
        <pt x="-264" y="527" on="1"/>
        <pt x="-301" y="528" on="1"/>
        <pt x="-293" y="539" on="1"/>
        <pt x="-285" y="550" on="0"/>
        <pt x="-252" y="594" on="0"/>
      </contour>
      <instructions><assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          36
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 11 values pushed */
          0 1 0 1 115 0 0 0 13 0 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 11 values pushed */
          0 1 0 1 115 0 0 0 15 0 76
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 5 values pushed */
          38 17 2 6 22
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="ampersand" xMin="42" yMin="-22" xMax="702" yMax="716">
      <contour>
        <pt x="700" y="-7" on="1"/>
        <pt x="649" y="-22" on="0"/>
        <pt x="586" y="-22" on="1"/>
        <pt x="564" y="-22" on="0"/>
        <pt x="548" y="-20" on="1"/>
        <pt x="487" y="-10" on="0"/>
        <pt x="434" y="26" on="1"/>
        <pt x="421" y="34" on="1"/>
        <pt x="414" y="31" on="0"/>
        <pt x="372" y="9" on="0"/>
        <pt x="364" y="6" on="1"/>
        <pt x="296" y="-22" on="0"/>
        <pt x="226" y="-22" on="1"/>
        <pt x="200" y="-22" on="0"/>
        <pt x="183" y="-18" on="1"/>
        <pt x="140" y="-9" on="0"/>
        <pt x="72" y="47" on="0"/>
        <pt x="55" y="87" on="1"/>
        <pt x="42" y="117" on="0"/>
        <pt x="42" y="152" on="1"/>
        <pt x="42" y="225" on="0"/>
        <pt x="95" y="276" on="1"/>
        <pt x="109" y="290" on="0"/>
        <pt x="144" y="317" on="1"/>
        <pt x="184" y="348" on="1"/>
        <pt x="178" y="365" on="1"/>
        <pt x="156" y="430" on="0"/>
        <pt x="156" y="502" on="1"/>
        <pt x="156" y="611" on="0"/>
        <pt x="209" y="672" on="1"/>
        <pt x="248" y="716" on="0"/>
        <pt x="302" y="716" on="1"/>
        <pt x="365" y="716" on="0"/>
        <pt x="444" y="616" on="0"/>
        <pt x="444" y="549" on="1"/>
        <pt x="444" y="531" on="0"/>
        <pt x="442" y="523" on="1"/>
        <pt x="426" y="446" on="0"/>
        <pt x="304" y="348" on="1"/>
        <pt x="287" y="334" on="1"/>
        <pt x="312" y="284" on="0"/>
        <pt x="372" y="207" on="1"/>
        <pt x="428" y="139" on="0"/>
        <pt x="432" y="139" on="0"/>
        <pt x="467" y="174" on="0"/>
        <pt x="479" y="189" on="1"/>
        <pt x="549" y="274" on="0"/>
        <pt x="583" y="394" on="1"/>
        <pt x="584" y="398" on="0"/>
        <pt x="586" y="404" on="1"/>
        <pt x="587" y="408" on="0"/>
        <pt x="587" y="409" on="1"/>
        <pt x="588" y="409" on="0"/>
        <pt x="664" y="388" on="0"/>
        <pt x="665" y="388" on="1"/>
        <pt x="664" y="386" on="1"/>
        <pt x="664" y="384" on="0"/>
        <pt x="662" y="378" on="0"/>
        <pt x="661" y="375" on="1"/>
        <pt x="613" y="208" on="0"/>
        <pt x="502" y="98" on="1"/>
        <pt x="491" y="87" on="1"/>
        <pt x="536" y="57" on="0"/>
        <pt x="584" y="57" on="1"/>
        <pt x="656" y="57" on="0"/>
        <pt x="700" y="75" on="1"/>
        <pt x="702" y="75" on="0"/>
        <pt x="702" y="-7" on="0"/>
      </contour>
      <contour>
        <pt x="359" y="552" on="1"/>
        <pt x="359" y="591" on="0"/>
        <pt x="330" y="640" on="0"/>
        <pt x="302" y="640" on="1"/>
        <pt x="260" y="640" on="0"/>
        <pt x="242" y="593" on="1"/>
        <pt x="233" y="571" on="0"/>
        <pt x="233" y="535" on="1"/>
        <pt x="236" y="474" on="0"/>
        <pt x="253" y="417" on="1"/>
        <pt x="257" y="407" on="1"/>
        <pt x="271" y="419" on="1"/>
        <pt x="312" y="454" on="0"/>
        <pt x="330" y="479" on="1"/>
        <pt x="350" y="503" on="0"/>
        <pt x="358" y="530" on="1"/>
        <pt x="359" y="535" on="0"/>
      </contour>
      <contour>
        <pt x="345" y="102" on="1"/>
        <pt x="264" y="187" on="0"/>
        <pt x="216" y="277" on="1"/>
        <pt x="215" y="277" on="0"/>
        <pt x="192" y="257" on="0"/>
        <pt x="167" y="237" on="0"/>
        <pt x="165" y="236" on="1"/>
        <pt x="135" y="208" on="0"/>
        <pt x="135" y="159" on="1"/>
        <pt x="135" y="125" on="0"/>
        <pt x="170" y="70" on="0"/>
        <pt x="198" y="61" on="1"/>
        <pt x="207" y="58" on="0"/>
        <pt x="227" y="58" on="1"/>
        <pt x="290" y="58" on="0"/>
        <pt x="357" y="89" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 18 values pushed */
          100 87 83 78 65 61 49 39 24 9 3 4 7 1 0 3 2 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          34
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 23 values pushed */
          0 4 4 2 91 0 2 2 21 75 5 1 3 3 0 91 1 1 0 0 22 0 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          36
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 23 values pushed */
          0 4 4 2 91 0 2 2 21 75 5 1 3 3 0 91 1 1 0 0 25 0 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          40
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 23 values pushed */
          0 4 4 2 91 0 2 2 23 75 5 1 3 3 0 91 1 1 0 0 25 0 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          45
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 20 values pushed */
          5 1 3 1 1 0 3 0 95 0 4 4 2 91 0 2 2 23 4 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 27 values pushed */
          0 2 0 4 3 2 4 99 5 1 3 0 0 3 87 5 1 3 3 0 91 1 1 0 3
          0 79
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 13 values pushed */
          99 97 72 70 64 62 32 30 40 33 6 6 22
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="asciicircum" xMin="79" yMin="527" xMax="420" yMax="694">
      <contour>
        <pt x="146" y="612" on="1"/>
        <pt x="212" y="694" on="1"/>
        <pt x="287" y="694" on="1"/>
        <pt x="353" y="612" on="1"/>
        <pt x="417" y="532" on="0"/>
        <pt x="420" y="529" on="1"/>
        <pt x="421" y="528" on="0"/>
        <pt x="418" y="527" on="1"/>
        <pt x="414" y="527" on="0"/>
        <pt x="383" y="527" on="1"/>
        <pt x="345" y="527" on="1"/>
        <pt x="281" y="601" on="0"/>
        <pt x="250" y="639" on="1"/>
        <pt x="244" y="633" on="0"/>
        <pt x="199" y="580" on="1"/>
        <pt x="154" y="527" on="1"/>
        <pt x="116" y="527" on="1"/>
        <pt x="79" y="528" on="0"/>
        <pt x="79" y="529" on="1"/>
        <pt x="82" y="532" on="0"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 6 values pushed */
          12 1 1 0 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          36
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 12 values pushed */
          2 1 1 0 1 115 0 0 0 13 0 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 12 values pushed */
          2 1 1 0 1 115 0 0 0 15 0 76
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 6 values pushed */
          37 23 17 3 6 23
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="asciitilde" xMin="83" yMin="193" xMax="416" yMax="327">
      <contour>
        <pt x="83" y="204" on="1"/>
        <pt x="86" y="256" on="0"/>
        <pt x="142" y="327" on="0"/>
        <pt x="186" y="327" on="1"/>
        <pt x="212" y="327" on="0"/>
        <pt x="248" y="300" on="1"/>
        <pt x="282" y="275" on="0"/>
        <pt x="301" y="271" on="1"/>
        <pt x="305" y="270" on="0"/>
        <pt x="312" y="270" on="1"/>
        <pt x="337" y="270" on="0"/>
        <pt x="340" y="315" on="1"/>
        <pt x="340" y="327" on="1"/>
        <pt x="416" y="327" on="1"/>
        <pt x="416" y="316" on="1"/>
        <pt x="413" y="264" on="0"/>
        <pt x="358" y="193" on="0"/>
        <pt x="315" y="193" on="1"/>
        <pt x="288" y="193" on="0"/>
        <pt x="251" y="220" on="1"/>
        <pt x="217" y="245" on="0"/>
        <pt x="198" y="249" on="1"/>
        <pt x="194" y="250" on="0"/>
        <pt x="187" y="250" on="1"/>
        <pt x="162" y="250" on="0"/>
        <pt x="159" y="205" on="1"/>
        <pt x="159" y="193" on="1"/>
        <pt x="83" y="193" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 35 values pushed */
          0 1 4 3 1 87 2 1 0 0 4 3 0 4 99 0 1 1 3 92 5 1 3 1 3
          80 18 21 35 18 21 34 6 6 26
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="asterisk" xMin="63" yMin="306" xMax="436" yMax="750">
      <contour>
        <pt x="208" y="717" on="1"/>
        <pt x="211" y="731" on="0"/>
        <pt x="234" y="750" on="0"/>
        <pt x="250" y="750" on="1"/>
        <pt x="265" y="750" on="0"/>
        <pt x="289" y="731" on="0"/>
        <pt x="291" y="717" on="1"/>
        <pt x="285" y="591" on="1"/>
        <pt x="377" y="656" on="1"/>
        <pt x="384" y="659" on="0"/>
        <pt x="393" y="659" on="1"/>
        <pt x="410" y="659" on="0"/>
        <pt x="436" y="635" on="0"/>
        <pt x="436" y="616" on="1"/>
        <pt x="436" y="600" on="0"/>
        <pt x="425" y="589" on="1"/>
        <pt x="421" y="584" on="0"/>
        <pt x="368" y="556" on="1"/>
        <pt x="316" y="528" on="1"/>
        <pt x="339" y="515" on="0"/>
        <pt x="368" y="500" on="1"/>
        <pt x="421" y="472" on="0"/>
        <pt x="425" y="467" on="1"/>
        <pt x="436" y="456" on="0"/>
        <pt x="436" y="440" on="1"/>
        <pt x="436" y="421" on="0"/>
        <pt x="410" y="396" on="0"/>
        <pt x="393" y="396" on="1"/>
        <pt x="387" y="396" on="0"/>
        <pt x="377" y="400" on="1"/>
        <pt x="285" y="465" on="1"/>
        <pt x="286" y="437" on="1"/>
        <pt x="288" y="409" on="0"/>
        <pt x="291" y="350" on="0"/>
        <pt x="291" y="347" on="1"/>
        <pt x="291" y="328" on="0"/>
        <pt x="267" y="306" on="0"/>
        <pt x="250" y="306" on="1"/>
        <pt x="234" y="306" on="0"/>
        <pt x="210" y="325" on="0"/>
        <pt x="208" y="339" on="1"/>
        <pt x="214" y="465" on="1"/>
        <pt x="122" y="400" on="1"/>
        <pt x="114" y="397" on="0"/>
        <pt x="106" y="397" on="1"/>
        <pt x="89" y="397" on="0"/>
        <pt x="63" y="421" on="0"/>
        <pt x="63" y="440" on="1"/>
        <pt x="63" y="456" on="0"/>
        <pt x="74" y="467" on="1"/>
        <pt x="78" y="472" on="0"/>
        <pt x="131" y="500" on="1"/>
        <pt x="183" y="528" on="1"/>
        <pt x="160" y="541" on="0"/>
        <pt x="131" y="556" on="1"/>
        <pt x="78" y="584" on="0"/>
        <pt x="74" y="589" on="1"/>
        <pt x="63" y="600" on="0"/>
        <pt x="63" y="616" on="1"/>
        <pt x="63" y="635" on="0"/>
        <pt x="89" y="660" on="0"/>
        <pt x="106" y="660" on="1"/>
        <pt x="112" y="660" on="0"/>
        <pt x="122" y="656" on="1"/>
        <pt x="214" y="591" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 56 values pushed */
          6 0 2 1 0 64 52 41 31 30 18 7 7 2 1 40 1 3 2 3 74 0 0 1 3
          0 87 5 1 1 4 1 2 3 1 2 99 0 0 0 3 91 0 3 0 3 79 31 37 41
          31 37 34 6 6 26
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="at" xMin="56" yMin="-11" xMax="612" yMax="704">
      <contour>
        <pt x="388" y="-11" on="1"/>
        <pt x="249" y="-11" on="0"/>
        <pt x="56" y="200" on="0"/>
        <pt x="56" y="347" on="1"/>
        <pt x="56" y="410" on="0"/>
        <pt x="74" y="466" on="1"/>
        <pt x="107" y="566" on="0"/>
        <pt x="263" y="695" on="0"/>
        <pt x="362" y="704" on="1"/>
        <pt x="378" y="704" on="1"/>
        <pt x="458" y="704" on="0"/>
        <pt x="511" y="667" on="1"/>
        <pt x="535" y="651" on="0"/>
        <pt x="551" y="627" on="1"/>
        <pt x="608" y="547" on="0"/>
        <pt x="611" y="376" on="1"/>
        <pt x="611" y="320" on="0"/>
        <pt x="607" y="299" on="1"/>
        <pt x="595" y="229" on="0"/>
        <pt x="508" y="130" on="0"/>
        <pt x="449" y="119" on="1"/>
        <pt x="442" y="118" on="0"/>
        <pt x="422" y="118" on="1"/>
        <pt x="401" y="118" on="0"/>
        <pt x="395" y="119" on="1"/>
        <pt x="326" y="133" on="0"/>
        <pt x="232" y="260" on="0"/>
        <pt x="232" y="347" on="1"/>
        <pt x="232" y="402" on="0"/>
        <pt x="254" y="455" on="1"/>
        <pt x="300" y="556" on="0"/>
        <pt x="395" y="575" on="1"/>
        <pt x="401" y="576" on="0"/>
        <pt x="422" y="576" on="1"/>
        <pt x="460" y="576" on="0"/>
        <pt x="483" y="564" on="1"/>
        <pt x="488" y="562" on="0"/>
        <pt x="488" y="563" on="1"/>
        <pt x="486" y="567" on="0"/>
        <pt x="483" y="572" on="1"/>
        <pt x="448" y="629" on="0"/>
        <pt x="387" y="629" on="1"/>
        <pt x="368" y="629" on="0"/>
        <pt x="338" y="623" on="1"/>
        <pt x="263" y="603" on="0"/>
        <pt x="160" y="477" on="0"/>
        <pt x="147" y="388" on="1"/>
        <pt x="146" y="378" on="0"/>
        <pt x="146" y="347" on="1"/>
        <pt x="146" y="234" on="0"/>
        <pt x="272" y="77" on="0"/>
        <pt x="365" y="66" on="1"/>
        <pt x="376" y="65" on="0"/>
        <pt x="400" y="65" on="1"/>
        <pt x="465" y="68" on="0"/>
        <pt x="517" y="86" on="1"/>
        <pt x="532" y="91" on="1"/>
        <pt x="612" y="91" on="1"/>
        <pt x="598" y="76" on="1"/>
        <pt x="577" y="55" on="0"/>
        <pt x="550" y="37" on="1"/>
        <pt x="476" y="-11" on="0"/>
      </contour>
      <contour>
        <pt x="435" y="499" on="1"/>
        <pt x="425" y="501" on="0"/>
        <pt x="421" y="501" on="1"/>
        <pt x="400" y="501" on="0"/>
        <pt x="380" y="487" on="1"/>
        <pt x="323" y="447" on="0"/>
        <pt x="323" y="347" on="1"/>
        <pt x="323" y="299" on="0"/>
        <pt x="336" y="268" on="1"/>
        <pt x="350" y="232" on="0"/>
        <pt x="396" y="193" on="0"/>
        <pt x="422" y="193" on="1"/>
        <pt x="445" y="193" on="0"/>
        <pt x="463" y="207" on="1"/>
        <pt x="520" y="247" on="0"/>
        <pt x="520" y="347" on="1"/>
        <pt x="520" y="395" on="0"/>
        <pt x="507" y="426" on="1"/>
        <pt x="482" y="490" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 77 values pushed */
          35 1 7 3 1 74 0 6 2 5 2 6 5 112 0 3 0 7 8 3 7 99 0 8 0
          2 6 8 2 99 0 4 4 1 91 0 1 1 23 75 0 5 5 0 91 9 1 0 0 25
          0 76 1 0 74 72 65 63 57 56 54 52 42 40 34 31 23 20 10 8 0 61 1 61 10
          6 20
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="b" xMin="75" yMin="-11" xMax="482" yMax="694">
      <contour>
        <pt x="166" y="405" on="1"/>
        <pt x="245" y="455" on="0"/>
        <pt x="336" y="455" on="1"/>
        <pt x="361" y="455" on="0"/>
        <pt x="381" y="445" on="1"/>
        <pt x="425" y="423" on="0"/>
        <pt x="482" y="303" on="0"/>
        <pt x="482" y="226" on="1"/>
        <pt x="482" y="170" on="0"/>
        <pt x="470" y="135" on="1"/>
        <pt x="455" y="85" on="0"/>
        <pt x="391" y="11" on="0"/>
        <pt x="350" y="-3" on="1"/>
        <pt x="328" y="-11" on="0"/>
        <pt x="303" y="-11" on="1"/>
        <pt x="234" y="-11" on="0"/>
        <pt x="177" y="32" on="1"/>
        <pt x="175" y="33" on="0"/>
        <pt x="171" y="36" on="0"/>
        <pt x="170" y="37" on="1"/>
        <pt x="168" y="38" on="1"/>
        <pt x="168" y="0" on="1"/>
        <pt x="75" y="0" on="1"/>
        <pt x="75" y="694" on="1"/>
        <pt x="165" y="694" on="1"/>
        <pt x="165" y="550" on="1"/>
      </contour>
      <contour>
        <pt x="168" y="118" on="1"/>
        <pt x="186" y="92" on="0"/>
        <pt x="226" y="66" on="0"/>
        <pt x="258" y="66" on="1"/>
        <pt x="275" y="66" on="0"/>
        <pt x="281" y="67" on="1"/>
        <pt x="334" y="78" on="0"/>
        <pt x="390" y="157" on="0"/>
        <pt x="390" y="285" on="0"/>
        <pt x="339" y="367" on="0"/>
        <pt x="291" y="377" on="1"/>
        <pt x="279" y="379" on="0"/>
        <pt x="265" y="379" on="1"/>
        <pt x="214" y="379" on="0"/>
        <pt x="177" y="342" on="1"/>
        <pt x="168" y="334" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 11 values pushed */
          0 1 5 0 41 26 2 4 5 2 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          21
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 27 values pushed */
          0 3 3 13 75 0 5 5 0 91 0 0 0 24 75 0 4 4 1 91 2 1 1 1 25
          1 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          22
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 31 values pushed */
          0 3 3 13 75 0 5 5 0 91 0 0 0 24 75 0 2 2 14 75 0 4 4 1 91
          0 1 1 25 1 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          23
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 27 values pushed */
          0 3 3 13 75 0 5 5 0 91 0 0 0 24 75 0 4 4 1 91 2 1 1 1 25
          1 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          34
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 31 values pushed */
          0 3 3 13 75 0 5 5 0 91 0 0 0 24 75 0 2 2 14 75 0 4 4 1 91
          0 1 1 25 1 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          36
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 31 values pushed */
          0 3 3 13 75 0 5 5 0 91 0 0 0 24 75 0 2 2 17 75 0 4 4 1 91
          0 1 1 25 1 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          47
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 31 values pushed */
          0 3 3 15 75 0 5 5 0 91 0 0 0 24 75 0 2 2 17 75 0 4 4 1 91
          0 1 1 25 1 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 29 values pushed */
          0 0 0 5 4 0 5 99 0 3 3 15 75 0 2 2 17 75 0 4 4 1 91 0 1
          1 25 1 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 9 values pushed */
          39 36 17 22 42 33 6 6 26
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="bracketleft" xMin="94" yMin="-250" xMax="266" yMax="750">
      <contour>
        <pt x="94" y="-250" on="1"/>
        <pt x="94" y="750" on="1"/>
        <pt x="266" y="750" on="1"/>
        <pt x="266" y="674" on="1"/>
        <pt x="181" y="674" on="1"/>
        <pt x="181" y="-174" on="1"/>
        <pt x="266" y="-174" on="1"/>
        <pt x="266" y="-250" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 37 values pushed */
          0 0 0 1 2 0 1 97 0 2 3 3 2 85 0 2 2 3 89 4 1 3 2 3 77
          0 0 0 7 0 7 17 17 17 5 6 23
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="bracketright" xMin="22" yMin="-250" xMax="194" yMax="750">
      <contour>
        <pt x="22" y="674" on="1"/>
        <pt x="22" y="750" on="1"/>
        <pt x="194" y="750" on="1"/>
        <pt x="194" y="-250" on="1"/>
        <pt x="22" y="-250" on="1"/>
        <pt x="22" y="-174" on="1"/>
        <pt x="107" y="-174" on="1"/>
        <pt x="107" y="674" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 37 values pushed */
          0 0 4 1 3 2 0 3 97 0 2 1 1 2 85 0 2 2 1 89 0 1 2 1 77
          0 0 0 7 0 7 17 17 17 5 6 23
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="c" xMin="34" yMin="-10" xMax="414" yMax="460">
      <contour>
        <pt x="101" y="395" on="1"/>
        <pt x="163" y="460" on="0"/>
        <pt x="245" y="460" on="1"/>
        <pt x="303" y="460" on="0"/>
        <pt x="357" y="448" on="0"/>
        <pt x="399" y="424" on="1"/>
        <pt x="410" y="417" on="0"/>
        <pt x="410" y="415" on="1"/>
        <pt x="396" y="338" on="1"/>
        <pt x="396" y="337" on="0"/>
        <pt x="393" y="339" on="0"/>
        <pt x="390" y="341" on="1"/>
        <pt x="356" y="363" on="0"/>
        <pt x="304" y="381" on="0"/>
        <pt x="258" y="381" on="1"/>
        <pt x="232" y="381" on="0"/>
        <pt x="223" y="379" on="1"/>
        <pt x="177" y="366" on="0"/>
        <pt x="126" y="284" on="0"/>
        <pt x="126" y="224" on="1"/>
        <pt x="126" y="171" on="0"/>
        <pt x="168" y="93" on="0"/>
        <pt x="206" y="77" on="1"/>
        <pt x="227" y="68" on="0"/>
        <pt x="255" y="68" on="1"/>
        <pt x="328" y="68" on="0"/>
        <pt x="394" y="106" on="1"/>
        <pt x="408" y="114" on="1"/>
        <pt x="410" y="93" on="1"/>
        <pt x="411" y="72" on="0"/>
        <pt x="412" y="52" on="1"/>
        <pt x="414" y="32" on="1"/>
        <pt x="412" y="30" on="1"/>
        <pt x="410" y="29" on="0"/>
        <pt x="401" y="25" on="0"/>
        <pt x="398" y="23" on="1"/>
        <pt x="328" y="-10" on="0"/>
        <pt x="252" y="-10" on="1"/>
        <pt x="225" y="-10" on="0"/>
        <pt x="219" y="-9" on="1"/>
        <pt x="142" y="4" on="0"/>
        <pt x="90" y="64" on="1"/>
        <pt x="34" y="131" on="0"/>
        <pt x="34" y="223" on="1"/>
        <pt x="34" y="250" on="0"/>
        <pt x="35" y="258" on="1"/>
        <pt x="47" y="340" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 12 values pushed */
          28 27 8 3 2 1 30 1 3 2 2 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          47
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 21 values pushed */
          0 1 1 0 91 0 0 0 24 75 0 2 2 3 91 0 3 3 25 3 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 19 values pushed */
          0 0 0 1 2 0 1 99 0 2 2 3 91 0 3 3 25 3 76
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 7 values pushed */
          43 40 42 33 4 6 24
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="colon" xMin="90" yMin="0" xMax="188" yMax="444">
      <contour>
        <pt x="90" y="346" on="1"/>
        <pt x="90" y="444" on="1"/>
        <pt x="188" y="444" on="1"/>
        <pt x="188" y="346" on="1"/>
      </contour>
      <contour>
        <pt x="90" y="0" on="1"/>
        <pt x="90" y="98" on="1"/>
        <pt x="188" y="98" on="1"/>
        <pt x="188" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          34
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 23 values pushed */
          4 1 1 1 0 89 0 0 0 16 75 0 2 2 3 89 5 1 3 3 14 3 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          47
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 23 values pushed */
          4 1 1 1 0 89 0 0 0 16 75 0 2 2 3 89 5 1 3 3 17 3 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 21 values pushed */
          0 0 4 1 1 2 0 1 97 0 2 2 3 89 5 1 3 3 17 3 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 18 values pushed */
          4 4 0 0 4 7 4 7 6 5 0 3 0 3 17 6 6 21
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="comma" xMin="89" yMin="-125" xMax="188" yMax="98">
      <contour>
        <pt x="90" y="0" on="1"/>
        <pt x="90" y="98" on="1"/>
        <pt x="188" y="98" on="1"/>
        <pt x="188" y="1" on="1"/>
        <pt x="171" y="-41" on="0"/>
        <pt x="139" y="-125" on="1"/>
        <pt x="89" y="-125" on="1"/>
        <pt x="104" y="-64" on="1"/>
        <pt x="119" y="-3" on="0"/>
        <pt x="120" y="-2" on="1"/>
        <pt x="120" y="0" on="0"/>
        <pt x="105" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 6 values pushed */
          3 1 2 0 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          10
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 18 values pushed */
          0 1 2 2 1 103 0 0 0 2 89 3 1 2 2 14 2 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          34
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 17 values pushed */
          0 1 2 1 115 0 0 0 2 89 3 1 2 2 14 2 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 17 values pushed */
          0 1 2 1 115 0 0 0 2 89 3 1 2 2 17 2 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 11 values pushed */
          0 0 0 11 0 11 19 17 4 6 22
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="d" xMin="33" yMin="-10" xMax="441" yMax="694">
      <contour>
        <pt x="351" y="408" on="1"/>
        <pt x="351" y="694" on="1"/>
        <pt x="441" y="694" on="1"/>
        <pt x="441" y="0" on="1"/>
        <pt x="348" y="0" on="1"/>
        <pt x="348" y="44" on="1"/>
        <pt x="338" y="37" on="1"/>
        <pt x="276" y="-10" on="0"/>
        <pt x="198" y="-10" on="1"/>
        <pt x="177" y="-10" on="0"/>
        <pt x="168" y="-8" on="1"/>
        <pt x="99" y="11" on="0"/>
        <pt x="62" y="90" on="1"/>
        <pt x="33" y="148" on="0"/>
        <pt x="33" y="224" on="1"/>
        <pt x="33" y="247" on="0"/>
        <pt x="39" y="289" on="1"/>
        <pt x="50" y="343" on="0"/>
        <pt x="105" y="424" on="0"/>
        <pt x="142" y="442" on="1"/>
        <pt x="169" y="455" on="0"/>
        <pt x="197" y="455" on="1"/>
        <pt x="275" y="455" on="0"/>
        <pt x="342" y="414" on="1"/>
      </contour>
      <contour>
        <pt x="348" y="337" on="1"/>
        <pt x="334" y="351" on="0"/>
        <pt x="316" y="365" on="0"/>
        <pt x="283" y="378" on="0"/>
        <pt x="263" y="378" on="1"/>
        <pt x="260" y="378" on="0"/>
        <pt x="252" y="379" on="0"/>
        <pt x="251" y="379" on="1"/>
        <pt x="248" y="379" on="0"/>
        <pt x="234" y="376" on="1"/>
        <pt x="182" y="366" on="0"/>
        <pt x="126" y="285" on="0"/>
        <pt x="126" y="220" on="1"/>
        <pt x="126" y="90" on="0"/>
        <pt x="225" y="67" on="1"/>
        <pt x="231" y="66" on="0"/>
        <pt x="250" y="66" on="1"/>
        <pt x="268" y="66" on="0"/>
        <pt x="276" y="68" on="1"/>
        <pt x="315" y="79" on="0"/>
        <pt x="342" y="115" on="1"/>
        <pt x="348" y="124" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 15 values pushed */
          0 1 4 3 45 24 2 5 4 5 1 1 5 3 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          23
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 27 values pushed */
          0 0 0 13 75 0 4 4 3 91 0 3 3 24 75 0 5 5 1 91 2 1 1 1 14
          1 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          34
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 31 values pushed */
          0 0 0 13 75 0 4 4 3 91 0 3 3 24 75 0 1 1 14 75 0 5 5 2 91
          0 2 2 25 2 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          36
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 31 values pushed */
          0 0 0 13 75 0 4 4 3 91 0 3 3 24 75 0 1 1 17 75 0 5 5 2 91
          0 2 2 25 2 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          47
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 31 values pushed */
          0 0 0 15 75 0 4 4 3 91 0 3 3 24 75 0 1 1 17 75 0 5 5 2 91
          0 2 2 25 2 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 29 values pushed */
          0 3 0 4 5 3 4 99 0 0 0 15 75 0 1 1 17 75 0 5 5 2 91 0 2
          2 25 2 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 9 values pushed */
          58 21 43 35 17 17 6 6 26
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="dollar" xMin="44" yMin="-56" xMax="444" yMax="750">
      <contour>
        <pt x="55" y="509" on="1"/>
        <pt x="55" y="577" on="0"/>
        <pt x="144" y="689" on="0"/>
        <pt x="213" y="701" on="1"/>
        <pt x="213" y="750" on="1"/>
        <pt x="286" y="750" on="1"/>
        <pt x="286" y="703" on="1"/>
        <pt x="289" y="703" on="1"/>
        <pt x="312" y="703" on="0"/>
        <pt x="354" y="689" on="1"/>
        <pt x="386" y="676" on="0"/>
        <pt x="417" y="655" on="1"/>
        <pt x="427" y="648" on="0"/>
        <pt x="427" y="646" on="1"/>
        <pt x="413" y="569" on="1"/>
        <pt x="413" y="568" on="0"/>
        <pt x="403" y="575" on="1"/>
        <pt x="352" y="615" on="0"/>
        <pt x="291" y="624" on="1"/>
        <pt x="286" y="624" on="1"/>
        <pt x="286" y="405" on="1"/>
        <pt x="354" y="390" on="0"/>
        <pt x="444" y="275" on="0"/>
        <pt x="444" y="199" on="1"/>
        <pt x="444" y="121" on="0"/>
        <pt x="354" y="8" on="0"/>
        <pt x="286" y="-7" on="1"/>
        <pt x="286" y="-56" on="1"/>
        <pt x="213" y="-56" on="1"/>
        <pt x="213" y="-9" on="1"/>
        <pt x="124" y="1" on="0"/>
        <pt x="55" y="51" on="1"/>
        <pt x="44" y="58" on="0"/>
        <pt x="44" y="60" on="1"/>
        <pt x="44" y="61" on="0"/>
        <pt x="52" y="101" on="1"/>
        <pt x="59" y="140" on="1"/>
        <pt x="69" y="132" on="1"/>
        <pt x="129" y="84" on="0"/>
        <pt x="204" y="72" on="1"/>
        <pt x="213" y="70" on="1"/>
        <pt x="213" y="317" on="1"/>
        <pt x="202" y="319" on="1"/>
        <pt x="147" y="334" on="0"/>
        <pt x="70" y="415" on="0"/>
        <pt x="59" y="470" on="1"/>
        <pt x="55" y="487" on="0"/>
      </contour>
      <contour>
        <pt x="213" y="424" on="1"/>
        <pt x="213" y="620" on="1"/>
        <pt x="203" y="615" on="1"/>
        <pt x="143" y="585" on="0"/>
        <pt x="143" y="522" on="1"/>
        <pt x="143" y="490" on="0"/>
        <pt x="182" y="437" on="0"/>
      </contour>
      <contour>
        <pt x="296" y="293" on="1"/>
        <pt x="287" y="297" on="1"/>
        <pt x="286" y="297" on="0"/>
        <pt x="286" y="186" on="1"/>
        <pt x="286" y="75" on="1"/>
        <pt x="293" y="79" on="1"/>
        <pt x="322" y="93" on="0"/>
        <pt x="356" y="150" on="0"/>
        <pt x="356" y="187" on="1"/>
        <pt x="356" y="222" on="0"/>
        <pt x="324" y="279" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 38 values pushed */
          58 55 48 47 41 40 36 29 26 20 18 14 3 13 2 1 1 74 0 0 0 2 0 2 93
          0 1 1 23 1 76 28 27 33 20 3 6 22
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="dotlessi" xMin="74" yMin="0" xMax="164" yMax="444">
      <contour>
        <pt x="74" y="0" on="1"/>
        <pt x="74" y="444" on="1"/>
        <pt x="164" y="444" on="1"/>
        <pt x="164" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          34
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 12 values pushed */
          0 0 0 16 75 2 1 1 1 14 1 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          47
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 12 values pushed */
          0 0 0 16 75 2 1 1 1 17 1 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 12 values pushed */
          0 0 0 1 89 2 1 1 1 17 1 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 10 values pushed */
          0 0 0 3 0 3 17 3 6 21
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="e" xMin="28" yMin="-10" xMax="415" yMax="461">
      <contour>
        <pt x="403" y="113" on="1"/>
        <pt x="409" y="43" on="0"/>
        <pt x="409" y="38" on="1"/>
        <pt x="409" y="35" on="0"/>
        <pt x="407" y="31" on="0"/>
        <pt x="405" y="29" on="0"/>
        <pt x="396" y="25" on="0"/>
        <pt x="393" y="24" on="1"/>
        <pt x="327" y="-10" on="0"/>
        <pt x="252" y="-10" on="1"/>
        <pt x="225" y="-10" on="0"/>
        <pt x="218" y="-9" on="1"/>
        <pt x="144" y="4" on="0"/>
        <pt x="43" y="113" on="0"/>
        <pt x="30" y="190" on="1"/>
        <pt x="28" y="206" on="0"/>
        <pt x="28" y="226" on="1"/>
        <pt x="28" y="245" on="0"/>
        <pt x="30" y="261" on="1"/>
        <pt x="43" y="347" on="0"/>
        <pt x="101" y="405" on="1"/>
        <pt x="160" y="461" on="0"/>
        <pt x="235" y="461" on="1"/>
        <pt x="318" y="461" on="0"/>
        <pt x="366" y="400" on="1"/>
        <pt x="411" y="342" on="0"/>
        <pt x="415" y="238" on="1"/>
        <pt x="415" y="219" on="1"/>
        <pt x="113" y="219" on="1"/>
        <pt x="113" y="215" on="1"/>
        <pt x="113" y="189" on="0"/>
        <pt x="124" y="160" on="1"/>
        <pt x="156" y="79" on="0"/>
        <pt x="232" y="66" on="1"/>
        <pt x="236" y="65" on="0"/>
        <pt x="248" y="65" on="1"/>
        <pt x="332" y="65" on="0"/>
        <pt x="397" y="110" on="1"/>
      </contour>
      <contour>
        <pt x="340" y="289" on="1"/>
        <pt x="326" y="334" on="0"/>
        <pt x="278" y="385" on="0"/>
        <pt x="233" y="385" on="1"/>
        <pt x="230" y="385" on="0"/>
        <pt x="221" y="384" on="0"/>
        <pt x="219" y="384" on="1"/>
        <pt x="163" y="373" on="0"/>
        <pt x="134" y="314" on="1"/>
        <pt x="123" y="294" on="0"/>
        <pt x="123" y="289" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 6 values pushed */
          0 1 3 2 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          47
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 30 values pushed */
          6 1 5 0 2 3 5 2 97 0 4 4 1 91 0 1 1 24 75 0 3 3 0 91 0
          0 0 25 0 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 28 values pushed */
          0 1 0 4 5 1 4 99 6 1 5 0 2 3 5 2 97 0 3 3 0 91 0 0 0
          25 0 76
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 14 values pushed */
          38 38 38 48 38 47 20 53 20 43 40 7 6 25
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="eight" xMin="43" yMin="-22" xMax="456" yMax="678">
      <contour>
        <pt x="55" y="500" on="1"/>
        <pt x="55" y="573" on="0"/>
        <pt x="167" y="678" on="0"/>
        <pt x="250" y="678" on="1"/>
        <pt x="313" y="678" on="0"/>
        <pt x="417" y="607" on="0"/>
        <pt x="436" y="550" on="1"/>
        <pt x="444" y="524" on="0"/>
        <pt x="444" y="501" on="1"/>
        <pt x="444" y="489" on="0"/>
        <pt x="440" y="467" on="1"/>
        <pt x="421" y="393" on="0"/>
        <pt x="336" y="357" on="1"/>
        <pt x="329" y="353" on="1"/>
        <pt x="330" y="353" on="1"/>
        <pt x="380" y="334" on="0"/>
        <pt x="445" y="261" on="0"/>
        <pt x="454" y="215" on="1"/>
        <pt x="456" y="205" on="0"/>
        <pt x="456" y="184" on="1"/>
        <pt x="456" y="94" on="0"/>
        <pt x="332" y="-22" on="0"/>
        <pt x="249" y="-22" on="1"/>
        <pt x="167" y="-22" on="0"/>
        <pt x="43" y="94" on="0"/>
        <pt x="43" y="184" on="1"/>
        <pt x="43" y="205" on="0"/>
        <pt x="45" y="215" on="1"/>
        <pt x="54" y="261" on="0"/>
        <pt x="119" y="334" on="0"/>
        <pt x="169" y="353" on="1"/>
        <pt x="171" y="354" on="0"/>
        <pt x="166" y="356" on="1"/>
        <pt x="165" y="356" on="0"/>
        <pt x="163" y="357" on="1"/>
        <pt x="113" y="378" on="0"/>
        <pt x="55" y="455" on="0"/>
      </contour>
      <contour>
        <pt x="200" y="393" on="0"/>
        <pt x="300" y="393" on="0"/>
        <pt x="358" y="447" on="0"/>
        <pt x="358" y="496" on="1"/>
        <pt x="358" y="548" on="0"/>
        <pt x="302" y="605" on="0"/>
        <pt x="250" y="605" on="1"/>
        <pt x="199" y="605" on="0"/>
        <pt x="141" y="548" on="0"/>
        <pt x="141" y="496" on="1"/>
        <pt x="141" y="447" on="0"/>
      </contour>
      <contour>
        <pt x="326" y="285" on="1"/>
        <pt x="295" y="316" on="0"/>
        <pt x="245" y="316" on="1"/>
        <pt x="194" y="316" on="0"/>
        <pt x="139" y="243" on="0"/>
        <pt x="139" y="185" on="1"/>
        <pt x="139" y="80" on="0"/>
        <pt x="222" y="57" on="1"/>
        <pt x="231" y="55" on="0"/>
        <pt x="250" y="55" on="1"/>
        <pt x="296" y="55" on="0"/>
        <pt x="327" y="84" on="1"/>
        <pt x="360" y="120" on="0"/>
        <pt x="360" y="188" on="1"/>
        <pt x="360" y="252" on="0"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 7 values pushed */
          30 13 2 4 2 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          32
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 29 values pushed */
          0 2 0 4 5 2 4 99 0 3 3 0 91 0 0 0 13 75 0 5 5 1 91 0 1
          1 22 1 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          34
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 27 values pushed */
          0 0 0 3 2 0 3 99 0 2 0 4 5 2 4 99 0 5 5 1 91 0 1 1 22
          1 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          40
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 27 values pushed */
          0 0 0 3 2 0 3 99 0 2 0 4 5 2 4 99 0 5 5 1 91 0 1 1 25
          1 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 32 values pushed */
          0 0 0 3 2 0 3 99 0 2 0 4 5 2 4 99 0 5 1 1 5 87 0 5 5
          1 91 0 1 5 1 79
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 14 values pushed */
          58 56 51 49 44 42 38 37 23 21 34 6 6 21
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="emdash" xMin="0" yMin="236" xMax="999" yMax="312">
      <contour>
        <pt x="0" y="236" on="1"/>
        <pt x="0" y="312" on="1"/>
        <pt x="999" y="312" on="1"/>
        <pt x="999" y="236" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 27 values pushed */
          0 0 1 1 0 85 0 0 0 1 89 2 1 1 0 1 77 0 0 0 3 0 3 17 3
          6 21
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="endash" xMin="0" yMin="236" xMax="499" yMax="312">
      <contour>
        <pt x="0" y="236" on="1"/>
        <pt x="0" y="312" on="1"/>
        <pt x="499" y="312" on="1"/>
        <pt x="499" y="236" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 27 values pushed */
          0 0 1 1 0 85 0 0 0 1 89 2 1 1 0 1 77 0 0 0 3 0 3 17 3
          6 21
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="equal" xMin="56" yMin="130" xMax="722" yMax="370">
      <contour>
        <pt x="56" y="350" on="1"/>
        <pt x="56" y="363" on="0"/>
        <pt x="70" y="370" on="1"/>
        <pt x="707" y="370" on="1"/>
        <pt x="722" y="362" on="0"/>
        <pt x="722" y="350" on="1"/>
        <pt x="722" y="339" on="0"/>
        <pt x="708" y="331" on="1"/>
        <pt x="390" y="330" on="1"/>
        <pt x="72" y="330" on="1"/>
        <pt x="56" y="335" on="0"/>
      </contour>
      <contour>
        <pt x="56" y="150" on="1"/>
        <pt x="56" y="165" on="0"/>
        <pt x="72" y="170" on="1"/>
        <pt x="708" y="170" on="1"/>
        <pt x="709" y="169" on="0"/>
        <pt x="716" y="164" on="0"/>
        <pt x="719" y="161" on="0"/>
        <pt x="722" y="154" on="0"/>
        <pt x="722" y="150" on="1"/>
        <pt x="722" y="138" on="0"/>
        <pt x="707" y="130" on="1"/>
        <pt x="70" y="130" on="1"/>
        <pt x="56" y="137" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 31 values pushed */
          0 0 0 1 2 0 1 97 0 2 3 3 2 85 0 2 2 3 89 0 3 2 3 77 23
          20 36 18 4 6 24
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="exclam" xMin="110" yMin="0" xMax="208" yMax="694">
      <contour>
        <pt x="120" y="187" on="1"/>
        <pt x="120" y="225" on="0"/>
        <pt x="110" y="655" on="0"/>
        <pt x="110" y="693" on="1"/>
        <pt x="110" y="694" on="0"/>
        <pt x="208" y="694" on="0"/>
        <pt x="208" y="693" on="1"/>
        <pt x="208" y="655" on="0"/>
        <pt x="198" y="225" on="0"/>
        <pt x="198" y="187" on="1"/>
        <pt x="198" y="186" on="0"/>
        <pt x="120" y="186" on="0"/>
      </contour>
      <contour>
        <pt x="110" y="0" on="1"/>
        <pt x="110" y="98" on="1"/>
        <pt x="208" y="98" on="1"/>
        <pt x="208" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          34
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 22 values pushed */
          0 1 1 0 91 0 0 0 13 75 0 2 2 3 89 4 1 3 3 14 3 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          36
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 22 values pushed */
          0 1 1 0 91 0 0 0 13 75 0 2 2 3 89 4 1 3 3 17 3 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 22 values pushed */
          0 1 1 0 91 0 0 0 15 75 0 2 2 3 89 4 1 3 3 17 3 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 12 values pushed */
          12 12 12 15 12 15 18 36 35 5 6 23
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="f" xMin="27" yMin="0" xMax="347" yMax="705">
      <contour>
        <pt x="262" y="705" on="1"/>
        <pt x="303" y="705" on="0"/>
        <pt x="347" y="694" on="1"/>
        <pt x="347" y="612" on="1"/>
        <pt x="336" y="616" on="1"/>
        <pt x="303" y="628" on="0"/>
        <pt x="274" y="628" on="1"/>
        <pt x="266" y="628" on="1"/>
        <pt x="223" y="628" on="0"/>
        <pt x="199" y="605" on="1"/>
        <pt x="190" y="594" on="0"/>
        <pt x="188" y="589" on="1"/>
        <pt x="183" y="579" on="0"/>
        <pt x="181" y="559" on="0"/>
        <pt x="181" y="507" on="1"/>
        <pt x="181" y="444" on="1"/>
        <pt x="287" y="444" on="1"/>
        <pt x="287" y="371" on="1"/>
        <pt x="184" y="371" on="1"/>
        <pt x="184" y="0" on="1"/>
        <pt x="94" y="0" on="1"/>
        <pt x="94" y="371" on="1"/>
        <pt x="27" y="371" on="1"/>
        <pt x="27" y="444" on="1"/>
        <pt x="94" y="444" on="1"/>
        <pt x="94" y="492" on="1"/>
        <pt x="94" y="544" on="0"/>
        <pt x="95" y="550" on="1"/>
        <pt x="102" y="609" on="0"/>
        <pt x="183" y="695" on="0"/>
        <pt x="241" y="704" on="1"/>
        <pt x="246" y="705" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 10 values pushed */
          2 1 1 0 3 1 2 1 2 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          34
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 29 values pushed */
          0 1 1 0 91 7 1 0 0 23 75 5 1 3 3 2 89 6 1 2 2 16 75 0 4
          4 14 4 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          47
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 29 values pushed */
          0 1 1 0 91 7 1 0 0 23 75 5 1 3 3 2 89 6 1 2 2 16 75 0 4
          4 17 4 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 27 values pushed */
          6 1 2 5 1 3 4 2 3 97 0 1 1 0 91 7 1 0 0 23 75 0 4 4 17
          4 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 21 values pushed */
          1 0 24 23 22 21 20 19 18 17 16 15 8 5 0 31 1 30 8 6 20
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="five" xMin="33" yMin="-21" xMax="449" yMax="656">
      <contour>
        <pt x="223" y="54" on="1"/>
        <pt x="279" y="54" on="0"/>
        <pt x="343" y="132" on="0"/>
        <pt x="345" y="197" on="1"/>
        <pt x="345" y="324" on="0"/>
        <pt x="278" y="348" on="1"/>
        <pt x="271" y="350" on="0"/>
        <pt x="257" y="350" on="1"/>
        <pt x="233" y="350" on="0"/>
        <pt x="215" y="341" on="1"/>
        <pt x="181" y="325" on="0"/>
        <pt x="162" y="284" on="1"/>
        <pt x="157" y="276" on="0"/>
        <pt x="157" y="273" on="1"/>
        <pt x="157" y="272" on="0"/>
        <pt x="116" y="272" on="1"/>
        <pt x="75" y="272" on="1"/>
        <pt x="75" y="656" on="1"/>
        <pt x="416" y="656" on="1"/>
        <pt x="416" y="577" on="1"/>
        <pt x="162" y="577" on="1"/>
        <pt x="162" y="486" on="1"/>
        <pt x="162" y="396" on="0"/>
        <pt x="163" y="396" on="1"/>
        <pt x="164" y="397" on="1"/>
        <pt x="166" y="398" on="0"/>
        <pt x="171" y="401" on="0"/>
        <pt x="173" y="402" on="1"/>
        <pt x="209" y="426" on="0"/>
        <pt x="258" y="426" on="1"/>
        <pt x="279" y="426" on="0"/>
        <pt x="286" y="425" on="1"/>
        <pt x="346" y="412" on="0"/>
        <pt x="428" y="323" on="0"/>
        <pt x="442" y="261" on="1"/>
        <pt x="449" y="226" on="0"/>
        <pt x="449" y="203" on="1"/>
        <pt x="449" y="140" on="0"/>
        <pt x="417" y="88" on="1"/>
        <pt x="378" y="22" on="0"/>
        <pt x="307" y="-7" on="1"/>
        <pt x="270" y="-21" on="0"/>
        <pt x="226" y="-21" on="1"/>
        <pt x="125" y="-21" on="0"/>
        <pt x="55" y="51" on="1"/>
        <pt x="33" y="73" on="0"/>
        <pt x="33" y="77" on="1"/>
        <pt x="34" y="78" on="0"/>
        <pt x="54" y="112" on="0"/>
        <pt x="64" y="128" on="1"/>
        <pt x="73" y="144" on="1"/>
        <pt x="77" y="139" on="1"/>
        <pt x="99" y="103" on="0"/>
        <pt x="178" y="54" on="0"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 6 values pushed */
          50 1 0 2 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          27
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 38 values pushed */
          0 2 1 0 1 2 0 112 0 3 0 4 5 3 4 97 0 1 1 5 91 0 5 5 16
          75 7 1 0 0 6 91 0 6 6 22 6 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          34
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 36 values pushed */
          0 2 1 0 1 2 0 112 0 3 0 4 5 3 4 97 0 5 0 1 2 5 1 99 7
          1 0 0 6 91 0 6 6 22 6 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          45
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 36 values pushed */
          0 2 1 0 1 2 0 112 0 3 0 4 5 3 4 97 0 5 0 1 2 5 1 99 7
          1 0 0 6 91 0 6 6 25 6 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 42 values pushed */
          0 2 1 0 1 2 0 112 0 3 0 4 5 3 4 97 0 5 0 1 2 5 1 99 7
          1 0 6 6 0 87 7 1 0 0 6 91 0 6 0 6 79
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 21 values pushed */
          1 0 43 41 30 28 20 19 18 17 16 15 8 6 0 53 1 53 8 6 20
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="four" xMin="28" yMin="0" xMax="471" yMax="656">
      <contour>
        <pt x="271" y="654" on="1"/>
        <pt x="272" y="656" on="1"/>
        <pt x="380" y="656" on="1"/>
        <pt x="380" y="235" on="1"/>
        <pt x="471" y="235" on="1"/>
        <pt x="471" y="159" on="1"/>
        <pt x="380" y="159" on="1"/>
        <pt x="380" y="0" on="1"/>
        <pt x="286" y="0" on="1"/>
        <pt x="286" y="159" on="1"/>
        <pt x="28" y="159" on="1"/>
        <pt x="28" y="235" on="1"/>
        <pt x="149" y="443" on="1"/>
        <pt x="269" y="652" on="0"/>
      </contour>
      <contour>
        <pt x="292" y="235" on="1"/>
        <pt x="292" y="607" on="1"/>
        <pt x="291" y="602" on="0"/>
        <pt x="290" y="596" on="1"/>
        <pt x="281" y="510" on="0"/>
        <pt x="140" y="267" on="1"/>
        <pt x="136" y="260" on="0"/>
        <pt x="128" y="245" on="0"/>
        <pt x="126" y="240" on="1"/>
        <pt x="123" y="236" on="1"/>
        <pt x="123" y="235" on="0"/>
        <pt x="207" y="235" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 11 values pushed */
          15 1 1 0 1 74 11 1 1 1 73
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          34
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 23 values pushed */
          6 1 0 1 0 114 7 5 2 1 4 1 2 3 1 2 98 0 3 3 14 3 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 23 values pushed */
          6 1 0 1 0 114 7 5 2 1 4 1 2 3 1 2 98 0 3 3 17 3 76
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 23 values pushed */
          14 14 2 0 14 25 14 23 10 9 8 7 6 5 4 3 0 13 2 13 8 6 20
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="g" xMin="28" yMin="-206" xMax="485" yMax="455">
      <contour>
        <pt x="82" y="38" on="1"/>
        <pt x="60" y="67" on="0"/>
        <pt x="60" y="145" on="0"/>
        <pt x="80" y="180" on="1"/>
        <pt x="86" y="189" on="1"/>
        <pt x="80" y="199" on="1"/>
        <pt x="55" y="240" on="0"/>
        <pt x="55" y="286" on="1"/>
        <pt x="55" y="359" on="0"/>
        <pt x="153" y="455" on="0"/>
        <pt x="224" y="455" on="1"/>
        <pt x="281" y="455" on="0"/>
        <pt x="323" y="421" on="1"/>
        <pt x="322" y="423" on="1"/>
        <pt x="318" y="427" on="1"/>
        <pt x="318" y="428" on="0"/>
        <pt x="333" y="432" on="1"/>
        <pt x="398" y="455" on="0"/>
        <pt x="465" y="455" on="1"/>
        <pt x="471" y="455" on="1"/>
        <pt x="478" y="416" on="1"/>
        <pt x="485" y="377" on="1"/>
        <pt x="482" y="377" on="0"/>
        <pt x="479" y="378" on="1"/>
        <pt x="444" y="385" on="0"/>
        <pt x="401" y="385" on="1"/>
        <pt x="397" y="385" on="0"/>
        <pt x="384" y="384" on="0"/>
        <pt x="381" y="384" on="1"/>
        <pt x="362" y="383" on="1"/>
        <pt x="357" y="387" on="1"/>
        <pt x="358" y="385" on="1"/>
        <pt x="389" y="340" on="0"/>
        <pt x="389" y="287" on="1"/>
        <pt x="389" y="214" on="0"/>
        <pt x="288" y="119" on="0"/>
        <pt x="221" y="119" on="1"/>
        <pt x="177" y="119" on="0"/>
        <pt x="138" y="142" on="1"/>
        <pt x="133" y="145" on="0"/>
        <pt x="131" y="143" on="1"/>
        <pt x="125" y="134" on="0"/>
        <pt x="125" y="117" on="1"/>
        <pt x="125" y="81" on="0"/>
        <pt x="155" y="72" on="1"/>
        <pt x="227" y="71" on="1"/>
        <pt x="311" y="70" on="0"/>
        <pt x="335" y="66" on="1"/>
        <pt x="418" y="52" on="0"/>
        <pt x="449" y="7" on="1"/>
        <pt x="471" y="-26" on="0"/>
        <pt x="471" y="-62" on="1"/>
        <pt x="471" y="-85" on="0"/>
        <pt x="469" y="-92" on="1"/>
        <pt x="453" y="-143" on="0"/>
        <pt x="328" y="-206" on="0"/>
        <pt x="250" y="-206" on="1"/>
        <pt x="170" y="-206" on="0"/>
        <pt x="46" y="-144" on="0"/>
        <pt x="30" y="-92" on="1"/>
        <pt x="28" y="-84" on="0"/>
        <pt x="28" y="-68" on="1"/>
        <pt x="28" y="-32" on="0"/>
        <pt x="49" y="4" on="1"/>
        <pt x="51" y="7" on="0"/>
      </contour>
      <contour>
        <pt x="304" y="241" on="0"/>
        <pt x="304" y="333" on="0"/>
        <pt x="261" y="383" on="0"/>
        <pt x="220" y="383" on="1"/>
        <pt x="182" y="383" on="0"/>
        <pt x="140" y="330" on="0"/>
        <pt x="140" y="244" on="0"/>
        <pt x="182" y="191" on="0"/>
        <pt x="220" y="191" on="1"/>
        <pt x="261" y="191" on="0"/>
      </contour>
      <contour>
        <pt x="250" y="-134" on="1"/>
        <pt x="300" y="-134" on="0"/>
        <pt x="387" y="-99" on="0"/>
        <pt x="387" y="-69" on="1"/>
        <pt x="387" y="-49" on="0"/>
        <pt x="371" y="-33" on="1"/>
        <pt x="354" y="-14" on="0"/>
        <pt x="306" y="-7" on="1"/>
        <pt x="288" y="-5" on="0"/>
        <pt x="216" y="-5" on="1"/>
        <pt x="161" y="-5" on="0"/>
        <pt x="153" y="-7" on="1"/>
        <pt x="136" y="-11" on="0"/>
        <pt x="113" y="-44" on="0"/>
        <pt x="113" y="-66" on="1"/>
        <pt x="113" y="-78" on="0"/>
        <pt x="115" y="-83" on="1"/>
        <pt x="125" y="-104" on="0"/>
        <pt x="166" y="-121" on="1"/>
        <pt x="203" y="-134" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 17 values pushed */
          30 14 12 3 2 0 21 1 7 2 38 4 2 3 7 3 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          34
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 42 values pushed */
          0 7 0 3 4 7 3 99 6 1 2 2 0 91 1 1 0 0 24 75 0 4 4 9 91
          0 9 9 14 75 10 1 8 8 5 91 0 5 5 26 5 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          47
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 42 values pushed */
          0 7 0 3 4 7 3 99 6 1 2 2 0 91 1 1 0 0 24 75 0 4 4 9 91
          0 9 9 17 75 10 1 8 8 5 91 0 5 5 26 5 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 40 values pushed */
          1 1 0 6 1 2 7 0 2 99 0 7 0 3 4 7 3 99 0 4 4 9 91 0 9
          9 17 75 10 1 8 8 5 91 0 5 5 26 5 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 19 values pushed */
          76 75 85 83 75 94 76 94 35 42 41 39 38 86 22 41 11 6 28
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="gravecomb" xMin="-417" yMin="527" xMax="-200" yMax="694">
      <contour>
        <pt x="-415" y="692" on="1"/>
        <pt x="-417" y="694" on="1"/>
        <pt x="-324" y="694" on="1"/>
        <pt x="-262" y="612" on="1"/>
        <pt x="-249" y="594" on="0"/>
        <pt x="-216" y="550" on="0"/>
        <pt x="-208" y="539" on="1"/>
        <pt x="-200" y="528" on="1"/>
        <pt x="-237" y="527" on="1"/>
        <pt x="-275" y="527" on="1"/>
        <pt x="-344" y="608" on="1"/>
        <pt x="-359" y="625" on="0"/>
        <pt x="-397" y="670" on="0"/>
        <pt x="-415" y="691" on="0"/>
      </contour>
      <instructions><assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          36
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 12 values pushed */
          0 1 0 1 115 2 1 0 0 13 0 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 12 values pushed */
          0 1 0 1 115 2 1 0 0 15 0 76
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 11 values pushed */
          2 0 9 7 0 13 2 13 3 6 20
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="h" xMin="73" yMin="0" xMax="443" yMax="694">
      <contour>
        <pt x="163" y="395" on="1"/>
        <pt x="223" y="455" on="0"/>
        <pt x="307" y="455" on="1"/>
        <pt x="418" y="455" on="0"/>
        <pt x="438" y="354" on="1"/>
        <pt x="442" y="331" on="0"/>
        <pt x="443" y="164" on="1"/>
        <pt x="443" y="0" on="1"/>
        <pt x="350" y="0" on="1"/>
        <pt x="350" y="157" on="1"/>
        <pt x="349" y="315" on="0"/>
        <pt x="348" y="320" on="1"/>
        <pt x="334" y="378" on="0"/>
        <pt x="259" y="378" on="1"/>
        <pt x="224" y="378" on="0"/>
        <pt x="204" y="358" on="1"/>
        <pt x="173" y="327" on="0"/>
        <pt x="167" y="268" on="1"/>
        <pt x="166" y="261" on="0"/>
        <pt x="166" y="129" on="1"/>
        <pt x="166" y="0" on="1"/>
        <pt x="73" y="0" on="1"/>
        <pt x="73" y="694" on="1"/>
        <pt x="163" y="694" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 10 values pushed */
          0 1 2 0 17 1 1 2 2 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          34
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 22 values pushed */
          0 4 4 13 75 0 2 2 0 91 0 0 0 24 75 3 1 1 1 14 1 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          36
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 22 values pushed */
          0 4 4 13 75 0 2 2 0 91 0 0 0 24 75 3 1 1 1 17 1 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          47
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 22 values pushed */
          0 4 4 15 75 0 2 2 0 91 0 0 0 24 75 3 1 1 1 17 1 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 20 values pushed */
          0 0 0 2 1 0 2 99 0 4 4 15 75 3 1 1 1 17 1 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 8 values pushed */
          17 22 36 20 33 5 6 25
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="hyphen" xMin="11" yMin="186" xMax="277" yMax="259">
      <contour>
        <pt x="11" y="186" on="1"/>
        <pt x="11" y="259" on="1"/>
        <pt x="277" y="259" on="1"/>
        <pt x="277" y="186" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 27 values pushed */
          0 0 1 1 0 85 0 0 0 1 89 2 1 1 0 1 77 0 0 0 3 0 3 17 3
          6 21
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="i" xMin="67" yMin="0" xMax="171" yMax="680">
      <contour>
        <pt x="67" y="576" on="1"/>
        <pt x="67" y="680" on="1"/>
        <pt x="171" y="680" on="1"/>
        <pt x="171" y="576" on="1"/>
      </contour>
      <contour>
        <pt x="74" y="0" on="1"/>
        <pt x="74" y="444" on="1"/>
        <pt x="164" y="444" on="1"/>
        <pt x="164" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          34
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 23 values pushed */
          4 1 1 1 0 89 0 0 0 13 75 0 2 2 16 75 5 1 3 3 14 3 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          36
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 23 values pushed */
          4 1 1 1 0 89 0 0 0 13 75 0 2 2 16 75 5 1 3 3 17 3 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          47
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 21 values pushed */
          0 0 4 1 1 2 0 1 97 0 2 2 16 75 5 1 3 3 17 3 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 21 values pushed */
          0 0 4 1 1 2 0 1 97 0 2 2 3 89 5 1 3 3 17 3 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 18 values pushed */
          4 4 0 0 4 7 4 7 6 5 0 3 0 3 17 6 6 21
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="j" xMin="-59" yMin="-205" xMax="192" yMax="680">
      <contour>
        <pt x="88" y="576" on="1"/>
        <pt x="88" y="680" on="1"/>
        <pt x="192" y="680" on="1"/>
        <pt x="192" y="576" on="1"/>
      </contour>
      <contour>
        <pt x="102" y="-86" on="1"/>
        <pt x="102" y="444" on="1"/>
        <pt x="192" y="444" on="1"/>
        <pt x="192" y="180" on="1"/>
        <pt x="191" y="-45" on="0"/>
        <pt x="190" y="-95" on="0"/>
        <pt x="184" y="-113" on="1"/>
        <pt x="171" y="-153" on="0"/>
        <pt x="108" y="-205" on="0"/>
        <pt x="63" y="-205" on="1"/>
        <pt x="23" y="-205" on="0"/>
        <pt x="-25" y="-188" on="1"/>
        <pt x="-59" y="-175" on="0"/>
        <pt x="-59" y="-167" on="0"/>
        <pt x="-43" y="-101" on="0"/>
        <pt x="-41" y="-96" on="1"/>
        <pt x="-41" y="-95" on="0"/>
        <pt x="-38" y="-97" on="0"/>
        <pt x="-35" y="-101" on="1"/>
        <pt x="-5" y="-126" on="0"/>
        <pt x="31" y="-126" on="1"/>
        <pt x="81" y="-126" on="0"/>
        <pt x="98" y="-92" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 6 values pushed */
          4 1 4 2 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          36
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 27 values pushed */
          5 1 1 1 0 89 0 0 0 13 75 0 2 2 16 75 0 4 4 3 92 0 3 3 26
          3 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          47
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 25 values pushed */
          0 0 5 1 1 2 0 1 97 0 2 2 16 75 0 4 4 3 92 0 3 3 26 3 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 28 values pushed */
          0 2 1 4 1 2 4 112 0 0 5 1 1 2 0 1 97 0 4 4 3 92 0 3 3
          26 3 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 16 values pushed */
          0 0 25 23 14 12 6 5 0 3 0 3 17 6 6 21
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="k" xMin="76" yMin="0" xMax="471" yMax="694">
      <contour>
        <pt x="76" y="0" on="1"/>
        <pt x="76" y="694" on="1"/>
        <pt x="163" y="694" on="1"/>
        <pt x="163" y="257" on="1"/>
        <pt x="262" y="360" on="0"/>
        <pt x="340" y="444" on="1"/>
        <pt x="449" y="444" on="1"/>
        <pt x="367" y="360" on="0"/>
        <pt x="286" y="272" on="1"/>
        <pt x="292" y="263" on="1"/>
        <pt x="295" y="259" on="0"/>
        <pt x="460" y="16" on="0"/>
        <pt x="463" y="12" on="1"/>
        <pt x="471" y="0" on="1"/>
        <pt x="372" y="0" on="1"/>
        <pt x="309" y="92" on="1"/>
        <pt x="294" y="114" on="0"/>
        <pt x="260" y="164" on="0"/>
        <pt x="239" y="195" on="0"/>
        <pt x="237" y="198" on="1"/>
        <pt x="228" y="211" on="1"/>
        <pt x="217" y="199" on="0"/>
        <pt x="172" y="151" on="0"/>
        <pt x="160" y="139" on="1"/>
        <pt x="160" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 9 values pushed */
          23 20 8 3 4 2 1 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          34
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 18 values pushed */
          0 0 0 13 75 0 1 1 16 75 4 3 2 2 2 14 2 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          36
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 18 values pushed */
          0 0 0 13 75 0 1 1 16 75 4 3 2 2 2 17 2 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          47
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 18 values pushed */
          0 0 0 15 75 0 1 1 16 75 4 3 2 2 2 17 2 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 18 values pushed */
          0 0 0 15 75 0 1 1 2 89 4 3 2 2 2 17 2 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 12 values pushed */
          0 0 0 24 0 24 23 19 17 5 6 23
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="l" xMin="74" yMin="0" xMax="164" yMax="694">
      <contour>
        <pt x="74" y="0" on="1"/>
        <pt x="74" y="694" on="1"/>
        <pt x="164" y="694" on="1"/>
        <pt x="164" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          34
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 12 values pushed */
          0 0 0 13 75 2 1 1 1 14 1 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          36
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 12 values pushed */
          0 0 0 13 75 2 1 1 1 17 1 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 12 values pushed */
          0 0 0 15 75 2 1 1 1 17 1 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 10 values pushed */
          0 0 0 3 0 3 17 3 6 21
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="m" xMin="73" yMin="0" xMax="720" yMax="455">
      <contour>
        <pt x="304" y="455" on="1"/>
        <pt x="353" y="455" on="0"/>
        <pt x="411" y="420" on="0"/>
        <pt x="430" y="383" on="1"/>
        <pt x="437" y="391" on="1"/>
        <pt x="496" y="455" on="0"/>
        <pt x="584" y="455" on="1"/>
        <pt x="695" y="455" on="0"/>
        <pt x="715" y="354" on="1"/>
        <pt x="719" y="331" on="0"/>
        <pt x="720" y="164" on="1"/>
        <pt x="720" y="0" on="1"/>
        <pt x="627" y="0" on="1"/>
        <pt x="627" y="157" on="1"/>
        <pt x="626" y="315" on="0"/>
        <pt x="625" y="320" on="1"/>
        <pt x="611" y="378" on="0"/>
        <pt x="536" y="378" on="1"/>
        <pt x="501" y="378" on="0"/>
        <pt x="481" y="358" on="1"/>
        <pt x="450" y="327" on="0"/>
        <pt x="444" y="268" on="1"/>
        <pt x="443" y="261" on="0"/>
        <pt x="443" y="129" on="1"/>
        <pt x="443" y="0" on="1"/>
        <pt x="350" y="0" on="1"/>
        <pt x="350" y="157" on="1"/>
        <pt x="349" y="315" on="0"/>
        <pt x="348" y="320" on="1"/>
        <pt x="334" y="378" on="0"/>
        <pt x="259" y="378" on="1"/>
        <pt x="224" y="378" on="0"/>
        <pt x="204" y="358" on="1"/>
        <pt x="173" y="327" on="0"/>
        <pt x="167" y="268" on="1"/>
        <pt x="166" y="261" on="0"/>
        <pt x="166" y="129" on="1"/>
        <pt x="166" y="0" on="1"/>
        <pt x="73" y="0" on="1"/>
        <pt x="73" y="450" on="1"/>
        <pt x="160" y="450" on="1"/>
        <pt x="160" y="392" on="1"/>
        <pt x="223" y="455" on="0"/>
      </contour>
      <instructions><assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          45
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 12 values pushed */
          41 3 2 3 0 34 21 2 2 3 2 74
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 12 values pushed */
          41 3 2 3 7 34 21 2 2 3 2 74
          EIF[ ]	/* EndIf */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          34
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 22 values pushed */
          5 1 3 3 0 91 7 1 8 3 0 0 24 75 6 4 2 2 2 14 2 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          45
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 22 values pushed */
          5 1 3 3 0 91 7 1 8 3 0 0 24 75 6 4 2 2 2 17 2 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          47
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 26 values pushed */
          0 7 7 16 75 5 1 3 3 0 91 1 8 2 0 0 24 75 6 4 2 2 2 17 2
          76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 24 values pushed */
          1 8 2 0 5 1 3 2 0 3 99 0 7 7 2 89 6 4 2 2 2 17 2 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 23 values pushed */
          1 0 40 39 38 37 31 29 25 24 18 16 12 11 7 5 0 42 1 42 9 6 20
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="n" xMin="73" yMin="0" xMax="443" yMax="455">
      <contour>
        <pt x="160" y="392" on="1"/>
        <pt x="215" y="447" on="0"/>
        <pt x="283" y="454" on="1"/>
        <pt x="285" y="454" on="0"/>
        <pt x="299" y="455" on="0"/>
        <pt x="303" y="455" on="1"/>
        <pt x="306" y="455" on="1"/>
        <pt x="417" y="455" on="0"/>
        <pt x="438" y="354" on="1"/>
        <pt x="442" y="331" on="0"/>
        <pt x="443" y="164" on="1"/>
        <pt x="443" y="0" on="1"/>
        <pt x="350" y="0" on="1"/>
        <pt x="350" y="157" on="1"/>
        <pt x="349" y="315" on="0"/>
        <pt x="348" y="320" on="1"/>
        <pt x="334" y="378" on="0"/>
        <pt x="259" y="378" on="1"/>
        <pt x="224" y="378" on="0"/>
        <pt x="204" y="358" on="1"/>
        <pt x="173" y="327" on="0"/>
        <pt x="167" y="268" on="1"/>
        <pt x="166" y="261" on="0"/>
        <pt x="166" y="129" on="1"/>
        <pt x="166" y="0" on="1"/>
        <pt x="73" y="0" on="1"/>
        <pt x="73" y="450" on="1"/>
        <pt x="160" y="450" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 10 values pushed */
          0 1 2 0 21 1 1 2 2 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          34
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 18 values pushed */
          0 2 2 0 91 4 1 0 0 24 75 3 1 1 1 14 1 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          47
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 18 values pushed */
          0 2 2 0 91 4 1 0 0 24 75 3 1 1 1 17 1 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 19 values pushed */
          0 2 1 0 2 87 4 1 0 0 1 89 3 1 1 1 17 1 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 8 values pushed */
          17 22 36 20 82 5 6 25
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="nine" xMin="42" yMin="-22" xMax="457" yMax="677">
      <contour>
        <pt x="142" y="642" on="1"/>
        <pt x="190" y="677" on="0"/>
        <pt x="245" y="677" on="1"/>
        <pt x="306" y="677" on="0"/>
        <pt x="349" y="647" on="1"/>
        <pt x="375" y="629" on="0"/>
        <pt x="393" y="603" on="1"/>
        <pt x="457" y="510" on="0"/>
        <pt x="457" y="334" on="1"/>
        <pt x="457" y="149" on="0"/>
        <pt x="353" y="45" on="1"/>
        <pt x="288" y="-22" on="0"/>
        <pt x="205" y="-22" on="1"/>
        <pt x="135" y="-22" on="0"/>
        <pt x="81" y="18" on="1"/>
        <pt x="72" y="23" on="0"/>
        <pt x="72" y="25" on="1"/>
        <pt x="73" y="25" on="0"/>
        <pt x="91" y="58" on="1"/>
        <pt x="110" y="91" on="1"/>
        <pt x="159" y="54" on="0"/>
        <pt x="203" y="54" on="1"/>
        <pt x="221" y="54" on="0"/>
        <pt x="233" y="57" on="1"/>
        <pt x="276" y="68" on="0"/>
        <pt x="337" y="150" on="0"/>
        <pt x="350" y="212" on="1"/>
        <pt x="351" y="216" on="0"/>
        <pt x="355" y="240" on="0"/>
        <pt x="357" y="253" on="1"/>
        <pt x="357" y="257" on="1"/>
        <pt x="347" y="248" on="1"/>
        <pt x="284" y="187" on="0"/>
        <pt x="200" y="187" on="1"/>
        <pt x="183" y="187" on="0"/>
        <pt x="171" y="189" on="1"/>
        <pt x="123" y="200" on="0"/>
        <pt x="52" y="316" on="0"/>
        <pt x="44" y="381" on="1"/>
        <pt x="42" y="401" on="0"/>
        <pt x="42" y="430" on="1"/>
        <pt x="42" y="487" on="0"/>
        <pt x="66" y="557" on="0"/>
        <pt x="96" y="596" on="1"/>
        <pt x="118" y="624" on="0"/>
      </contour>
      <contour>
        <pt x="308" y="582" on="1"/>
        <pt x="283" y="605" on="0"/>
        <pt x="254" y="605" on="1"/>
        <pt x="205" y="605" on="0"/>
        <pt x="148" y="538" on="0"/>
        <pt x="141" y="487" on="1"/>
        <pt x="140" y="478" on="0"/>
        <pt x="140" y="382" on="0"/>
        <pt x="141" y="373" on="1"/>
        <pt x="146" y="335" on="0"/>
        <pt x="182" y="279" on="0"/>
        <pt x="207" y="269" on="1"/>
        <pt x="223" y="263" on="0"/>
        <pt x="247" y="263" on="1"/>
        <pt x="271" y="264" on="0"/>
        <pt x="285" y="271" on="1"/>
        <pt x="318" y="286" on="0"/>
        <pt x="358" y="365" on="0"/>
        <pt x="358" y="417" on="1"/>
        <pt x="358" y="449" on="0"/>
        <pt x="351" y="484" on="1"/>
        <pt x="340" y="552" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 10 values pushed */
          29 1 3 5 19 1 2 3 2 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          30
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 29 values pushed */
          0 5 0 3 2 5 3 99 0 4 4 0 91 0 0 0 13 75 0 2 2 1 91 0 1
          1 22 1 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          34
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 27 values pushed */
          0 0 0 4 5 0 4 99 0 5 0 3 2 5 3 99 0 2 2 1 91 0 1 1 22
          1 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          40
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 27 values pushed */
          0 0 0 4 5 0 4 99 0 5 0 3 2 5 3 99 0 2 2 1 91 0 1 1 25
          1 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 32 values pushed */
          0 0 0 4 5 0 4 99 0 5 0 3 2 5 3 99 0 2 1 1 2 87 0 2 2
          1 91 0 1 2 1 79
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 9 values pushed */
          41 44 42 39 40 33 6 6 26
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="nonmarkingreturn"/><!-- contains no outline data -->

    <TTGlyph name="numbersign" xMin="56" yMin="-194" xMax="777" yMax="694">
      <contour>
        <pt x="56" y="350" on="1"/>
        <pt x="56" y="363" on="0"/>
        <pt x="70" y="370" on="1"/>
        <pt x="192" y="370" on="1"/>
        <pt x="314" y="370" on="0"/>
        <pt x="314" y="371" on="1"/>
        <pt x="397" y="681" on="0"/>
        <pt x="400" y="685" on="1"/>
        <pt x="404" y="694" on="0"/>
        <pt x="416" y="694" on="1"/>
        <pt x="423" y="694" on="0"/>
        <pt x="435" y="684" on="0"/>
        <pt x="436" y="677" on="1"/>
        <pt x="436" y="673" on="0"/>
        <pt x="356" y="372" on="0"/>
        <pt x="355" y="371" on="1"/>
        <pt x="355" y="370" on="0"/>
        <pt x="449" y="370" on="1"/>
        <pt x="544" y="370" on="0"/>
        <pt x="544" y="371" on="1"/>
        <pt x="627" y="681" on="0"/>
        <pt x="630" y="685" on="1"/>
        <pt x="636" y="694" on="0"/>
        <pt x="646" y="694" on="1"/>
        <pt x="652" y="694" on="0"/>
        <pt x="665" y="685" on="0"/>
        <pt x="665" y="678" on="1"/>
        <pt x="665" y="670" on="0"/>
        <pt x="625" y="516" on="0"/>
        <pt x="605" y="444" on="1"/>
        <pt x="585" y="371" on="1"/>
        <pt x="585" y="370" on="0"/>
        <pt x="673" y="370" on="1"/>
        <pt x="762" y="370" on="1"/>
        <pt x="777" y="362" on="0"/>
        <pt x="777" y="338" on="0"/>
        <pt x="767" y="333" on="1"/>
        <pt x="761" y="330" on="0"/>
        <pt x="668" y="330" on="1"/>
        <pt x="573" y="330" on="1"/>
        <pt x="567" y="305" on="1"/>
        <pt x="560" y="282" on="0"/>
        <pt x="545" y="226" on="1"/>
        <pt x="530" y="171" on="1"/>
        <pt x="646" y="170" on="1"/>
        <pt x="761" y="170" on="0"/>
        <pt x="767" y="167" on="1"/>
        <pt x="777" y="161" on="0"/>
        <pt x="777" y="150" on="1"/>
        <pt x="777" y="138" on="0"/>
        <pt x="762" y="130" on="1"/>
        <pt x="640" y="130" on="1"/>
        <pt x="518" y="130" on="0"/>
        <pt x="518" y="129" on="1"/>
        <pt x="435" y="-181" on="0"/>
        <pt x="432" y="-185" on="1"/>
        <pt x="426" y="-194" on="0"/>
        <pt x="416" y="-194" on="1"/>
        <pt x="410" y="-194" on="0"/>
        <pt x="397" y="-185" on="0"/>
        <pt x="397" y="-178" on="1"/>
        <pt x="397" y="-170" on="0"/>
        <pt x="437" y="-16" on="0"/>
        <pt x="457" y="56" on="1"/>
        <pt x="477" y="129" on="1"/>
        <pt x="477" y="130" on="0"/>
        <pt x="383" y="130" on="1"/>
        <pt x="288" y="130" on="0"/>
        <pt x="288" y="129" on="1"/>
        <pt x="205" y="-181" on="0"/>
        <pt x="202" y="-185" on="1"/>
        <pt x="196" y="-194" on="0"/>
        <pt x="186" y="-194" on="1"/>
        <pt x="180" y="-194" on="0"/>
        <pt x="167" y="-185" on="0"/>
        <pt x="167" y="-178" on="1"/>
        <pt x="167" y="-170" on="0"/>
        <pt x="207" y="-17" on="0"/>
        <pt x="227" y="56" on="1"/>
        <pt x="247" y="129" on="1"/>
        <pt x="247" y="130" on="0"/>
        <pt x="159" y="130" on="1"/>
        <pt x="70" y="130" on="1"/>
        <pt x="56" y="137" on="0"/>
        <pt x="56" y="150" on="1"/>
        <pt x="56" y="165" on="0"/>
        <pt x="72" y="170" on="1"/>
        <pt x="259" y="170" on="1"/>
        <pt x="265" y="195" on="1"/>
        <pt x="273" y="222" on="0"/>
        <pt x="287" y="275" on="1"/>
        <pt x="302" y="330" on="1"/>
        <pt x="186" y="330" on="1"/>
        <pt x="70" y="331" on="1"/>
        <pt x="63" y="334" on="0"/>
        <pt x="58" y="339" on="1"/>
        <pt x="56" y="343" on="0"/>
      </contour>
      <contour>
        <pt x="489" y="170" on="1"/>
        <pt x="489" y="172" on="0"/>
        <pt x="532" y="330" on="1"/>
        <pt x="343" y="330" on="1"/>
        <pt x="337" y="305" on="1"/>
        <pt x="330" y="282" on="0"/>
        <pt x="315" y="226" on="1"/>
        <pt x="300" y="171" on="1"/>
        <pt x="394" y="170" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 6 values pushed */
          0 1 5 0 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          36
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 38 values pushed */
          4 2 2 0 14 13 2 5 6 0 5 98 16 15 12 3 6 11 9 2 7 8 6 7 99
          3 1 1 1 13 75 10 1 8 8 18 8 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 38 values pushed */
          4 2 2 0 14 13 2 5 6 0 5 98 16 15 12 3 6 11 9 2 7 8 6 7 99
          3 1 1 1 15 75 10 1 8 8 18 8 76
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 30 values pushed */
          97 97 97 105 97 104 100 99 93 91 87 86 82 79 72 71 67 64 20 37 36 36 55 20 69
          20 34 17 6 29
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="o" xMin="28" yMin="-10" xMax="471" yMax="460">
      <contour>
        <pt x="471" y="313" on="0"/>
        <pt x="471" y="125" on="0"/>
        <pt x="345" y="-10" on="0"/>
        <pt x="250" y="-10" on="1"/>
        <pt x="223" y="-10" on="0"/>
        <pt x="215" y="-8" on="1"/>
        <pt x="141" y="6" on="0"/>
        <pt x="93" y="57" on="1"/>
        <pt x="28" y="122" on="0"/>
        <pt x="28" y="222" on="1"/>
        <pt x="28" y="311" on="0"/>
        <pt x="143" y="450" on="0"/>
        <pt x="232" y="460" on="1"/>
        <pt x="244" y="460" on="1"/>
        <pt x="275" y="460" on="0"/>
        <pt x="281" y="459" on="1"/>
        <pt x="363" y="445" on="0"/>
      </contour>
      <contour>
        <pt x="377" y="230" on="1"/>
        <pt x="377" y="301" on="0"/>
        <pt x="310" y="385" on="0"/>
        <pt x="248" y="385" on="1"/>
        <pt x="199" y="385" on="0"/>
        <pt x="162" y="350" on="1"/>
        <pt x="122" y="310" on="0"/>
        <pt x="122" y="230" on="1"/>
        <pt x="122" y="130" on="0"/>
        <pt x="182" y="88" on="1"/>
        <pt x="211" y="69" on="0"/>
        <pt x="250" y="69" on="1"/>
        <pt x="273" y="69" on="0"/>
        <pt x="289" y="74" on="1"/>
        <pt x="377" y="106" on="0"/>
      </contour>
      <instructions><assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          47
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 21 values pushed */
          0 2 2 1 91 0 1 1 24 75 0 3 3 0 91 0 0 0 25 0 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 19 values pushed */
          0 1 0 2 3 1 2 99 0 3 3 0 91 0 0 0 25 0 76
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 7 values pushed */
          38 37 40 34 4 6 24
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="one" xMin="83" yMin="0" xMax="430" yMax="678">
      <contour>
        <pt x="94" y="612" on="1"/>
        <pt x="219" y="618" on="0"/>
        <pt x="277" y="672" on="1"/>
        <pt x="284" y="678" on="1"/>
        <pt x="307" y="678" on="1"/>
        <pt x="307" y="73" on="1"/>
        <pt x="430" y="73" on="1"/>
        <pt x="430" y="0" on="1"/>
        <pt x="88" y="0" on="1"/>
        <pt x="88" y="73" on="1"/>
        <pt x="213" y="73" on="1"/>
        <pt x="213" y="317" on="1"/>
        <pt x="213" y="560" on="0"/>
        <pt x="212" y="560" on="1"/>
        <pt x="211" y="559" on="0"/>
        <pt x="198" y="555" on="1"/>
        <pt x="154" y="541" on="0"/>
        <pt x="96" y="540" on="1"/>
        <pt x="83" y="539" on="1"/>
        <pt x="83" y="612" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 6 values pushed */
          18 1 2 5 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          32
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 26 values pushed */
          6 1 0 0 5 2 0 5 99 0 1 1 13 75 4 1 2 2 3 90 0 3 3 14 3
          76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          34
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 26 values pushed */
          0 1 0 1 114 6 1 0 0 5 2 0 5 99 4 1 2 2 3 90 0 3 3 14 3
          76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 26 values pushed */
          0 1 0 1 114 6 1 0 0 5 2 0 5 99 4 1 2 2 3 90 0 3 3 17 3
          76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 19 values pushed */
          1 0 17 16 10 9 8 7 6 5 4 3 0 19 1 19 7 6 20
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="p" xMin="75" yMin="-194" xMax="483" yMax="455">
      <contour>
        <pt x="166" y="404" on="1"/>
        <pt x="238" y="455" on="0"/>
        <pt x="337" y="455" on="1"/>
        <pt x="358" y="455" on="0"/>
        <pt x="367" y="452" on="1"/>
        <pt x="419" y="436" on="0"/>
        <pt x="483" y="301" on="0"/>
        <pt x="483" y="222" on="1"/>
        <pt x="483" y="214" on="1"/>
        <pt x="480" y="130" on="0"/>
        <pt x="397" y="6" on="0"/>
        <pt x="331" y="-9" on="1"/>
        <pt x="325" y="-10" on="0"/>
        <pt x="306" y="-10" on="1"/>
        <pt x="234" y="-10" on="0"/>
        <pt x="177" y="32" on="1"/>
        <pt x="169" y="38" on="0"/>
        <pt x="168" y="38" on="1"/>
        <pt x="168" y="-194" on="1"/>
        <pt x="75" y="-194" on="1"/>
        <pt x="75" y="444" on="1"/>
        <pt x="165" y="444" on="1"/>
        <pt x="165" y="424" on="1"/>
      </contour>
      <contour>
        <pt x="390" y="222" on="1"/>
        <pt x="390" y="284" on="0"/>
        <pt x="320" y="376" on="0"/>
        <pt x="266" y="376" on="1"/>
        <pt x="215" y="376" on="0"/>
        <pt x="177" y="340" on="1"/>
        <pt x="168" y="332" on="1"/>
        <pt x="168" y="118" on="1"/>
        <pt x="200" y="66" on="0"/>
        <pt x="257" y="66" on="1"/>
        <pt x="274" y="66" on="0"/>
        <pt x="279" y="67" on="1"/>
        <pt x="326" y="78" on="0"/>
        <pt x="390" y="162" on="0"/>
      </contour>
      <instructions><assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          21
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 11 values pushed */
          0 1 4 0 30 29 2 5 4 2 74
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          22
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 11 values pushed */
          0 1 4 3 30 29 2 5 4 2 74
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          23
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 11 values pushed */
          0 1 4 0 30 29 2 5 4 2 74
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 11 values pushed */
          0 1 4 3 30 29 2 5 4 2 74
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          21
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 27 values pushed */
          0 4 4 0 91 3 1 0 0 24 75 0 5 5 1 91 0 1 1 25 75 0 2 2 18
          2 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          22
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 31 values pushed */
          0 3 3 16 75 0 4 4 0 91 0 0 0 24 75 0 5 5 1 91 0 1 1 25 75
          0 2 2 18 2 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          23
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 27 values pushed */
          0 4 4 0 91 3 1 0 0 24 75 0 5 5 1 91 0 1 1 25 75 0 2 2 18
          2 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          47
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 31 values pushed */
          0 3 3 16 75 0 4 4 0 91 0 0 0 24 75 0 5 5 1 91 0 1 1 25 75
          0 2 2 18 2 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 29 values pushed */
          0 0 0 4 5 0 4 99 0 5 5 1 91 0 1 1 25 75 0 3 3 2 89 0 2
          2 18 2 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 9 values pushed */
          36 36 17 20 56 33 6 6 26
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="parenleft" xMin="74" yMin="-250" xMax="333" yMax="750">
      <contour>
        <pt x="74" y="-64" on="0"/>
        <pt x="74" y="564" on="0"/>
        <pt x="240" y="733" on="1"/>
        <pt x="257" y="750" on="1"/>
        <pt x="333" y="750" on="1"/>
        <pt x="323" y="739" on="1"/>
        <pt x="167" y="573" on="0"/>
        <pt x="167" y="-73" on="0"/>
        <pt x="323" y="-239" on="1"/>
        <pt x="333" y="-250" on="1"/>
        <pt x="257" y="-250" on="1"/>
        <pt x="240" y="-233" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 14 values pushed */
          0 0 1 0 114 0 1 1 105 21 19 2 6 22
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="parenright" xMin="55" yMin="-250" xMax="314" yMax="750">
      <contour>
        <pt x="221" y="-73" on="0"/>
        <pt x="221" y="573" on="0"/>
        <pt x="65" y="739" on="1"/>
        <pt x="55" y="750" on="1"/>
        <pt x="131" y="750" on="1"/>
        <pt x="148" y="733" on="1"/>
        <pt x="314" y="567" on="0"/>
        <pt x="314" y="-67" on="0"/>
        <pt x="148" y="-233" on="1"/>
        <pt x="131" y="-250" on="1"/>
        <pt x="55" y="-250" on="1"/>
        <pt x="65" y="-239" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 14 values pushed */
          0 0 1 0 114 0 1 1 105 21 19 2 6 22
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="percent" xMin="56" yMin="-56" xMax="776" yMax="750">
      <contour>
        <pt x="195" y="750" on="1"/>
        <pt x="251" y="750" on="0"/>
        <pt x="332" y="633" on="0"/>
        <pt x="332" y="548" on="1"/>
        <pt x="332" y="446" on="0"/>
        <pt x="276" y="385" on="1"/>
        <pt x="239" y="347" on="0"/>
        <pt x="195" y="347" on="1"/>
        <pt x="123" y="347" on="0"/>
        <pt x="80" y="434" on="1"/>
        <pt x="56" y="484" on="0"/>
        <pt x="56" y="549" on="1"/>
        <pt x="56" y="646" on="0"/>
        <pt x="108" y="706" on="1"/>
        <pt x="145" y="750" on="0"/>
      </contour>
      <contour>
        <pt x="206" y="672" on="1"/>
        <pt x="198" y="674" on="0"/>
        <pt x="195" y="674" on="1"/>
        <pt x="173" y="674" on="0"/>
        <pt x="159" y="646" on="1"/>
        <pt x="145" y="615" on="0"/>
        <pt x="145" y="549" on="1"/>
        <pt x="145" y="481" on="0"/>
        <pt x="173" y="423" on="0"/>
        <pt x="195" y="423" on="1"/>
        <pt x="198" y="423" on="0"/>
        <pt x="206" y="425" on="1"/>
        <pt x="232" y="435" on="0"/>
        <pt x="243" y="492" on="1"/>
        <pt x="248" y="511" on="0"/>
        <pt x="248" y="549" on="1"/>
        <pt x="248" y="586" on="0"/>
        <pt x="243" y="605" on="1"/>
        <pt x="232" y="662" on="0"/>
      </contour>
      <contour>
        <pt x="197" y="-56" on="1"/>
        <pt x="189" y="-56" on="0"/>
        <pt x="176" y="-43" on="0"/>
        <pt x="176" y="-35" on="1"/>
        <pt x="176" y="-33" on="0"/>
        <pt x="178" y="-27" on="1"/>
        <pt x="179" y="-25" on="0"/>
        <pt x="620" y="737" on="0"/>
        <pt x="623" y="741" on="1"/>
        <pt x="627" y="750" on="0"/>
        <pt x="639" y="750" on="1"/>
        <pt x="648" y="750" on="0"/>
        <pt x="660" y="738" on="0"/>
        <pt x="659" y="729" on="1"/>
        <pt x="657" y="721" on="0"/>
        <pt x="212" y="-49" on="0"/>
        <pt x="207" y="-52" on="1"/>
        <pt x="203" y="-56" on="0"/>
      </contour>
      <contour>
        <pt x="639" y="347" on="1"/>
        <pt x="696" y="347" on="0"/>
        <pt x="776" y="229" on="0"/>
        <pt x="776" y="146" on="1"/>
        <pt x="776" y="74" on="0"/>
        <pt x="718" y="-33" on="0"/>
        <pt x="672" y="-50" on="1"/>
        <pt x="656" y="-56" on="0"/>
        <pt x="639" y="-56" on="1"/>
        <pt x="599" y="-56" on="0"/>
        <pt x="530" y="7" on="0"/>
        <pt x="513" y="59" on="1"/>
        <pt x="500" y="97" on="0"/>
        <pt x="500" y="146" on="1"/>
        <pt x="500" y="242" on="0"/>
        <pt x="552" y="303" on="1"/>
        <pt x="589" y="347" on="0"/>
      </contour>
      <contour>
        <pt x="650" y="269" on="1"/>
        <pt x="642" y="271" on="0"/>
        <pt x="639" y="271" on="1"/>
        <pt x="617" y="271" on="0"/>
        <pt x="603" y="243" on="1"/>
        <pt x="589" y="212" on="0"/>
        <pt x="589" y="146" on="1"/>
        <pt x="589" y="78" on="0"/>
        <pt x="617" y="20" on="0"/>
        <pt x="639" y="20" on="1"/>
        <pt x="642" y="20" on="0"/>
        <pt x="650" y="22" on="1"/>
        <pt x="676" y="32" on="0"/>
        <pt x="687" y="89" on="1"/>
        <pt x="692" y="108" on="0"/>
        <pt x="692" y="146" on="1"/>
        <pt x="692" y="183" on="0"/>
        <pt x="687" y="202" on="1"/>
        <pt x="676" y="259" on="0"/>
      </contour>
      <instructions><assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          23
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 39 values pushed */
          5 10 2 0 0 2 3 0 2 99 12 1 6 0 8 9 6 8 100 0 9 7 11 2 4
          9 4 95 0 1 1 3 91 0 3 3 16 1 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 45 values pushed */
          5 10 2 0 0 2 3 0 2 99 0 3 0 1 6 3 1 99 12 1 6 0 8 9 6
          8 100 0 9 4 4 9 87 0 9 9 4 91 7 11 2 4 9 4 79
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 35 values pushed */
          53 52 35 34 1 0 78 77 72 70 61 59 52 68 53 68 45 43 34 51 35 51 24 23 18
          16 8 6 0 14 1 14 13 6 20
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="period" xMin="90" yMin="0" xMax="188" yMax="98">
      <contour>
        <pt x="90" y="0" on="1"/>
        <pt x="90" y="98" on="1"/>
        <pt x="188" y="98" on="1"/>
        <pt x="188" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          34
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 12 values pushed */
          0 0 0 1 89 2 1 1 1 14 1 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 12 values pushed */
          0 0 0 1 89 2 1 1 1 17 1 76
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 10 values pushed */
          0 0 0 3 0 3 17 3 6 21
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="plus" xMin="56" yMin="-82" xMax="722" yMax="583">
      <contour>
        <pt x="56" y="237" on="0"/>
        <pt x="56" y="263" on="0"/>
        <pt x="70" y="270" on="1"/>
        <pt x="369" y="270" on="1"/>
        <pt x="369" y="420" on="1"/>
        <pt x="370" y="570" on="1"/>
        <pt x="380" y="583" on="0"/>
        <pt x="389" y="583" on="1"/>
        <pt x="402" y="583" on="0"/>
        <pt x="409" y="568" on="1"/>
        <pt x="409" y="270" on="1"/>
        <pt x="707" y="270" on="1"/>
        <pt x="722" y="262" on="0"/>
        <pt x="722" y="238" on="0"/>
        <pt x="707" y="230" on="1"/>
        <pt x="409" y="230" on="1"/>
        <pt x="409" y="-68" on="1"/>
        <pt x="402" y="-82" on="0"/>
        <pt x="376" y="-82" on="0"/>
        <pt x="369" y="-68" on="1"/>
        <pt x="369" y="230" on="1"/>
        <pt x="70" y="230" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 47 values pushed */
          9 5 2 0 1 19 16 2 4 3 2 74 0 1 0 4 1 87 2 1 0 5 1 3 4
          0 3 97 0 1 1 4 91 0 4 1 4 79 18 18 19 18 35 18 6 6 26
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="q" xMin="33" yMin="-194" xMax="441" yMax="455">
      <contour>
        <pt x="33" y="220" on="1"/>
        <pt x="33" y="313" on="0"/>
        <pt x="126" y="445" on="0"/>
        <pt x="195" y="454" on="1"/>
        <pt x="206" y="454" on="1"/>
        <pt x="235" y="454" on="0"/>
        <pt x="241" y="453" on="1"/>
        <pt x="299" y="442" on="0"/>
        <pt x="341" y="406" on="1"/>
        <pt x="351" y="398" on="1"/>
        <pt x="351" y="455" on="1"/>
        <pt x="441" y="455" on="1"/>
        <pt x="441" y="-194" on="1"/>
        <pt x="348" y="-194" on="1"/>
        <pt x="348" y="41" on="1"/>
        <pt x="338" y="35" on="1"/>
        <pt x="276" y="-8" on="0"/>
        <pt x="198" y="-11" on="1"/>
        <pt x="171" y="-11" on="0"/>
        <pt x="154" y="-5" on="1"/>
        <pt x="102" y="11" on="0"/>
        <pt x="33" y="141" on="0"/>
      </contour>
      <contour>
        <pt x="351" y="298" on="1"/>
        <pt x="336" y="335" on="0"/>
        <pt x="295" y="375" on="0"/>
        <pt x="256" y="375" on="1"/>
        <pt x="231" y="375" on="0"/>
        <pt x="207" y="363" on="1"/>
        <pt x="170" y="344" on="0"/>
        <pt x="126" y="267" on="0"/>
        <pt x="126" y="220" on="1"/>
        <pt x="126" y="155" on="0"/>
        <pt x="199" y="65" on="0"/>
        <pt x="251" y="65" on="1"/>
        <pt x="308" y="65" on="0"/>
        <pt x="345" y="115" on="1"/>
        <pt x="351" y="123" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 15 values pushed */
          9 1 4 0 36 22 2 5 4 14 1 3 5 3 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          47
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 27 values pushed */
          0 4 4 0 91 1 1 0 0 24 75 0 5 5 3 91 0 3 3 25 75 0 2 2 18
          2 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 28 values pushed */
          0 4 5 0 4 87 0 5 5 3 91 0 3 3 25 75 1 1 0 0 2 89 0 2 2
          18 2 76
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 9 values pushed */
          38 38 35 17 21 35 6 6 26
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="question" xMin="55" yMin="0" xMax="416" yMax="704">
      <contour>
        <pt x="83" y="576" on="1"/>
        <pt x="83" y="577" on="0"/>
        <pt x="56" y="651" on="0"/>
        <pt x="55" y="652" on="1"/>
        <pt x="55" y="656" on="0"/>
        <pt x="94" y="675" on="1"/>
        <pt x="154" y="704" on="0"/>
        <pt x="214" y="704" on="1"/>
        <pt x="254" y="704" on="0"/>
        <pt x="265" y="703" on="1"/>
        <pt x="335" y="694" on="0"/>
        <pt x="416" y="615" on="0"/>
        <pt x="416" y="546" on="1"/>
        <pt x="416" y="474" on="0"/>
        <pt x="360" y="426" on="1"/>
        <pt x="273" y="351" on="0"/>
        <pt x="262" y="255" on="1"/>
        <pt x="261" y="249" on="0"/>
        <pt x="261" y="216" on="1"/>
        <pt x="261" y="186" on="1"/>
        <pt x="183" y="186" on="1"/>
        <pt x="183" y="225" on="1"/>
        <pt x="184" y="281" on="0"/>
        <pt x="194" y="322" on="1"/>
        <pt x="219" y="419" on="0"/>
        <pt x="292" y="483" on="1"/>
        <pt x="294" y="485" on="0"/>
        <pt x="304" y="494" on="0"/>
        <pt x="306" y="495" on="1"/>
        <pt x="323" y="517" on="0"/>
        <pt x="323" y="550" on="1"/>
        <pt x="323" y="594" on="0"/>
        <pt x="274" y="629" on="0"/>
        <pt x="223" y="629" on="1"/>
        <pt x="187" y="629" on="0"/>
        <pt x="157" y="618" on="1"/>
        <pt x="122" y="607" on="0"/>
        <pt x="91" y="583" on="1"/>
      </contour>
      <contour>
        <pt x="173" y="0" on="1"/>
        <pt x="173" y="98" on="1"/>
        <pt x="271" y="98" on="1"/>
        <pt x="271" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 7 values pushed */
          16 0 2 1 2 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          34
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 30 values pushed */
          0 1 2 3 2 1 3 112 0 2 2 0 91 0 0 0 23 75 0 3 3 4 89 5 1
          4 4 14 4 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 30 values pushed */
          0 1 2 3 2 1 3 112 0 2 2 0 91 0 0 0 23 75 0 3 3 4 89 5 1
          4 4 17 4 76
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 13 values pushed */
          38 38 38 41 38 41 21 44 27 38 6 6 24
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="quotedbl" xMin="32" yMin="471" xMax="325" yMax="694">
      <contour>
        <pt x="33" y="596" on="1"/>
        <pt x="33" y="694" on="1"/>
        <pt x="131" y="694" on="1"/>
        <pt x="131" y="597" on="1"/>
        <pt x="114" y="555" on="0"/>
        <pt x="82" y="471" on="1"/>
        <pt x="32" y="471" on="1"/>
        <pt x="47" y="532" on="1"/>
        <pt x="62" y="593" on="0"/>
        <pt x="63" y="594" on="1"/>
        <pt x="63" y="596" on="0"/>
        <pt x="48" y="596" on="1"/>
      </contour>
      <contour>
        <pt x="227" y="596" on="1"/>
        <pt x="227" y="694" on="1"/>
        <pt x="325" y="694" on="1"/>
        <pt x="325" y="597" on="1"/>
        <pt x="308" y="555" on="0"/>
        <pt x="276" y="471" on="1"/>
        <pt x="226" y="471" on="1"/>
        <pt x="241" y="532" on="1"/>
        <pt x="256" y="593" on="0"/>
        <pt x="257" y="594" on="1"/>
        <pt x="257" y="596" on="0"/>
        <pt x="242" y="596" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 7 values pushed */
          15 3 2 2 0 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          10
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 22 values pushed */
          4 1 1 2 2 1 103 7 5 6 3 2 2 0 89 3 1 0 0 13 2 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          36
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 21 values pushed */
          4 1 1 2 1 115 7 5 6 3 2 2 0 89 3 1 0 0 13 2 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 21 values pushed */
          4 1 1 2 1 115 7 5 6 3 2 2 0 89 3 1 0 0 15 2 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 21 values pushed */
          12 12 0 0 12 23 12 23 18 17 14 13 0 11 0 11 19 17 8 6 22
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="quotedblleft" xMin="174" yMin="471" xMax="467" yMax="694">
      <contour>
        <pt x="174" y="568" on="1"/>
        <pt x="182" y="589" on="0"/>
        <pt x="216" y="673" on="0"/>
        <pt x="224" y="694" on="1"/>
        <pt x="273" y="694" on="1"/>
        <pt x="258" y="633" on="1"/>
        <pt x="243" y="572" on="0"/>
        <pt x="242" y="571" on="1"/>
        <pt x="242" y="569" on="0"/>
        <pt x="257" y="569" on="1"/>
        <pt x="272" y="569" on="1"/>
        <pt x="272" y="471" on="1"/>
        <pt x="174" y="471" on="1"/>
      </contour>
      <contour>
        <pt x="368" y="568" on="1"/>
        <pt x="377" y="589" on="0"/>
        <pt x="410" y="673" on="0"/>
        <pt x="418" y="694" on="1"/>
        <pt x="467" y="694" on="1"/>
        <pt x="452" y="633" on="1"/>
        <pt x="437" y="572" on="0"/>
        <pt x="436" y="571" on="1"/>
        <pt x="436" y="569" on="0"/>
        <pt x="451" y="569" on="1"/>
        <pt x="466" y="569" on="1"/>
        <pt x="466" y="471" on="1"/>
        <pt x="368" y="471" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 7 values pushed */
          13 0 2 2 1 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          36
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 16 values pushed */
          4 1 1 5 1 2 1 2 94 3 1 0 0 13 0 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 16 values pushed */
          4 1 1 5 1 2 1 2 94 3 1 0 0 15 0 76
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 9 values pushed */
          17 21 20 17 21 19 6 6 26
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="quotedblright" xMin="32" yMin="471" xMax="325" yMax="694">
      <contour>
        <pt x="33" y="596" on="1"/>
        <pt x="33" y="694" on="1"/>
        <pt x="131" y="694" on="1"/>
        <pt x="131" y="597" on="1"/>
        <pt x="114" y="555" on="0"/>
        <pt x="82" y="471" on="1"/>
        <pt x="32" y="471" on="1"/>
        <pt x="47" y="532" on="1"/>
        <pt x="62" y="593" on="0"/>
        <pt x="63" y="594" on="1"/>
        <pt x="63" y="596" on="0"/>
        <pt x="48" y="596" on="1"/>
      </contour>
      <contour>
        <pt x="227" y="596" on="1"/>
        <pt x="227" y="694" on="1"/>
        <pt x="325" y="694" on="1"/>
        <pt x="325" y="597" on="1"/>
        <pt x="308" y="555" on="0"/>
        <pt x="276" y="471" on="1"/>
        <pt x="226" y="471" on="1"/>
        <pt x="241" y="532" on="1"/>
        <pt x="256" y="593" on="0"/>
        <pt x="257" y="594" on="1"/>
        <pt x="257" y="596" on="0"/>
        <pt x="242" y="596" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 7 values pushed */
          15 3 2 2 0 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          10
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 22 values pushed */
          4 1 1 2 2 1 103 7 5 6 3 2 2 0 89 3 1 0 0 13 2 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          36
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 21 values pushed */
          4 1 1 2 1 115 7 5 6 3 2 2 0 89 3 1 0 0 13 2 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 21 values pushed */
          4 1 1 2 1 115 7 5 6 3 2 2 0 89 3 1 0 0 15 2 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 21 values pushed */
          12 12 0 0 12 23 12 23 18 17 14 13 0 11 0 11 19 17 8 6 22
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="quoteleft" xMin="90" yMin="471" xMax="189" yMax="694">
      <contour>
        <pt x="90" y="568" on="1"/>
        <pt x="98" y="589" on="0"/>
        <pt x="131" y="673" on="0"/>
        <pt x="140" y="694" on="1"/>
        <pt x="189" y="694" on="1"/>
        <pt x="174" y="633" on="1"/>
        <pt x="159" y="572" on="0"/>
        <pt x="158" y="571" on="1"/>
        <pt x="158" y="569" on="0"/>
        <pt x="173" y="569" on="1"/>
        <pt x="188" y="569" on="1"/>
        <pt x="188" y="471" on="1"/>
        <pt x="90" y="471" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 6 values pushed */
          0 1 2 1 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          36
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 13 values pushed */
          0 1 0 2 1 2 94 0 0 0 13 0 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 13 values pushed */
          0 1 0 2 1 2 94 0 0 0 15 0 76
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 6 values pushed */
          17 21 19 3 6 23
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="quoteright" xMin="89" yMin="471" xMax="188" yMax="694">
      <contour>
        <pt x="90" y="596" on="1"/>
        <pt x="90" y="694" on="1"/>
        <pt x="188" y="694" on="1"/>
        <pt x="188" y="597" on="1"/>
        <pt x="171" y="555" on="0"/>
        <pt x="139" y="471" on="1"/>
        <pt x="89" y="471" on="1"/>
        <pt x="104" y="532" on="1"/>
        <pt x="119" y="593" on="0"/>
        <pt x="120" y="594" on="1"/>
        <pt x="120" y="596" on="0"/>
        <pt x="105" y="596" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 6 values pushed */
          3 1 2 0 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          10
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 18 values pushed */
          0 1 2 2 1 103 3 1 2 2 0 89 0 0 0 13 2 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          36
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 17 values pushed */
          0 1 2 1 115 3 1 2 2 0 89 0 0 0 13 2 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 17 values pushed */
          0 1 2 1 115 3 1 2 2 0 89 0 0 0 15 2 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 11 values pushed */
          0 0 0 11 0 11 19 17 4 6 22
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="quotesingle" xMin="89" yMin="471" xMax="188" yMax="694">
      <contour>
        <pt x="90" y="596" on="1"/>
        <pt x="90" y="694" on="1"/>
        <pt x="188" y="694" on="1"/>
        <pt x="188" y="597" on="1"/>
        <pt x="171" y="555" on="0"/>
        <pt x="139" y="471" on="1"/>
        <pt x="89" y="471" on="1"/>
        <pt x="104" y="532" on="1"/>
        <pt x="119" y="593" on="0"/>
        <pt x="120" y="594" on="1"/>
        <pt x="120" y="596" on="0"/>
        <pt x="105" y="596" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 6 values pushed */
          3 1 2 0 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          10
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 18 values pushed */
          0 1 2 2 1 103 3 1 2 2 0 89 0 0 0 13 2 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          36
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 17 values pushed */
          0 1 2 1 115 3 1 2 2 0 89 0 0 0 13 2 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 17 values pushed */
          0 1 2 1 115 3 1 2 2 0 89 0 0 0 15 2 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 11 values pushed */
          0 0 0 11 0 11 19 17 4 6 22
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="r" xMin="74" yMin="0" xMax="327" yMax="455">
      <contour>
        <pt x="171" y="389" on="1"/>
        <pt x="237" y="455" on="0"/>
        <pt x="320" y="455" on="1"/>
        <pt x="327" y="455" on="1"/>
        <pt x="327" y="373" on="1"/>
        <pt x="317" y="373" on="1"/>
        <pt x="261" y="369" on="0"/>
        <pt x="177" y="301" on="0"/>
        <pt x="167" y="248" on="1"/>
        <pt x="165" y="239" on="0"/>
        <pt x="164" y="119" on="1"/>
        <pt x="164" y="0" on="1"/>
        <pt x="74" y="0" on="1"/>
        <pt x="74" y="450" on="1"/>
        <pt x="159" y="450" on="1"/>
        <pt x="159" y="377" on="1"/>
      </contour>
      <instructions><assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          45
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          PUSHB[ ]	/* 6 values pushed */
          15 1 1 0 1 74
          ELSE[ ]	/* Else */
          PUSHB[ ]	/* 6 values pushed */
          15 1 1 3 1 74
          EIF[ ]	/* EndIf */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          34
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 17 values pushed */
          0 1 1 0 91 3 1 0 0 24 75 0 2 2 14 2 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          45
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 17 values pushed */
          0 1 1 0 91 3 1 0 0 24 75 0 2 2 17 2 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          47
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 21 values pushed */
          0 3 3 16 75 0 1 1 0 91 0 0 0 24 75 0 2 2 17 2 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 19 values pushed */
          0 0 0 1 2 0 1 97 0 3 3 2 89 0 2 2 17 2 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 7 values pushed */
          17 22 18 17 4 6 24
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="s" xMin="28" yMin="-10" xMax="360" yMax="460">
      <contour>
        <pt x="28" y="35" on="1"/>
        <pt x="29" y="36" on="0"/>
        <pt x="36" y="76" on="0"/>
        <pt x="42" y="115" on="0"/>
        <pt x="43" y="115" on="1"/>
        <pt x="53" y="109" on="1"/>
        <pt x="122" y="68" on="0"/>
        <pt x="193" y="68" on="1"/>
        <pt x="256" y="68" on="0"/>
        <pt x="271" y="106" on="1"/>
        <pt x="274" y="115" on="0"/>
        <pt x="274" y="123" on="1"/>
        <pt x="274" y="152" on="0"/>
        <pt x="248" y="167" on="1"/>
        <pt x="235" y="177" on="0"/>
        <pt x="187" y="186" on="1"/>
        <pt x="135" y="197" on="0"/>
        <pt x="115" y="207" on="1"/>
        <pt x="66" y="229" on="0"/>
        <pt x="46" y="273" on="1"/>
        <pt x="33" y="298" on="0"/>
        <pt x="33" y="326" on="1"/>
        <pt x="33" y="383" on="0"/>
        <pt x="101" y="452" on="0"/>
        <pt x="162" y="459" on="1"/>
        <pt x="167" y="460" on="0"/>
        <pt x="175" y="460" on="1"/>
        <pt x="190" y="460" on="1"/>
        <pt x="272" y="460" on="0"/>
        <pt x="345" y="429" on="1"/>
        <pt x="345" y="428" on="0"/>
        <pt x="338" y="388" on="1"/>
        <pt x="331" y="349" on="1"/>
        <pt x="325" y="352" on="0"/>
        <pt x="318" y="356" on="1"/>
        <pt x="258" y="386" on="0"/>
        <pt x="188" y="386" on="1"/>
        <pt x="138" y="386" on="0"/>
        <pt x="125" y="360" on="1"/>
        <pt x="119" y="348" on="0"/>
        <pt x="119" y="336" on="1"/>
        <pt x="119" y="307" on="0"/>
        <pt x="148" y="292" on="1"/>
        <pt x="158" y="287" on="0"/>
        <pt x="207" y="277" on="1"/>
        <pt x="255" y="268" on="0"/>
        <pt x="278" y="256" on="1"/>
        <pt x="333" y="227" on="0"/>
        <pt x="352" y="175" on="1"/>
        <pt x="360" y="153" on="0"/>
        <pt x="360" y="130" on="1"/>
        <pt x="360" y="62" on="0"/>
        <pt x="273" y="-10" on="0"/>
        <pt x="195" y="-10" on="1"/>
        <pt x="119" y="-10" on="0"/>
        <pt x="46" y="24" on="1"/>
        <pt x="28" y="32" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 10 values pushed */
          29 1 2 1 32 1 0 2 2 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          47
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 21 values pushed */
          0 2 2 1 91 0 1 1 24 75 0 0 0 3 91 0 3 3 25 3 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 19 values pushed */
          0 1 0 2 0 1 2 99 0 0 0 3 91 0 3 3 25 3 76
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 10 values pushed */
          54 52 37 35 28 26 38 4 6 21
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="semicolon" xMin="89" yMin="-125" xMax="188" yMax="444">
      <contour>
        <pt x="90" y="346" on="1"/>
        <pt x="90" y="444" on="1"/>
        <pt x="188" y="444" on="1"/>
        <pt x="188" y="346" on="1"/>
      </contour>
      <contour>
        <pt x="90" y="0" on="1"/>
        <pt x="90" y="98" on="1"/>
        <pt x="188" y="98" on="1"/>
        <pt x="188" y="1" on="1"/>
        <pt x="171" y="-41" on="0"/>
        <pt x="139" y="-125" on="1"/>
        <pt x="89" y="-125" on="1"/>
        <pt x="104" y="-64" on="1"/>
        <pt x="119" y="-3" on="0"/>
        <pt x="120" y="-2" on="1"/>
        <pt x="120" y="0" on="0"/>
        <pt x="105" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 6 values pushed */
          7 1 4 2 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          10
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 29 values pushed */
          0 3 4 4 3 103 5 1 1 1 0 89 0 0 0 16 75 0 2 2 4 89 6 1 4
          4 14 4 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          34
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 28 values pushed */
          0 3 4 3 115 5 1 1 1 0 89 0 0 0 16 75 0 2 2 4 89 6 1 4 4
          14 4 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          47
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 28 values pushed */
          0 3 4 3 115 5 1 1 1 0 89 0 0 0 16 75 0 2 2 4 89 6 1 4 4
          17 4 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 26 values pushed */
          0 3 4 3 115 0 0 5 1 1 2 0 1 97 0 2 2 4 89 6 1 4 4 17 4
          76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 20 values pushed */
          4 4 0 0 4 15 4 15 10 9 6 5 0 3 0 3 17 7 6 21
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="seven" xMin="42" yMin="-11" xMax="457" yMax="656">
      <contour>
        <pt x="42" y="570" on="1"/>
        <pt x="42" y="656" on="1"/>
        <pt x="457" y="656" on="1"/>
        <pt x="457" y="577" on="1"/>
        <pt x="447" y="564" on="1"/>
        <pt x="284" y="364" on="0"/>
        <pt x="251" y="103" on="1"/>
        <pt x="244" y="45" on="0"/>
        <pt x="244" y="0" on="1"/>
        <pt x="244" y="-11" on="1"/>
        <pt x="145" y="-11" on="1"/>
        <pt x="145" y="12" on="1"/>
        <pt x="149" y="85" on="0"/>
        <pt x="157" y="132" on="1"/>
        <pt x="197" y="371" on="0"/>
        <pt x="356" y="550" on="1"/>
        <pt x="361" y="556" on="0"/>
        <pt x="372" y="569" on="0"/>
        <pt x="374" y="571" on="1"/>
        <pt x="208" y="570" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 6 values pushed */
          3 1 2 0 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          34
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 15 values pushed */
          0 0 3 1 2 1 0 2 99 0 1 1 14 1 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          45
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 15 values pushed */
          0 0 3 1 2 1 0 2 99 0 1 1 17 1 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 22 values pushed */
          0 1 2 1 115 0 0 2 2 0 85 0 0 0 2 91 3 1 2 0 2 79
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 11 values pushed */
          0 0 0 19 0 17 23 17 4 6 22
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="six" xMin="42" yMin="-22" xMax="457" yMax="677">
      <contour>
        <pt x="301" y="677" on="1"/>
        <pt x="355" y="677" on="0"/>
        <pt x="408" y="658" on="1"/>
        <pt x="408" y="621" on="1"/>
        <pt x="408" y="585" on="0"/>
        <pt x="407" y="585" on="1"/>
        <pt x="406" y="585" on="1"/>
        <pt x="359" y="605" on="0"/>
        <pt x="308" y="605" on="1"/>
        <pt x="246" y="605" on="0"/>
        <pt x="159" y="506" on="0"/>
        <pt x="146" y="421" on="1"/>
        <pt x="143" y="403" on="0"/>
        <pt x="144" y="403" on="1"/>
        <pt x="145" y="402" on="0"/>
        <pt x="152" y="409" on="1"/>
        <pt x="206" y="459" on="0"/>
        <pt x="279" y="468" on="1"/>
        <pt x="285" y="469" on="0"/>
        <pt x="299" y="469" on="1"/>
        <pt x="315" y="469" on="0"/>
        <pt x="329" y="467" on="1"/>
        <pt x="372" y="459" on="0"/>
        <pt x="407" y="405" on="1"/>
        <pt x="457" y="330" on="0"/>
        <pt x="457" y="226" on="1"/>
        <pt x="457" y="126" on="0"/>
        <pt x="402" y="57" on="1"/>
        <pt x="369" y="15" on="0"/>
        <pt x="300" y="-22" on="0"/>
        <pt x="251" y="-22" on="1"/>
        <pt x="188" y="-22" on="0"/>
        <pt x="138" y="20" on="1"/>
        <pt x="92" y="59" on="0"/>
        <pt x="42" y="218" on="0"/>
        <pt x="42" y="318" on="1"/>
        <pt x="42" y="445" on="0"/>
        <pt x="145" y="630" on="0"/>
        <pt x="233" y="664" on="1"/>
        <pt x="266" y="677" on="0"/>
        <pt x="289" y="677" on="1"/>
      </contour>
      <contour>
        <pt x="277" y="392" on="1"/>
        <pt x="275" y="392" on="0"/>
        <pt x="264" y="393" on="0"/>
        <pt x="260" y="393" on="1"/>
        <pt x="245" y="393" on="0"/>
        <pt x="235" y="391" on="1"/>
        <pt x="194" y="383" on="0"/>
        <pt x="141" y="299" on="0"/>
        <pt x="141" y="243" on="1"/>
        <pt x="141" y="153" on="0"/>
        <pt x="172" y="104" on="1"/>
        <pt x="192" y="68" on="0"/>
        <pt x="230" y="56" on="1"/>
        <pt x="238" y="54" on="0"/>
        <pt x="251" y="54" on="1"/>
        <pt x="262" y="54" on="0"/>
        <pt x="274" y="56" on="1"/>
        <pt x="317" y="66" on="0"/>
        <pt x="342" y="116" on="1"/>
        <pt x="360" y="152" on="0"/>
        <pt x="360" y="226" on="1"/>
        <pt x="360" y="297" on="0"/>
        <pt x="344" y="332" on="1"/>
        <pt x="320" y="382" on="0"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 6 values pushed */
          2 1 1 0 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          30
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 35 values pushed */
          0 4 2 5 2 4 5 112 0 1 1 0 91 6 1 0 0 13 75 0 2 2 24 75 0
          5 5 3 92 0 3 3 22 3 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          34
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 33 values pushed */
          0 4 2 5 2 4 5 112 6 1 0 0 1 2 0 1 99 0 2 2 24 75 0 5 5
          3 92 0 3 3 22 3 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          40
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 33 values pushed */
          0 4 2 5 2 4 5 112 6 1 0 0 1 2 0 1 99 0 2 2 24 75 0 5 5
          3 92 0 3 3 25 3 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          47
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 30 values pushed */
          0 4 2 5 2 4 5 112 6 1 0 0 1 2 0 1 99 0 5 0 3 5 3 96 0
          2 2 24 2 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 40 values pushed */
          0 2 1 4 1 2 4 112 0 4 5 1 4 5 110 6 1 0 0 1 2 0 1 99 0
          5 3 3 5 87 0 5 5 3 92 0 3 5 3 80
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 19 values pushed */
          1 0 56 54 45 43 31 29 20 17 9 7 0 40 1 39 7 6 20
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="slash" xMin="56" yMin="-250" xMax="444" yMax="750">
      <contour>
        <pt x="75" y="-250" on="1"/>
        <pt x="68" y="-250" on="0"/>
        <pt x="56" y="-238" on="0"/>
        <pt x="56" y="-231" on="1"/>
        <pt x="56" y="-221" on="0"/>
        <pt x="404" y="736" on="0"/>
        <pt x="407" y="740" on="1"/>
        <pt x="412" y="750" on="0"/>
        <pt x="425" y="750" on="1"/>
        <pt x="433" y="749" on="0"/>
        <pt x="445" y="737" on="0"/>
        <pt x="444" y="730" on="1"/>
        <pt x="444" y="725" on="0"/>
        <pt x="97" y="-230" on="0"/>
        <pt x="92" y="-240" on="1"/>
        <pt x="85" y="-250" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 20 values pushed */
          0 0 1 0 114 2 1 1 1 105 0 0 0 15 0 15 23 3 6 21
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="space"/><!-- contains no outline data -->

    <TTGlyph name="t" xMin="18" yMin="-10" xMax="333" yMax="571">
      <contour>
        <pt x="314" y="98" on="1"/>
        <pt x="333" y="27" on="1"/>
        <pt x="333" y="25" on="0"/>
        <pt x="301" y="11" on="1"/>
        <pt x="242" y="-10" on="0"/>
        <pt x="184" y="-10" on="1"/>
        <pt x="172" y="-10" on="1"/>
        <pt x="158" y="-10" on="0"/>
        <pt x="146" y="-3" on="1"/>
        <pt x="107" y="23" on="0"/>
        <pt x="99" y="91" on="1"/>
        <pt x="95" y="113" on="0"/>
        <pt x="95" y="251" on="1"/>
        <pt x="95" y="371" on="1"/>
        <pt x="18" y="371" on="1"/>
        <pt x="18" y="444" on="1"/>
        <pt x="98" y="444" on="1"/>
        <pt x="98" y="571" on="1"/>
        <pt x="182" y="571" on="1"/>
        <pt x="182" y="444" on="1"/>
        <pt x="316" y="444" on="1"/>
        <pt x="316" y="371" on="1"/>
        <pt x="182" y="371" on="1"/>
        <pt x="182" y="253" on="1"/>
        <pt x="183" y="134" on="0"/>
        <pt x="185" y="123" on="1"/>
        <pt x="193" y="79" on="0"/>
        <pt x="216" y="70" on="1"/>
        <pt x="221" y="68" on="0"/>
        <pt x="234" y="68" on="1"/>
        <pt x="277" y="71" on="0"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 6 values pushed */
          1 1 0 6 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          47
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 28 values pushed */
          0 3 2 3 114 5 1 1 1 2 89 4 1 2 2 16 75 0 6 6 0 92 0 0 0
          25 0 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 26 values pushed */
          0 3 2 3 114 4 1 2 5 1 1 6 2 1 97 0 6 6 0 92 0 0 0 25 0
          76
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 10 values pushed */
          23 17 17 17 17 22 52 7 6 27
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="three" xMin="42" yMin="-22" xMax="457" yMax="678">
      <contour>
        <pt x="242" y="54" on="1"/>
        <pt x="293" y="54" on="0"/>
        <pt x="353" y="126" on="0"/>
        <pt x="353" y="184" on="1"/>
        <pt x="353" y="237" on="0"/>
        <pt x="303" y="305" on="0"/>
        <pt x="260" y="315" on="1"/>
        <pt x="213" y="316" on="1"/>
        <pt x="166" y="316" on="1"/>
        <pt x="166" y="354" on="1"/>
        <pt x="166" y="392" on="0"/>
        <pt x="167" y="392" on="1"/>
        <pt x="182" y="393" on="0"/>
        <pt x="199" y="395" on="1"/>
        <pt x="239" y="397" on="0"/>
        <pt x="257" y="405" on="1"/>
        <pt x="290" y="419" on="0"/>
        <pt x="333" y="480" on="0"/>
        <pt x="333" y="521" on="1"/>
        <pt x="333" y="561" on="0"/>
        <pt x="285" y="604" on="0"/>
        <pt x="243" y="604" on="1"/>
        <pt x="193" y="604" on="0"/>
        <pt x="156" y="578" on="1"/>
        <pt x="126" y="559" on="0"/>
        <pt x="99" y="514" on="1"/>
        <pt x="78" y="546" on="1"/>
        <pt x="56" y="577" on="0"/>
        <pt x="56" y="579" on="1"/>
        <pt x="54" y="581" on="0"/>
        <pt x="87" y="617" on="0"/>
        <pt x="100" y="627" on="1"/>
        <pt x="153" y="669" on="0"/>
        <pt x="222" y="677" on="1"/>
        <pt x="224" y="677" on="0"/>
        <pt x="238" y="678" on="0"/>
        <pt x="242" y="678" on="1"/>
        <pt x="245" y="678" on="1"/>
        <pt x="308" y="678" on="0"/>
        <pt x="407" y="613" on="0"/>
        <pt x="424" y="561" on="1"/>
        <pt x="430" y="541" on="0"/>
        <pt x="430" y="520" on="1"/>
        <pt x="430" y="462" on="0"/>
        <pt x="393" y="411" on="1"/>
        <pt x="376" y="387" on="0"/>
        <pt x="328" y="353" on="1"/>
        <pt x="369" y="333" on="0"/>
        <pt x="373" y="330" on="1"/>
        <pt x="445" y="281" on="0"/>
        <pt x="456" y="205" on="1"/>
        <pt x="457" y="198" on="0"/>
        <pt x="457" y="184" on="1"/>
        <pt x="457" y="98" on="0"/>
        <pt x="330" y="-22" on="0"/>
        <pt x="242" y="-22" on="1"/>
        <pt x="131" y="-22" on="0"/>
        <pt x="51" y="58" on="1"/>
        <pt x="42" y="68" on="1"/>
        <pt x="49" y="105" on="1"/>
        <pt x="55" y="142" on="1"/>
        <pt x="82" y="115" on="0"/>
        <pt x="88" y="110" on="1"/>
        <pt x="157" y="54" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 16 values pushed */
          25 1 2 4 46 1 1 2 60 58 50 3 0 1 3 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          30
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 31 values pushed */
          3 1 2 0 1 0 2 1 97 0 4 4 5 91 0 5 5 13 75 7 1 0 0 6 91
          0 6 6 22 6 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          34
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 29 values pushed */
          0 5 0 4 2 5 4 99 3 1 2 0 1 0 2 1 97 7 1 0 0 6 91 0 6
          6 22 6 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          40
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 29 values pushed */
          0 5 0 4 2 5 4 99 3 1 2 0 1 0 2 1 97 7 1 0 0 6 91 0 6
          6 25 6 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 35 values pushed */
          0 5 0 4 2 5 4 99 3 1 2 0 1 0 2 1 97 7 1 0 6 6 0 87 7
          1 0 0 6 91 0 6 0 6 79
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 21 values pushed */
          1 0 56 54 38 33 22 20 14 13 12 10 8 6 0 63 1 63 8 6 20
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="tildecomb" xMin="-417" yMin="543" xMax="-84" yMax="677">
      <contour>
        <pt x="-417" y="554" on="1"/>
        <pt x="-414" y="606" on="0"/>
        <pt x="-358" y="677" on="0"/>
        <pt x="-314" y="677" on="1"/>
        <pt x="-288" y="677" on="0"/>
        <pt x="-252" y="650" on="1"/>
        <pt x="-218" y="625" on="0"/>
        <pt x="-199" y="621" on="1"/>
        <pt x="-195" y="620" on="0"/>
        <pt x="-188" y="620" on="1"/>
        <pt x="-163" y="620" on="0"/>
        <pt x="-160" y="665" on="1"/>
        <pt x="-160" y="677" on="1"/>
        <pt x="-84" y="677" on="1"/>
        <pt x="-84" y="666" on="1"/>
        <pt x="-87" y="614" on="0"/>
        <pt x="-142" y="543" on="0"/>
        <pt x="-185" y="543" on="1"/>
        <pt x="-212" y="543" on="0"/>
        <pt x="-249" y="570" on="1"/>
        <pt x="-283" y="595" on="0"/>
        <pt x="-302" y="599" on="1"/>
        <pt x="-306" y="600" on="0"/>
        <pt x="-313" y="600" on="1"/>
        <pt x="-338" y="600" on="0"/>
        <pt x="-341" y="555" on="1"/>
        <pt x="-341" y="543" on="1"/>
        <pt x="-417" y="543" on="1"/>
      </contour>
      <instructions><assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          30
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 20 values pushed */
          0 1 5 1 3 1 3 96 0 4 4 0 91 2 1 0 0 13 4 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 26 values pushed */
          0 1 4 3 1 87 2 1 0 0 4 3 0 4 99 0 1 1 3 92 5 1 3 1 3
          80
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 9 values pushed */
          18 21 35 18 21 34 6 6 26
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="two" xMin="42" yMin="0" xMax="449" yMax="677">
      <contour>
        <pt x="351" y="456" on="1"/>
        <pt x="351" y="516" on="0"/>
        <pt x="280" y="599" on="0"/>
        <pt x="222" y="599" on="1"/>
        <pt x="175" y="599" on="0"/>
        <pt x="114" y="539" on="0"/>
        <pt x="97" y="475" on="1"/>
        <pt x="93" y="459" on="1"/>
        <pt x="67" y="492" on="1"/>
        <pt x="42" y="526" on="1"/>
        <pt x="47" y="539" on="1"/>
        <pt x="92" y="663" on="0"/>
        <pt x="211" y="677" on="1"/>
        <pt x="225" y="677" on="1"/>
        <pt x="303" y="677" on="0"/>
        <pt x="355" y="644" on="1"/>
        <pt x="449" y="580" on="0"/>
        <pt x="449" y="454" on="1"/>
        <pt x="449" y="439" on="0"/>
        <pt x="447" y="425" on="1"/>
        <pt x="434" y="359" on="0"/>
        <pt x="361" y="290" on="1"/>
        <pt x="352" y="281" on="0"/>
        <pt x="310" y="245" on="1"/>
        <pt x="272" y="213" on="0"/>
        <pt x="199" y="144" on="1"/>
        <pt x="148" y="96" on="0"/>
        <pt x="137" y="85" on="1"/>
        <pt x="293" y="86" on="1"/>
        <pt x="449" y="86" on="1"/>
        <pt x="449" y="0" on="1"/>
        <pt x="50" y="0" on="1"/>
        <pt x="50" y="79" on="1"/>
        <pt x="119" y="147" on="1"/>
        <pt x="163" y="192" on="0"/>
        <pt x="216" y="242" on="1"/>
        <pt x="275" y="295" on="0"/>
        <pt x="302" y="329" on="1"/>
        <pt x="351" y="388" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 11 values pushed */
          9 7 2 2 0 32 1 3 2 2 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          30
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 21 values pushed */
          0 0 0 1 91 0 1 1 13 75 0 2 2 3 89 0 3 3 14 3 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          34
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 19 values pushed */
          0 1 0 0 2 1 0 99 0 2 2 3 89 0 3 3 14 3 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 19 values pushed */
          0 1 0 0 2 1 0 99 0 2 2 3 89 0 3 3 17 3 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 7 values pushed */
          17 45 40 34 4 6 24
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="u" xMin="73" yMin="-10" xMax="443" yMax="444">
      <contour>
        <pt x="73" y="268" on="1"/>
        <pt x="73" y="444" on="1"/>
        <pt x="166" y="444" on="1"/>
        <pt x="166" y="268" on="1"/>
        <pt x="167" y="92" on="1"/>
        <pt x="173" y="71" on="0"/>
        <pt x="204" y="59" on="0"/>
        <pt x="238" y="59" on="1"/>
        <pt x="317" y="59" on="0"/>
        <pt x="344" y="116" on="1"/>
        <pt x="349" y="128" on="0"/>
        <pt x="350" y="168" on="0"/>
        <pt x="350" y="291" on="1"/>
        <pt x="350" y="444" on="1"/>
        <pt x="443" y="444" on="1"/>
        <pt x="443" y="0" on="1"/>
        <pt x="353" y="0" on="1"/>
        <pt x="353" y="39" on="1"/>
        <pt x="346" y="35" on="1"/>
        <pt x="278" y="-10" on="0"/>
        <pt x="168" y="-10" on="1"/>
        <pt x="136" y="-10" on="0"/>
        <pt x="118" y="-1" on="1"/>
        <pt x="80" y="18" on="0"/>
        <pt x="74" y="81" on="1"/>
        <pt x="73" y="89" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 10 values pushed */
          4 1 1 0 17 1 3 1 2 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          23
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 18 values pushed */
          2 1 0 0 16 75 0 1 1 3 92 4 1 3 3 14 3 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          34
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 22 values pushed */
          2 1 0 0 16 75 0 3 3 14 75 0 1 1 4 92 0 4 4 25 4 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          47
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 22 values pushed */
          2 1 0 0 16 75 0 3 3 17 75 0 1 1 4 92 0 4 4 25 4 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 22 values pushed */
          2 1 0 0 3 89 0 3 3 17 75 0 1 1 4 92 0 4 4 25 4 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 8 values pushed */
          35 17 21 36 17 5 6 25
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="underscore" xMin="0" yMin="-114" xMax="499" yMax="-38">
      <contour>
        <pt x="0" y="-114" on="1"/>
        <pt x="0" y="-38" on="1"/>
        <pt x="499" y="-38" on="1"/>
        <pt x="499" y="-114" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 27 values pushed */
          0 0 1 1 0 85 0 0 0 1 89 2 1 1 0 1 77 0 0 0 3 0 3 17 3
          6 21
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="uni00A0"/><!-- contains no outline data -->

    <TTGlyph name="uni0237" xMin="-59" yMin="-205" xMax="192" yMax="444">
      <contour>
        <pt x="-35" y="-95" on="1"/>
        <pt x="-4" y="-126" on="0"/>
        <pt x="34" y="-126" on="1"/>
        <pt x="58" y="-126" on="0"/>
        <pt x="95" y="-105" on="0"/>
        <pt x="100" y="-88" on="1"/>
        <pt x="102" y="-82" on="0"/>
        <pt x="102" y="181" on="1"/>
        <pt x="102" y="444" on="1"/>
        <pt x="192" y="444" on="1"/>
        <pt x="192" y="180" on="1"/>
        <pt x="191" y="-45" on="0"/>
        <pt x="190" y="-95" on="0"/>
        <pt x="184" y="-113" on="1"/>
        <pt x="171" y="-153" on="0"/>
        <pt x="108" y="-205" on="0"/>
        <pt x="63" y="-205" on="1"/>
        <pt x="23" y="-205" on="0"/>
        <pt x="-25" y="-188" on="1"/>
        <pt x="-59" y="-175" on="0"/>
        <pt x="-59" y="-171" on="1"/>
        <pt x="-47" y="-133" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 6 values pushed */
          5 1 0 1 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          47
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 16 values pushed */
          0 1 1 16 75 0 0 0 2 92 0 2 2 26 2 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 16 values pushed */
          0 1 0 1 114 0 0 0 2 92 0 2 2 26 2 76
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 6 values pushed */
          38 21 33 3 6 23
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="uni0302" xMin="-421" yMin="527" xMax="-80" yMax="694">
      <contour>
        <pt x="-354" y="612" on="1"/>
        <pt x="-288" y="694" on="1"/>
        <pt x="-213" y="694" on="1"/>
        <pt x="-147" y="612" on="1"/>
        <pt x="-83" y="532" on="0"/>
        <pt x="-80" y="529" on="1"/>
        <pt x="-79" y="528" on="0"/>
        <pt x="-82" y="527" on="1"/>
        <pt x="-86" y="527" on="0"/>
        <pt x="-117" y="527" on="1"/>
        <pt x="-155" y="527" on="1"/>
        <pt x="-219" y="601" on="0"/>
        <pt x="-250" y="639" on="1"/>
        <pt x="-256" y="633" on="0"/>
        <pt x="-301" y="580" on="1"/>
        <pt x="-346" y="527" on="1"/>
        <pt x="-384" y="527" on="1"/>
        <pt x="-421" y="528" on="0"/>
        <pt x="-421" y="529" on="1"/>
        <pt x="-418" y="532" on="0"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 6 values pushed */
          12 1 1 0 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          36
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 12 values pushed */
          2 1 1 0 1 115 0 0 0 13 0 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 12 values pushed */
          2 1 1 0 1 115 0 0 0 15 0 76
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 6 values pushed */
          37 23 17 3 6 23
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="uni0304" xMin="-431" yMin="552" xMax="-70" yMax="631">
      <contour>
        <pt x="-431" y="552" on="1"/>
        <pt x="-431" y="631" on="1"/>
        <pt x="-70" y="631" on="1"/>
        <pt x="-70" y="552" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 27 values pushed */
          0 0 1 1 0 85 0 0 0 1 89 2 1 1 0 1 77 0 0 0 3 0 3 17 3
          6 21
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="uni0306" xMin="-427" yMin="508" xMax="-74" yMax="694">
      <contour>
        <pt x="-292" y="591" on="0"/>
        <pt x="-208" y="591" on="0"/>
        <pt x="-153" y="646" on="0"/>
        <pt x="-150" y="685" on="1"/>
        <pt x="-150" y="694" on="1"/>
        <pt x="-74" y="694" on="1"/>
        <pt x="-74" y="689" on="1"/>
        <pt x="-74" y="637" on="0"/>
        <pt x="-127" y="553" on="0"/>
        <pt x="-166" y="530" on="1"/>
        <pt x="-207" y="508" on="0"/>
        <pt x="-250" y="508" on="1"/>
        <pt x="-294" y="508" on="0"/>
        <pt x="-335" y="530" on="1"/>
        <pt x="-373" y="553" on="0"/>
        <pt x="-427" y="638" on="0"/>
        <pt x="-427" y="689" on="1"/>
        <pt x="-427" y="694" on="1"/>
        <pt x="-351" y="694" on="1"/>
        <pt x="-351" y="685" on="1"/>
        <pt x="-348" y="646" on="0"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 7 values pushed */
          19 3 2 0 1 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          36
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 14 values pushed */
          0 0 0 2 0 2 95 3 1 1 1 13 1 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 14 values pushed */
          0 0 0 2 0 2 95 3 1 1 1 15 1 76
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 7 values pushed */
          36 37 19 16 4 6 24
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="uni0307" xMin="-302" yMin="576" xMax="-198" yMax="680">
      <contour>
        <pt x="-302" y="576" on="1"/>
        <pt x="-302" y="680" on="1"/>
        <pt x="-198" y="680" on="1"/>
        <pt x="-198" y="576" on="1"/>
      </contour>
      <instructions><assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          36
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 12 values pushed */
          2 1 1 1 0 89 0 0 0 13 1 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 17 values pushed */
          0 0 1 1 0 85 0 0 0 1 89 2 1 1 0 1 77
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 10 values pushed */
          0 0 0 3 0 3 17 3 6 21
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="uni0308" xMin="-397" yMin="582" xMax="-104" yMax="680">
      <contour>
        <pt x="-397" y="582" on="1"/>
        <pt x="-397" y="680" on="1"/>
        <pt x="-299" y="680" on="1"/>
        <pt x="-299" y="582" on="1"/>
      </contour>
      <contour>
        <pt x="-202" y="582" on="1"/>
        <pt x="-202" y="680" on="1"/>
        <pt x="-104" y="680" on="1"/>
        <pt x="-104" y="582" on="1"/>
      </contour>
      <instructions><assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          36
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 15 values pushed */
          5 3 4 3 1 1 0 89 2 1 0 0 13 1 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 21 values pushed */
          2 1 0 1 1 0 85 2 1 0 0 1 89 5 3 4 3 1 0 1 77
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 18 values pushed */
          4 4 0 0 4 7 4 7 6 5 0 3 0 3 17 6 6 21
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="uni030A" xMin="-319" yMin="527" xMax="-99" yMax="694">
      <contour>
        <pt x="-317" y="631" on="1"/>
        <pt x="-307" y="658" on="0"/>
        <pt x="-248" y="694" on="0"/>
        <pt x="-211" y="694" on="1"/>
        <pt x="-183" y="694" on="0"/>
        <pt x="-155" y="684" on="1"/>
        <pt x="-114" y="666" on="0"/>
        <pt x="-101" y="631" on="1"/>
        <pt x="-99" y="623" on="0"/>
        <pt x="-99" y="611" on="1"/>
        <pt x="-99" y="598" on="0"/>
        <pt x="-101" y="591" on="1"/>
        <pt x="-111" y="562" on="0"/>
        <pt x="-172" y="527" on="0"/>
        <pt x="-209" y="527" on="1"/>
        <pt x="-249" y="527" on="0"/>
        <pt x="-307" y="563" on="0"/>
        <pt x="-317" y="591" on="1"/>
        <pt x="-319" y="598" on="0"/>
        <pt x="-319" y="611" on="1"/>
        <pt x="-319" y="623" on="0"/>
      </contour>
      <contour>
        <pt x="-155" y="610" on="1"/>
        <pt x="-155" y="651" on="0"/>
        <pt x="-215" y="651" on="1"/>
        <pt x="-263" y="651" on="0"/>
        <pt x="-263" y="610" on="1"/>
        <pt x="-263" y="570" on="0"/>
        <pt x="-155" y="570" on="0"/>
      </contour>
      <instructions><assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          36
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 18 values pushed */
          0 3 0 1 3 1 95 0 2 2 0 91 0 0 0 13 2 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 18 values pushed */
          0 3 0 1 3 1 95 0 2 2 0 91 0 0 0 15 2 76
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 7 values pushed */
          18 39 41 34 4 6 24
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="uni030B" xMin="-399" yMin="527" xMax="-84" yMax="694">
      <contour>
        <pt x="-399" y="527" on="1"/>
        <pt x="-343" y="694" on="0"/>
        <pt x="-343" y="694" on="1"/>
        <pt x="-296" y="694" on="1"/>
        <pt x="-250" y="694" on="0"/>
        <pt x="-250" y="693" on="1"/>
        <pt x="-253" y="686" on="0"/>
        <pt x="-321" y="534" on="0"/>
        <pt x="-323" y="527" on="1"/>
      </contour>
      <contour>
        <pt x="-233" y="527" on="1"/>
        <pt x="-177" y="694" on="0"/>
        <pt x="-177" y="694" on="1"/>
        <pt x="-130" y="694" on="1"/>
        <pt x="-84" y="694" on="0"/>
        <pt x="-84" y="693" on="1"/>
        <pt x="-87" y="686" on="0"/>
        <pt x="-155" y="534" on="0"/>
        <pt x="-157" y="527" on="1"/>
      </contour>
      <instructions><assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          36
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 15 values pushed */
          5 3 4 3 1 1 0 91 2 1 0 0 13 1 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 15 values pushed */
          5 3 4 3 1 1 0 91 2 1 0 0 15 1 76
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 18 values pushed */
          9 9 0 0 9 17 9 17 13 10 0 8 0 8 49 6 6 21
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="uni030C" xMin="-421" yMin="487" xMax="-80" yMax="654">
      <contour>
        <pt x="-421" y="652" on="1"/>
        <pt x="-422" y="653" on="0"/>
        <pt x="-419" y="654" on="1"/>
        <pt x="-415" y="654" on="0"/>
        <pt x="-384" y="654" on="1"/>
        <pt x="-346" y="654" on="1"/>
        <pt x="-301" y="601" on="1"/>
        <pt x="-256" y="548" on="0"/>
        <pt x="-250" y="542" on="1"/>
        <pt x="-219" y="580" on="0"/>
        <pt x="-155" y="654" on="1"/>
        <pt x="-117" y="654" on="1"/>
        <pt x="-80" y="653" on="0"/>
        <pt x="-80" y="652" on="1"/>
        <pt x="-83" y="649" on="0"/>
        <pt x="-147" y="569" on="1"/>
        <pt x="-213" y="487" on="1"/>
        <pt x="-288" y="487" on="1"/>
        <pt x="-354" y="569" on="1"/>
        <pt x="-418" y="649" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 22 values pushed */
          8 1 2 0 1 74 1 1 0 2 0 114 0 2 2 105 20 37 20 3 6 23
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="uniEFFD" xMin="0" yMin="0" xMax="300" yMax="100">
      <contour>
        <pt x="0" y="0" on="1"/>
        <pt x="0" y="100" on="1"/>
        <pt x="100" y="100" on="1"/>
        <pt x="100" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="200" y="0" on="1"/>
        <pt x="200" y="100" on="1"/>
        <pt x="300" y="100" on="1"/>
        <pt x="300" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 6 values pushed */
          5 4 1 0 2 48
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="uniEFFE" xMin="0" yMin="0" xMax="300" yMax="100">
      <contour>
        <pt x="0" y="0" on="1"/>
        <pt x="0" y="100" on="1"/>
        <pt x="100" y="100" on="1"/>
        <pt x="100" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="200" y="0" on="1"/>
        <pt x="200" y="100" on="1"/>
        <pt x="300" y="100" on="1"/>
        <pt x="300" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 6 values pushed */
          5 4 1 0 2 48
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="uniEFFF" xMin="0" yMin="0" xMax="100" yMax="100">
      <contour>
        <pt x="0" y="0" on="1"/>
        <pt x="0" y="100" on="1"/>
        <pt x="100" y="100" on="1"/>
        <pt x="100" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 4 values pushed */
          1 0 1 48
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="v" xMin="14" yMin="0" xMax="446" yMax="444">
      <contour>
        <pt x="178" y="0" on="1"/>
        <pt x="15" y="441" on="0"/>
        <pt x="14" y="442" on="1"/>
        <pt x="14" y="444" on="0"/>
        <pt x="60" y="444" on="1"/>
        <pt x="107" y="444" on="0"/>
        <pt x="107" y="442" on="1"/>
        <pt x="109" y="440" on="0"/>
        <pt x="127" y="388" on="1"/>
        <pt x="223" y="130" on="0"/>
        <pt x="232" y="67" on="1"/>
        <pt x="233" y="100" on="0"/>
        <pt x="325" y="366" on="0"/>
        <pt x="356" y="442" on="1"/>
        <pt x="356" y="444" on="0"/>
        <pt x="446" y="444" on="0"/>
        <pt x="446" y="442" on="1"/>
        <pt x="282" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 6 values pushed */
          10 1 2 0 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          34
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 13 values pushed */
          1 1 0 0 16 75 3 1 2 2 14 2 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          47
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 13 values pushed */
          1 1 0 0 16 75 3 1 2 2 17 2 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 13 values pushed */
          1 1 0 2 0 114 3 1 2 2 17 2 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 11 values pushed */
          0 0 0 17 0 17 40 65 4 6 22
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="w" xMin="14" yMin="0" xMax="668" yMax="444">
      <contour>
        <pt x="14" y="444" on="1"/>
        <pt x="105" y="444" on="1"/>
        <pt x="108" y="434" on="1"/>
        <pt x="192" y="160" on="0"/>
        <pt x="200" y="74" on="1"/>
        <pt x="200" y="65" on="1"/>
        <pt x="201" y="75" on="1"/>
        <pt x="206" y="144" on="0"/>
        <pt x="282" y="399" on="1"/>
        <pt x="296" y="444" on="1"/>
        <pt x="381" y="444" on="1"/>
        <pt x="399" y="381" on="1"/>
        <pt x="471" y="139" on="0"/>
        <pt x="478" y="82" on="1"/>
        <pt x="480" y="72" on="0"/>
        <pt x="480" y="69" on="1"/>
        <pt x="481" y="70" on="1"/>
        <pt x="481" y="82" on="0"/>
        <pt x="489" y="118" on="1"/>
        <pt x="504" y="190" on="0"/>
        <pt x="562" y="386" on="1"/>
        <pt x="580" y="444" on="1"/>
        <pt x="668" y="444" on="1"/>
        <pt x="638" y="344" on="0"/>
        <pt x="601" y="222" on="1"/>
        <pt x="534" y="1" on="1"/>
        <pt x="483" y="0" on="1"/>
        <pt x="432" y="0" on="1"/>
        <pt x="429" y="10" on="1"/>
        <pt x="343" y="294" on="0"/>
        <pt x="338" y="367" on="1"/>
        <pt x="337" y="377" on="1"/>
        <pt x="336" y="375" on="0"/>
        <pt x="336" y="370" on="1"/>
        <pt x="336" y="332" on="0"/>
        <pt x="299" y="194" on="1"/>
        <pt x="257" y="50" on="0"/>
        <pt x="245" y="11" on="1"/>
        <pt x="242" y="0" on="1"/>
        <pt x="195" y="0" on="1"/>
        <pt x="148" y="1" on="1"/>
        <pt x="81" y="222" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 9 values pushed */
          31 30 5 4 4 3 0 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          34
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 14 values pushed */
          2 1 2 0 0 16 75 4 1 3 3 14 3 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          47
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 14 values pushed */
          2 1 2 0 0 16 75 4 1 3 3 17 3 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 14 values pushed */
          2 1 2 0 3 0 114 4 1 3 3 17 3 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 8 values pushed */
          43 35 27 24 16 5 6 25
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="x" xMin="0" yMin="0" xMax="460" yMax="444">
      <contour>
        <pt x="187" y="229" on="1"/>
        <pt x="6" y="444" on="1"/>
        <pt x="107" y="444" on="1"/>
        <pt x="167" y="369" on="1"/>
        <pt x="227" y="294" on="1"/>
        <pt x="254" y="328" on="0"/>
        <pt x="286" y="369" on="1"/>
        <pt x="344" y="444" on="1"/>
        <pt x="393" y="444" on="1"/>
        <pt x="442" y="443" on="1"/>
        <pt x="439" y="437" on="0"/>
        <pt x="299" y="268" on="1"/>
        <pt x="267" y="229" on="1"/>
        <pt x="353" y="127" on="1"/>
        <pt x="374" y="102" on="0"/>
        <pt x="420" y="48" on="0"/>
        <pt x="449" y="14" on="0"/>
        <pt x="450" y="12" on="1"/>
        <pt x="460" y="0" on="1"/>
        <pt x="359" y="0" on="1"/>
        <pt x="294" y="88" on="1"/>
        <pt x="280" y="107" on="0"/>
        <pt x="244" y="156" on="0"/>
        <pt x="236" y="166" on="1"/>
        <pt x="227" y="177" on="1"/>
        <pt x="198" y="137" on="0"/>
        <pt x="163" y="88" on="1"/>
        <pt x="100" y="0" on="1"/>
        <pt x="0" y="0" on="1"/>
        <pt x="187" y="226" on="0"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 8 values pushed */
          24 12 4 3 2 0 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          34
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 13 values pushed */
          1 1 0 0 16 75 3 1 2 2 14 2 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          47
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 13 values pushed */
          1 1 0 0 16 75 3 1 2 2 17 2 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 13 values pushed */
          1 1 0 0 2 89 3 1 2 2 17 2 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 7 values pushed */
          24 25 37 17 4 6 24
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="y" xMin="14" yMin="-204" xMax="446" yMax="444">
      <contour>
        <pt x="14" y="443" on="1"/>
        <pt x="14" y="444" on="0"/>
        <pt x="61" y="444" on="1"/>
        <pt x="109" y="444" on="1"/>
        <pt x="122" y="411" on="1"/>
        <pt x="230" y="155" on="0"/>
        <pt x="236" y="75" on="1"/>
        <pt x="237" y="65" on="1"/>
        <pt x="237" y="74" on="1"/>
        <pt x="245" y="161" on="0"/>
        <pt x="348" y="424" on="1"/>
        <pt x="356" y="444" on="1"/>
        <pt x="401" y="444" on="1"/>
        <pt x="446" y="444" on="0"/>
        <pt x="446" y="443" on="1"/>
        <pt x="396" y="313" on="1"/>
        <pt x="345" y="183" on="0"/>
        <pt x="240" y="-85" on="0"/>
        <pt x="236" y="-93" on="1"/>
        <pt x="209" y="-160" on="0"/>
        <pt x="173" y="-187" on="1"/>
        <pt x="149" y="-204" on="0"/>
        <pt x="113" y="-204" on="1"/>
        <pt x="88" y="-204" on="0"/>
        <pt x="78" y="-203" on="1"/>
        <pt x="72" y="-202" on="0"/>
        <pt x="55" y="-199" on="0"/>
        <pt x="49" y="-198" on="1"/>
        <pt x="43" y="-197" on="1"/>
        <pt x="43" y="-196" on="0"/>
        <pt x="36" y="-118" on="0"/>
        <pt x="36" y="-117" on="1"/>
        <pt x="48" y="-121" on="1"/>
        <pt x="79" y="-133" on="0"/>
        <pt x="114" y="-133" on="1"/>
        <pt x="127" y="-133" on="0"/>
        <pt x="133" y="-130" on="1"/>
        <pt x="148" y="-122" on="0"/>
        <pt x="163" y="-94" on="1"/>
        <pt x="169" y="-82" on="0"/>
        <pt x="200" y="-1" on="0"/>
        <pt x="200" y="1" on="1"/>
        <pt x="188" y="29" on="1"/>
        <pt x="176" y="57" on="0"/>
        <pt x="128" y="173" on="0"/>
        <pt x="86" y="273" on="0"/>
        <pt x="37" y="388" on="0"/>
        <pt x="26" y="416" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 7 values pushed */
          8 7 2 3 0 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          47
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 17 values pushed */
          1 1 0 0 16 75 0 3 3 2 92 0 2 2 26 2 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 17 values pushed */
          1 1 0 3 0 114 0 3 3 2 92 0 2 2 26 2 76
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 7 values pushed */
          42 40 40 48 4 6 24
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="z" xMin="28" yMin="0" xMax="402" yMax="444">
      <contour>
        <pt x="42" y="370" on="1"/>
        <pt x="42" y="444" on="1"/>
        <pt x="400" y="444" on="1"/>
        <pt x="400" y="395" on="1"/>
        <pt x="290" y="252" on="1"/>
        <pt x="188" y="118" on="0"/>
        <pt x="168" y="92" on="1"/>
        <pt x="156" y="76" on="1"/>
        <pt x="279" y="77" on="1"/>
        <pt x="402" y="77" on="1"/>
        <pt x="402" y="0" on="1"/>
        <pt x="28" y="0" on="1"/>
        <pt x="28" y="51" on="1"/>
        <pt x="144" y="205" on="0"/>
        <pt x="273" y="371" on="1"/>
        <pt x="157" y="370" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 10 values pushed */
          3 1 3 0 12 1 2 1 2 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          34
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 22 values pushed */
          4 1 3 3 0 89 0 0 0 16 75 0 1 1 2 89 0 2 2 14 2 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          47
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 22 values pushed */
          4 1 3 3 0 89 0 0 0 16 75 0 1 1 2 89 0 2 2 17 2 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 20 values pushed */
          0 0 4 1 3 1 0 3 97 0 1 1 2 89 0 2 2 17 2 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 12 values pushed */
          0 0 0 15 0 14 17 37 17 5 6 23
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="zero" xMin="39" yMin="-22" xMax="460" yMax="678">
      <contour>
        <pt x="117" y="621" on="1"/>
        <pt x="174" y="678" on="0"/>
        <pt x="247" y="678" on="1"/>
        <pt x="306" y="678" on="0"/>
        <pt x="351" y="647" on="1"/>
        <pt x="396" y="617" on="0"/>
        <pt x="424" y="557" on="1"/>
        <pt x="460" y="470" on="0"/>
        <pt x="460" y="328" on="1"/>
        <pt x="460" y="114" on="0"/>
        <pt x="383" y="34" on="1"/>
        <pt x="327" y="-22" on="0"/>
        <pt x="249" y="-22" on="1"/>
        <pt x="147" y="-22" on="0"/>
        <pt x="91" y="67" on="1"/>
        <pt x="39" y="154" on="0"/>
        <pt x="39" y="316" on="1"/>
        <pt x="39" y="380" on="0"/>
        <pt x="42" y="414" on="1"/>
        <pt x="55" y="557" on="0"/>
      </contour>
      <contour>
        <pt x="273" y="599" on="1"/>
        <pt x="267" y="601" on="0"/>
        <pt x="250" y="601" on="1"/>
        <pt x="186" y="601" on="0"/>
        <pt x="158" y="539" on="1"/>
        <pt x="132" y="481" on="0"/>
        <pt x="132" y="340" on="1"/>
        <pt x="132" y="203" on="0"/>
        <pt x="152" y="141" on="1"/>
        <pt x="171" y="83" on="0"/>
        <pt x="213" y="63" on="1"/>
        <pt x="229" y="55" on="0"/>
        <pt x="250" y="55" on="1"/>
        <pt x="270" y="55" on="0"/>
        <pt x="287" y="63" on="1"/>
        <pt x="338" y="89" on="0"/>
        <pt x="367" y="222" on="0"/>
        <pt x="367" y="340" on="1"/>
        <pt x="367" y="481" on="0"/>
        <pt x="341" y="539" on="1"/>
        <pt x="318" y="588" on="0"/>
      </contour>
      <instructions><assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          32
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 21 values pushed */
          0 2 2 0 91 0 0 0 13 75 0 3 3 1 91 0 1 1 22 1 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          34
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 19 values pushed */
          0 0 0 2 3 0 2 99 0 3 3 1 91 0 1 1 22 1 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          40
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 19 values pushed */
          0 0 0 2 3 0 2 99 0 3 3 1 91 0 1 1 25 1 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 24 values pushed */
          0 0 0 2 3 0 2 99 0 3 1 1 3 87 0 3 3 1 91 0 1 3 1 79
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 7 values pushed */
          40 25 40 33 4 6 24
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

  </glyf>

  <name>
    <namerecord nameID="0" platformID="1" platEncID="0" langID="0x0" unicode="True">
      Copyright (c) 2009-2010 Design Science, Inc.
Copyright (c) 2014 Khan Academy
    </namerecord>
    <namerecord nameID="1" platformID="1" platEncID="0" langID="0x0" unicode="True">
      KaTeX_SansSerif
    </namerecord>
    <namerecord nameID="2" platformID="1" platEncID="0" langID="0x0" unicode="True">
      Regular
    </namerecord>
    <namerecord nameID="3" platformID="1" platEncID="0" langID="0x0" unicode="True">
      FontForge 2.0 : KaTeX_SansSerif-Regular
    </namerecord>
    <namerecord nameID="4" platformID="1" platEncID="0" langID="0x0" unicode="True">
      KaTeX_SansSerif-Regular
    </namerecord>
    <namerecord nameID="5" platformID="1" platEncID="0" langID="0x0" unicode="True">
      Version 1.1; ttfautohint (v1.3)
    </namerecord>
    <namerecord nameID="6" platformID="1" platEncID="0" langID="0x0" unicode="True">
      KaTeX_SansSerif-Regular
    </namerecord>
    <namerecord nameID="13" platformID="1" platEncID="0" langID="0x0" unicode="True">
      Copyright (c) 2009-2010, Design Science, Inc. (&lt;www.mathjax.org&gt;)
Copyright (c) 2014 Khan Academy (&lt;www.khanacademy.org&gt;),
with Reserved Font Name KaTeX_SansSerif.

This Font Software is licensed under the SIL Open Font License, Version 1.1.
This license available with a FAQ at:
http://scripts.sil.org/OFL
    </namerecord>
    <namerecord nameID="14" platformID="1" platEncID="0" langID="0x0" unicode="True">
      http://scripts.sil.org/OFL
    </namerecord>
    <namerecord nameID="16" platformID="1" platEncID="0" langID="0x0" unicode="True">
      KaTeX_SansSerif
    </namerecord>
    <namerecord nameID="17" platformID="1" platEncID="0" langID="0x0" unicode="True">
      Regular
    </namerecord>
    <namerecord nameID="0" platformID="3" platEncID="1" langID="0x409">
      Copyright (c) 2009-2010 Design Science, Inc.
Copyright (c) 2014 Khan Academy
    </namerecord>
    <namerecord nameID="1" platformID="3" platEncID="1" langID="0x409">
      KaTeX_SansSerif
    </namerecord>
    <namerecord nameID="2" platformID="3" platEncID="1" langID="0x409">
      Regular
    </namerecord>
    <namerecord nameID="3" platformID="3" platEncID="1" langID="0x409">
      FontForge 2.0 : KaTeX_SansSerif-Regular
    </namerecord>
    <namerecord nameID="4" platformID="3" platEncID="1" langID="0x409">
      KaTeX_SansSerif-Regular
    </namerecord>
    <namerecord nameID="5" platformID="3" platEncID="1" langID="0x409">
      Version 1.1; ttfautohint (v1.3)
    </namerecord>
    <namerecord nameID="6" platformID="3" platEncID="1" langID="0x409">
      KaTeX_SansSerif-Regular
    </namerecord>
    <namerecord nameID="13" platformID="3" platEncID="1" langID="0x409">
      Copyright (c) 2009-2010, Design Science, Inc. (&lt;www.mathjax.org&gt;)
Copyright (c) 2014 Khan Academy (&lt;www.khanacademy.org&gt;),
with Reserved Font Name KaTeX_SansSerif.

This Font Software is licensed under the SIL Open Font License, Version 1.1.
This license available with a FAQ at:
http://scripts.sil.org/OFL
    </namerecord>
    <namerecord nameID="14" platformID="3" platEncID="1" langID="0x409">
      http://scripts.sil.org/OFL
    </namerecord>
    <namerecord nameID="16" platformID="3" platEncID="1" langID="0x409">
      KaTeX_SansSerif
    </namerecord>
    <namerecord nameID="17" platformID="3" platEncID="1" langID="0x409">
      Regular
    </namerecord>
  </name>

  <post>
    <formatType value="2.0"/>
    <italicAngle value="0.0"/>
    <underlinePosition value="-125"/>
    <underlineThickness value="50"/>
    <isFixedPitch value="0"/>
    <minMemType42 value="0"/>
    <maxMemType42 value="0"/>
    <minMemType1 value="0"/>
    <maxMemType1 value="0"/>
    <psNames>
      <!-- This file uses unique glyph names based on the information
           found in the 'post' table. Since these names might not be unique,
           we have to invent artificial names in case of clashes. In order to
           be able to retain the original information, we need a name to
           ps name mapping for those cases where they differ. That's what
           you see below.
            -->
    </psNames>
    <extraNames>
      <!-- following are the name that are not taken from the standard Mac glyph order -->
      <psName name="uni00A0"/>
      <psName name="uni0237"/>
      <psName name="gravecomb"/>
      <psName name="acutecomb"/>
      <psName name="uni0302"/>
      <psName name="tildecomb"/>
      <psName name="uni0304"/>
      <psName name="uni0306"/>
      <psName name="uni0307"/>
      <psName name="uni0308"/>
      <psName name="uni030A"/>
      <psName name="uni030B"/>
      <psName name="uni030C"/>
      <psName name="Gamma"/>
      <psName name="Theta"/>
      <psName name="Lambda"/>
      <psName name="Xi"/>
      <psName name="Pi"/>
      <psName name="Sigma"/>
      <psName name="Upsilon"/>
      <psName name="Phi"/>
      <psName name="Psi"/>
      <psName name="uniEFFD"/>
      <psName name="uniEFFE"/>
      <psName name="uniEFFF"/>
    </extraNames>
  </post>

  <gasp>
    <gaspRange rangeMaxPPEM="65535" rangeGaspBehavior="15"/>
  </gasp>

  <FFTM>
    <!-- FontForge's timestamp, font source creation and modification dates -->
    <version value="1"/>
    <FFTimeStamp value="Tue Jul 31 14:57:19 2012"/>
    <sourceCreated value="Mon Oct 12 19:21:51 2009"/>
    <sourceModified value="Mon Jun 29 22:52:14 2015"/>
  </FFTM>

</ttFont>
