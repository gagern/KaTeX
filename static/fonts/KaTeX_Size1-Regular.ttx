<?xml version="1.0" encoding="UTF-8"?>
<ttFont sfntVersion="\x00\x01\x00\x00" ttLibVersion="3.3">

  <GlyphOrder>
    <!-- The 'id' attribute is only for humans; it is ignored when parsed. -->
    <GlyphID id="0" name=".notdef"/>
    <GlyphID id="1" name=".null"/>
    <GlyphID id="2" name="nonmarkingreturn"/>
    <GlyphID id="3" name="space"/>
    <GlyphID id="4" name="parenleft"/>
    <GlyphID id="5" name="parenright"/>
    <GlyphID id="6" name="slash"/>
    <GlyphID id="7" name="bracketleft"/>
    <GlyphID id="8" name="backslash"/>
    <GlyphID id="9" name="bracketright"/>
    <GlyphID id="10" name="braceleft"/>
    <GlyphID id="11" name="braceright"/>
    <GlyphID id="12" name="uni00A0"/>
    <GlyphID id="13" name="circumflex"/>
    <GlyphID id="14" name="tilde"/>
    <GlyphID id="15" name="uni0302"/>
    <GlyphID id="16" name="tildecomb"/>
    <GlyphID id="17" name="uni2016"/>
    <GlyphID id="18" name="arrowup"/>
    <GlyphID id="19" name="arrowdown"/>
    <GlyphID id="20" name="arrowdblup"/>
    <GlyphID id="21" name="arrowdbldown"/>
    <GlyphID id="22" name="product"/>
    <GlyphID id="23" name="uni2210"/>
    <GlyphID id="24" name="summation"/>
    <GlyphID id="25" name="radical"/>
    <GlyphID id="26" name="uni2223"/>
    <GlyphID id="27" name="uni2225"/>
    <GlyphID id="28" name="integral"/>
    <GlyphID id="29" name="uni222C"/>
    <GlyphID id="30" name="uni222D"/>
    <GlyphID id="31" name="uni222E"/>
    <GlyphID id="32" name="uni22C0"/>
    <GlyphID id="33" name="uni22C1"/>
    <GlyphID id="34" name="uni22C2"/>
    <GlyphID id="35" name="uni22C3"/>
    <GlyphID id="36" name="uni2308"/>
    <GlyphID id="37" name="uni2309"/>
    <GlyphID id="38" name="uni230A"/>
    <GlyphID id="39" name="uni230B"/>
    <GlyphID id="40" name="uni23D0"/>
    <GlyphID id="41" name="uni27E8"/>
    <GlyphID id="42" name="uni27E9"/>
    <GlyphID id="43" name="uni2A00"/>
    <GlyphID id="44" name="uni2A01"/>
    <GlyphID id="45" name="uni2A02"/>
    <GlyphID id="46" name="uni2A04"/>
    <GlyphID id="47" name="uni2A06"/>
    <GlyphID id="48" name="uniEFFD"/>
    <GlyphID id="49" name="uniEFFE"/>
    <GlyphID id="50" name="uniEFFF"/>
  </GlyphOrder>

  <head>
    <!-- Most of this table will be recalculated by the compiler -->
    <tableVersion value="1.0"/>
    <fontRevision value="1.0"/>
    <checkSumAdjustment value="0x2329002e"/>
    <magicNumber value="0x5f0f3cf5"/>
    <flags value="00000000 00011111"/>
    <unitsPerEm value="1000"/>
    <created value="Tue Jan 17 04:00:36 2017"/>
    <modified value="Tue Jan 17 04:00:36 2017"/>
    <xMin value="-564"/>
    <yMin value="-350"/>
    <xMax value="1304"/>
    <yMax value="850"/>
    <macStyle value="00000000 00000000"/>
    <lowestRecPPEM value="8"/>
    <fontDirectionHint value="2"/>
    <indexToLocFormat value="0"/>
    <glyphDataFormat value="0"/>
  </head>

  <hhea>
    <tableVersion value="0x00010000"/>
    <ascent value="850"/>
    <descent value="-350"/>
    <lineGap value="90"/>
    <advanceWidthMax value="1166"/>
    <minLeftSideBearing value="-564"/>
    <minRightSideBearing value="-138"/>
    <xMaxExtent value="1304"/>
    <caretSlopeRise value="1"/>
    <caretSlopeRun value="0"/>
    <caretOffset value="0"/>
    <reserved0 value="0"/>
    <reserved1 value="0"/>
    <reserved2 value="0"/>
    <reserved3 value="0"/>
    <metricDataFormat value="0"/>
    <numberOfHMetrics value="51"/>
  </hhea>

  <maxp>
    <!-- Most of this table will be recalculated by the compiler -->
    <tableVersion value="0x10000"/>
    <numGlyphs value="51"/>
    <maxPoints value="210"/>
    <maxContours value="5"/>
    <maxCompositePoints value="0"/>
    <maxCompositeContours value="0"/>
    <maxZones value="2"/>
    <maxTwilightPoints value="0"/>
    <maxStorage value="16"/>
    <maxFunctionDefs value="119"/>
    <maxInstructionDefs value="0"/>
    <maxStackElements value="32"/>
    <maxSizeOfInstructions value="15"/>
    <maxComponentElements value="0"/>
    <maxComponentDepth value="0"/>
  </maxp>

  <OS_2>
    <!-- The fields 'usFirstCharIndex' and 'usLastCharIndex'
         will be recalculated by the compiler -->
    <version value="2"/>
    <xAvgCharWidth value="644"/>
    <usWeightClass value="400"/>
    <usWidthClass value="5"/>
    <fsType value="00000000 00000000"/>
    <ySubscriptXSize value="650"/>
    <ySubscriptYSize value="700"/>
    <ySubscriptXOffset value="0"/>
    <ySubscriptYOffset value="140"/>
    <ySuperscriptXSize value="650"/>
    <ySuperscriptYSize value="700"/>
    <ySuperscriptXOffset value="0"/>
    <ySuperscriptYOffset value="480"/>
    <yStrikeoutSize value="49"/>
    <yStrikeoutPosition value="258"/>
    <sFamilyClass value="0"/>
    <panose>
      <bFamilyType value="0"/>
      <bSerifStyle value="0"/>
      <bWeight value="0"/>
      <bProportion value="0"/>
      <bContrast value="0"/>
      <bStrokeVariation value="0"/>
      <bArmStyle value="0"/>
      <bLetterForm value="0"/>
      <bMidline value="0"/>
      <bXHeight value="0"/>
    </panose>
    <ulUnicodeRange1 value="10000000 00000000 00000000 11101111"/>
    <ulUnicodeRange2 value="00010000 00000000 11101100 11101101"/>
    <ulUnicodeRange3 value="00000000 00000000 00000000 00000000"/>
    <ulUnicodeRange4 value="00000000 00000000 00000000 00000000"/>
    <achVendID value="PfEd"/>
    <fsSelection value="00000000 01000000"/>
    <usFirstCharIndex value="32"/>
    <usLastCharIndex value="61439"/>
    <sTypoAscender value="800"/>
    <sTypoDescender value="-200"/>
    <sTypoLineGap value="90"/>
    <usWinAscent value="850"/>
    <usWinDescent value="350"/>
    <ulCodePageRange1 value="00100000 00000000 00000000 10001111"/>
    <ulCodePageRange2 value="01011110 00000011 00000000 00000000"/>
    <sxHeight value="0"/>
    <sCapHeight value="0"/>
    <usDefaultChar value="0"/>
    <usBreakChar value="32"/>
    <usMaxContext value="1"/>
  </OS_2>

  <hmtx>
    <mtx name=".notdef" width="250" lsb="50"/>
    <mtx name=".null" width="0" lsb="0"/>
    <mtx name="arrowdbldown" width="778" lsb="57"/>
    <mtx name="arrowdblup" width="778" lsb="57"/>
    <mtx name="arrowdown" width="667" lsb="112"/>
    <mtx name="arrowup" width="667" lsb="112"/>
    <mtx name="backslash" width="578" lsb="55"/>
    <mtx name="braceleft" width="583" lsb="105"/>
    <mtx name="braceright" width="583" lsb="105"/>
    <mtx name="bracketleft" width="417" lsb="202"/>
    <mtx name="bracketright" width="417" lsb="22"/>
    <mtx name="circumflex" width="556" lsb="-8"/>
    <mtx name="integral" width="472" lsb="55"/>
    <mtx name="nonmarkingreturn" width="333" lsb="0"/>
    <mtx name="parenleft" width="458" lsb="152"/>
    <mtx name="parenright" width="458" lsb="35"/>
    <mtx name="product" width="944" lsb="55"/>
    <mtx name="radical" width="1000" lsb="111"/>
    <mtx name="slash" width="578" lsb="55"/>
    <mtx name="space" width="250" lsb="0"/>
    <mtx name="summation" width="1056" lsb="56"/>
    <mtx name="tilde" width="556" lsb="1"/>
    <mtx name="tildecomb" width="0" lsb="-555"/>
    <mtx name="uni00A0" width="250" lsb="0"/>
    <mtx name="uni0302" width="0" lsb="-564"/>
    <mtx name="uni2016" width="778" lsb="257"/>
    <mtx name="uni2210" width="944" lsb="55"/>
    <mtx name="uni2223" width="333" lsb="145"/>
    <mtx name="uni2225" width="556" lsb="145"/>
    <mtx name="uni222C" width="819" lsb="55"/>
    <mtx name="uni222D" width="1166" lsb="55"/>
    <mtx name="uni222E" width="472" lsb="55"/>
    <mtx name="uni22C0" width="833" lsb="55"/>
    <mtx name="uni22C1" width="833" lsb="55"/>
    <mtx name="uni22C2" width="833" lsb="55"/>
    <mtx name="uni22C3" width="833" lsb="55"/>
    <mtx name="uni2308" width="472" lsb="202"/>
    <mtx name="uni2309" width="472" lsb="22"/>
    <mtx name="uni230A" width="472" lsb="202"/>
    <mtx name="uni230B" width="472" lsb="22"/>
    <mtx name="uni23D0" width="667" lsb="312"/>
    <mtx name="uni27E8" width="472" lsb="97"/>
    <mtx name="uni27E9" width="472" lsb="77"/>
    <mtx name="uni2A00" width="1111" lsb="56"/>
    <mtx name="uni2A01" width="1111" lsb="56"/>
    <mtx name="uni2A02" width="1111" lsb="56"/>
    <mtx name="uni2A04" width="833" lsb="55"/>
    <mtx name="uni2A06" width="833" lsb="55"/>
    <mtx name="uniEFFD" width="300" lsb="0"/>
    <mtx name="uniEFFE" width="300" lsb="0"/>
    <mtx name="uniEFFF" width="100" lsb="0"/>
  </hmtx>

  <cmap>
    <tableVersion version="0"/>
    <cmap_format_4 platformID="0" platEncID="3" language="0">
      <map code="0x20" name="space"/><!-- SPACE -->
      <map code="0x28" name="parenleft"/><!-- LEFT PARENTHESIS -->
      <map code="0x29" name="parenright"/><!-- RIGHT PARENTHESIS -->
      <map code="0x2f" name="slash"/><!-- SOLIDUS -->
      <map code="0x5b" name="bracketleft"/><!-- LEFT SQUARE BRACKET -->
      <map code="0x5c" name="backslash"/><!-- REVERSE SOLIDUS -->
      <map code="0x5d" name="bracketright"/><!-- RIGHT SQUARE BRACKET -->
      <map code="0x7b" name="braceleft"/><!-- LEFT CURLY BRACKET -->
      <map code="0x7d" name="braceright"/><!-- RIGHT CURLY BRACKET -->
      <map code="0xa0" name="uni00A0"/><!-- NO-BREAK SPACE -->
      <map code="0x2c6" name="circumflex"/><!-- MODIFIER LETTER CIRCUMFLEX ACCENT -->
      <map code="0x2dc" name="tilde"/><!-- SMALL TILDE -->
      <map code="0x302" name="uni0302"/><!-- COMBINING CIRCUMFLEX ACCENT -->
      <map code="0x303" name="tildecomb"/><!-- COMBINING TILDE -->
      <map code="0x2016" name="uni2016"/><!-- DOUBLE VERTICAL LINE -->
      <map code="0x2191" name="arrowup"/><!-- UPWARDS ARROW -->
      <map code="0x2193" name="arrowdown"/><!-- DOWNWARDS ARROW -->
      <map code="0x21d1" name="arrowdblup"/><!-- UPWARDS DOUBLE ARROW -->
      <map code="0x21d3" name="arrowdbldown"/><!-- DOWNWARDS DOUBLE ARROW -->
      <map code="0x220f" name="product"/><!-- N-ARY PRODUCT -->
      <map code="0x2210" name="uni2210"/><!-- N-ARY COPRODUCT -->
      <map code="0x2211" name="summation"/><!-- N-ARY SUMMATION -->
      <map code="0x221a" name="radical"/><!-- SQUARE ROOT -->
      <map code="0x2223" name="uni2223"/><!-- DIVIDES -->
      <map code="0x2225" name="uni2225"/><!-- PARALLEL TO -->
      <map code="0x222b" name="integral"/><!-- INTEGRAL -->
      <map code="0x222c" name="uni222C"/><!-- DOUBLE INTEGRAL -->
      <map code="0x222d" name="uni222D"/><!-- TRIPLE INTEGRAL -->
      <map code="0x222e" name="uni222E"/><!-- CONTOUR INTEGRAL -->
      <map code="0x22c0" name="uni22C0"/><!-- N-ARY LOGICAL AND -->
      <map code="0x22c1" name="uni22C1"/><!-- N-ARY LOGICAL OR -->
      <map code="0x22c2" name="uni22C2"/><!-- N-ARY INTERSECTION -->
      <map code="0x22c3" name="uni22C3"/><!-- N-ARY UNION -->
      <map code="0x2308" name="uni2308"/><!-- LEFT CEILING -->
      <map code="0x2309" name="uni2309"/><!-- RIGHT CEILING -->
      <map code="0x230a" name="uni230A"/><!-- LEFT FLOOR -->
      <map code="0x230b" name="uni230B"/><!-- RIGHT FLOOR -->
      <map code="0x23d0" name="uni23D0"/><!-- VERTICAL LINE EXTENSION -->
      <map code="0x27e8" name="uni27E8"/><!-- MATHEMATICAL LEFT ANGLE BRACKET -->
      <map code="0x27e9" name="uni27E9"/><!-- MATHEMATICAL RIGHT ANGLE BRACKET -->
      <map code="0x2a00" name="uni2A00"/><!-- N-ARY CIRCLED DOT OPERATOR -->
      <map code="0x2a01" name="uni2A01"/><!-- N-ARY CIRCLED PLUS OPERATOR -->
      <map code="0x2a02" name="uni2A02"/><!-- N-ARY CIRCLED TIMES OPERATOR -->
      <map code="0x2a04" name="uni2A04"/><!-- N-ARY UNION OPERATOR WITH PLUS -->
      <map code="0x2a06" name="uni2A06"/><!-- N-ARY SQUARE UNION OPERATOR -->
      <map code="0xeffd" name="uniEFFD"/><!-- ???? -->
      <map code="0xeffe" name="uniEFFE"/><!-- ???? -->
      <map code="0xefff" name="uniEFFF"/><!-- ???? -->
    </cmap_format_4>
    <cmap_format_0 platformID="1" platEncID="0" language="0">
      <map code="0x0" name=".null"/>
      <map code="0x1" name=".notdef"/>
      <map code="0x2" name=".notdef"/>
      <map code="0x3" name=".notdef"/>
      <map code="0x4" name=".notdef"/>
      <map code="0x5" name=".notdef"/>
      <map code="0x6" name=".notdef"/>
      <map code="0x7" name=".notdef"/>
      <map code="0x8" name=".null"/>
      <map code="0x9" name="nonmarkingreturn"/>
      <map code="0xa" name=".notdef"/>
      <map code="0xb" name=".notdef"/>
      <map code="0xc" name=".notdef"/>
      <map code="0xd" name="nonmarkingreturn"/>
      <map code="0xe" name=".notdef"/>
      <map code="0xf" name=".notdef"/>
      <map code="0x10" name=".notdef"/>
      <map code="0x11" name=".notdef"/>
      <map code="0x12" name=".notdef"/>
      <map code="0x13" name=".notdef"/>
      <map code="0x14" name=".notdef"/>
      <map code="0x15" name=".notdef"/>
      <map code="0x16" name=".notdef"/>
      <map code="0x17" name=".notdef"/>
      <map code="0x18" name=".notdef"/>
      <map code="0x19" name=".notdef"/>
      <map code="0x1a" name=".notdef"/>
      <map code="0x1b" name=".notdef"/>
      <map code="0x1c" name=".notdef"/>
      <map code="0x1d" name=".null"/>
      <map code="0x1e" name=".notdef"/>
      <map code="0x1f" name=".notdef"/>
      <map code="0x20" name="space"/>
      <map code="0x21" name=".notdef"/>
      <map code="0x22" name=".notdef"/>
      <map code="0x23" name=".notdef"/>
      <map code="0x24" name=".notdef"/>
      <map code="0x25" name=".notdef"/>
      <map code="0x26" name=".notdef"/>
      <map code="0x27" name=".notdef"/>
      <map code="0x28" name="parenleft"/>
      <map code="0x29" name="parenright"/>
      <map code="0x2a" name=".notdef"/>
      <map code="0x2b" name=".notdef"/>
      <map code="0x2c" name=".notdef"/>
      <map code="0x2d" name=".notdef"/>
      <map code="0x2e" name=".notdef"/>
      <map code="0x2f" name="slash"/>
      <map code="0x30" name=".notdef"/>
      <map code="0x31" name=".notdef"/>
      <map code="0x32" name=".notdef"/>
      <map code="0x33" name=".notdef"/>
      <map code="0x34" name=".notdef"/>
      <map code="0x35" name=".notdef"/>
      <map code="0x36" name=".notdef"/>
      <map code="0x37" name=".notdef"/>
      <map code="0x38" name=".notdef"/>
      <map code="0x39" name=".notdef"/>
      <map code="0x3a" name=".notdef"/>
      <map code="0x3b" name=".notdef"/>
      <map code="0x3c" name=".notdef"/>
      <map code="0x3d" name=".notdef"/>
      <map code="0x3e" name=".notdef"/>
      <map code="0x3f" name=".notdef"/>
      <map code="0x40" name=".notdef"/>
      <map code="0x41" name=".notdef"/>
      <map code="0x42" name=".notdef"/>
      <map code="0x43" name=".notdef"/>
      <map code="0x44" name=".notdef"/>
      <map code="0x45" name=".notdef"/>
      <map code="0x46" name=".notdef"/>
      <map code="0x47" name=".notdef"/>
      <map code="0x48" name=".notdef"/>
      <map code="0x49" name=".notdef"/>
      <map code="0x4a" name=".notdef"/>
      <map code="0x4b" name=".notdef"/>
      <map code="0x4c" name=".notdef"/>
      <map code="0x4d" name=".notdef"/>
      <map code="0x4e" name=".notdef"/>
      <map code="0x4f" name=".notdef"/>
      <map code="0x50" name=".notdef"/>
      <map code="0x51" name=".notdef"/>
      <map code="0x52" name=".notdef"/>
      <map code="0x53" name=".notdef"/>
      <map code="0x54" name=".notdef"/>
      <map code="0x55" name=".notdef"/>
      <map code="0x56" name=".notdef"/>
      <map code="0x57" name=".notdef"/>
      <map code="0x58" name=".notdef"/>
      <map code="0x59" name=".notdef"/>
      <map code="0x5a" name=".notdef"/>
      <map code="0x5b" name="bracketleft"/>
      <map code="0x5c" name="backslash"/>
      <map code="0x5d" name="bracketright"/>
      <map code="0x5e" name=".notdef"/>
      <map code="0x5f" name=".notdef"/>
      <map code="0x60" name=".notdef"/>
      <map code="0x61" name=".notdef"/>
      <map code="0x62" name=".notdef"/>
      <map code="0x63" name=".notdef"/>
      <map code="0x64" name=".notdef"/>
      <map code="0x65" name=".notdef"/>
      <map code="0x66" name=".notdef"/>
      <map code="0x67" name=".notdef"/>
      <map code="0x68" name=".notdef"/>
      <map code="0x69" name=".notdef"/>
      <map code="0x6a" name=".notdef"/>
      <map code="0x6b" name=".notdef"/>
      <map code="0x6c" name=".notdef"/>
      <map code="0x6d" name=".notdef"/>
      <map code="0x6e" name=".notdef"/>
      <map code="0x6f" name=".notdef"/>
      <map code="0x70" name=".notdef"/>
      <map code="0x71" name=".notdef"/>
      <map code="0x72" name=".notdef"/>
      <map code="0x73" name=".notdef"/>
      <map code="0x74" name=".notdef"/>
      <map code="0x75" name=".notdef"/>
      <map code="0x76" name=".notdef"/>
      <map code="0x77" name=".notdef"/>
      <map code="0x78" name=".notdef"/>
      <map code="0x79" name=".notdef"/>
      <map code="0x7a" name=".notdef"/>
      <map code="0x7b" name="braceleft"/>
      <map code="0x7c" name=".notdef"/>
      <map code="0x7d" name="braceright"/>
      <map code="0x7e" name=".notdef"/>
      <map code="0x7f" name=".notdef"/>
      <map code="0x80" name=".notdef"/>
      <map code="0x81" name=".notdef"/>
      <map code="0x82" name=".notdef"/>
      <map code="0x83" name=".notdef"/>
      <map code="0x84" name=".notdef"/>
      <map code="0x85" name=".notdef"/>
      <map code="0x86" name=".notdef"/>
      <map code="0x87" name=".notdef"/>
      <map code="0x88" name=".notdef"/>
      <map code="0x89" name=".notdef"/>
      <map code="0x8a" name=".notdef"/>
      <map code="0x8b" name=".notdef"/>
      <map code="0x8c" name=".notdef"/>
      <map code="0x8d" name=".notdef"/>
      <map code="0x8e" name=".notdef"/>
      <map code="0x8f" name=".notdef"/>
      <map code="0x90" name=".notdef"/>
      <map code="0x91" name=".notdef"/>
      <map code="0x92" name=".notdef"/>
      <map code="0x93" name=".notdef"/>
      <map code="0x94" name=".notdef"/>
      <map code="0x95" name=".notdef"/>
      <map code="0x96" name=".notdef"/>
      <map code="0x97" name=".notdef"/>
      <map code="0x98" name=".notdef"/>
      <map code="0x99" name=".notdef"/>
      <map code="0x9a" name=".notdef"/>
      <map code="0x9b" name=".notdef"/>
      <map code="0x9c" name=".notdef"/>
      <map code="0x9d" name=".notdef"/>
      <map code="0x9e" name=".notdef"/>
      <map code="0x9f" name=".notdef"/>
      <map code="0xa0" name=".notdef"/>
      <map code="0xa1" name=".notdef"/>
      <map code="0xa2" name=".notdef"/>
      <map code="0xa3" name=".notdef"/>
      <map code="0xa4" name=".notdef"/>
      <map code="0xa5" name=".notdef"/>
      <map code="0xa6" name=".notdef"/>
      <map code="0xa7" name=".notdef"/>
      <map code="0xa8" name=".notdef"/>
      <map code="0xa9" name=".notdef"/>
      <map code="0xaa" name=".notdef"/>
      <map code="0xab" name=".notdef"/>
      <map code="0xac" name=".notdef"/>
      <map code="0xad" name=".notdef"/>
      <map code="0xae" name=".notdef"/>
      <map code="0xaf" name=".notdef"/>
      <map code="0xb0" name=".notdef"/>
      <map code="0xb1" name=".notdef"/>
      <map code="0xb2" name=".notdef"/>
      <map code="0xb3" name=".notdef"/>
      <map code="0xb4" name=".notdef"/>
      <map code="0xb5" name=".notdef"/>
      <map code="0xb6" name=".notdef"/>
      <map code="0xb7" name="summation"/>
      <map code="0xb8" name="product"/>
      <map code="0xb9" name=".notdef"/>
      <map code="0xba" name="integral"/>
      <map code="0xbb" name=".notdef"/>
      <map code="0xbc" name=".notdef"/>
      <map code="0xbd" name=".notdef"/>
      <map code="0xbe" name=".notdef"/>
      <map code="0xbf" name=".notdef"/>
      <map code="0xc0" name=".notdef"/>
      <map code="0xc1" name=".notdef"/>
      <map code="0xc2" name=".notdef"/>
      <map code="0xc3" name="radical"/>
      <map code="0xc4" name=".notdef"/>
      <map code="0xc5" name=".notdef"/>
      <map code="0xc6" name=".notdef"/>
      <map code="0xc7" name=".notdef"/>
      <map code="0xc8" name=".notdef"/>
      <map code="0xc9" name=".notdef"/>
      <map code="0xca" name="uni00A0"/>
      <map code="0xcb" name=".notdef"/>
      <map code="0xcc" name=".notdef"/>
      <map code="0xcd" name=".notdef"/>
      <map code="0xce" name=".notdef"/>
      <map code="0xcf" name=".notdef"/>
      <map code="0xd0" name=".notdef"/>
      <map code="0xd1" name=".notdef"/>
      <map code="0xd2" name=".notdef"/>
      <map code="0xd3" name=".notdef"/>
      <map code="0xd4" name=".notdef"/>
      <map code="0xd5" name=".notdef"/>
      <map code="0xd6" name=".notdef"/>
      <map code="0xd7" name=".notdef"/>
      <map code="0xd8" name=".notdef"/>
      <map code="0xd9" name=".notdef"/>
      <map code="0xda" name=".notdef"/>
      <map code="0xdb" name=".notdef"/>
      <map code="0xdc" name=".notdef"/>
      <map code="0xdd" name=".notdef"/>
      <map code="0xde" name=".notdef"/>
      <map code="0xdf" name=".notdef"/>
      <map code="0xe0" name=".notdef"/>
      <map code="0xe1" name=".notdef"/>
      <map code="0xe2" name=".notdef"/>
      <map code="0xe3" name=".notdef"/>
      <map code="0xe4" name=".notdef"/>
      <map code="0xe5" name=".notdef"/>
      <map code="0xe6" name=".notdef"/>
      <map code="0xe7" name=".notdef"/>
      <map code="0xe8" name=".notdef"/>
      <map code="0xe9" name=".notdef"/>
      <map code="0xea" name=".notdef"/>
      <map code="0xeb" name=".notdef"/>
      <map code="0xec" name=".notdef"/>
      <map code="0xed" name=".notdef"/>
      <map code="0xee" name=".notdef"/>
      <map code="0xef" name=".notdef"/>
      <map code="0xf0" name=".notdef"/>
      <map code="0xf1" name=".notdef"/>
      <map code="0xf2" name=".notdef"/>
      <map code="0xf3" name=".notdef"/>
      <map code="0xf4" name=".notdef"/>
      <map code="0xf5" name=".notdef"/>
      <map code="0xf6" name="circumflex"/>
      <map code="0xf7" name="tilde"/>
      <map code="0xf8" name=".notdef"/>
      <map code="0xf9" name=".notdef"/>
      <map code="0xfa" name=".notdef"/>
      <map code="0xfb" name=".notdef"/>
      <map code="0xfc" name=".notdef"/>
      <map code="0xfd" name=".notdef"/>
      <map code="0xfe" name=".notdef"/>
      <map code="0xff" name=".notdef"/>
    </cmap_format_0>
    <cmap_format_4 platformID="3" platEncID="1" language="0">
      <map code="0x20" name="space"/><!-- SPACE -->
      <map code="0x28" name="parenleft"/><!-- LEFT PARENTHESIS -->
      <map code="0x29" name="parenright"/><!-- RIGHT PARENTHESIS -->
      <map code="0x2f" name="slash"/><!-- SOLIDUS -->
      <map code="0x5b" name="bracketleft"/><!-- LEFT SQUARE BRACKET -->
      <map code="0x5c" name="backslash"/><!-- REVERSE SOLIDUS -->
      <map code="0x5d" name="bracketright"/><!-- RIGHT SQUARE BRACKET -->
      <map code="0x7b" name="braceleft"/><!-- LEFT CURLY BRACKET -->
      <map code="0x7d" name="braceright"/><!-- RIGHT CURLY BRACKET -->
      <map code="0xa0" name="uni00A0"/><!-- NO-BREAK SPACE -->
      <map code="0x2c6" name="circumflex"/><!-- MODIFIER LETTER CIRCUMFLEX ACCENT -->
      <map code="0x2dc" name="tilde"/><!-- SMALL TILDE -->
      <map code="0x302" name="uni0302"/><!-- COMBINING CIRCUMFLEX ACCENT -->
      <map code="0x303" name="tildecomb"/><!-- COMBINING TILDE -->
      <map code="0x2016" name="uni2016"/><!-- DOUBLE VERTICAL LINE -->
      <map code="0x2191" name="arrowup"/><!-- UPWARDS ARROW -->
      <map code="0x2193" name="arrowdown"/><!-- DOWNWARDS ARROW -->
      <map code="0x21d1" name="arrowdblup"/><!-- UPWARDS DOUBLE ARROW -->
      <map code="0x21d3" name="arrowdbldown"/><!-- DOWNWARDS DOUBLE ARROW -->
      <map code="0x220f" name="product"/><!-- N-ARY PRODUCT -->
      <map code="0x2210" name="uni2210"/><!-- N-ARY COPRODUCT -->
      <map code="0x2211" name="summation"/><!-- N-ARY SUMMATION -->
      <map code="0x221a" name="radical"/><!-- SQUARE ROOT -->
      <map code="0x2223" name="uni2223"/><!-- DIVIDES -->
      <map code="0x2225" name="uni2225"/><!-- PARALLEL TO -->
      <map code="0x222b" name="integral"/><!-- INTEGRAL -->
      <map code="0x222c" name="uni222C"/><!-- DOUBLE INTEGRAL -->
      <map code="0x222d" name="uni222D"/><!-- TRIPLE INTEGRAL -->
      <map code="0x222e" name="uni222E"/><!-- CONTOUR INTEGRAL -->
      <map code="0x22c0" name="uni22C0"/><!-- N-ARY LOGICAL AND -->
      <map code="0x22c1" name="uni22C1"/><!-- N-ARY LOGICAL OR -->
      <map code="0x22c2" name="uni22C2"/><!-- N-ARY INTERSECTION -->
      <map code="0x22c3" name="uni22C3"/><!-- N-ARY UNION -->
      <map code="0x2308" name="uni2308"/><!-- LEFT CEILING -->
      <map code="0x2309" name="uni2309"/><!-- RIGHT CEILING -->
      <map code="0x230a" name="uni230A"/><!-- LEFT FLOOR -->
      <map code="0x230b" name="uni230B"/><!-- RIGHT FLOOR -->
      <map code="0x23d0" name="uni23D0"/><!-- VERTICAL LINE EXTENSION -->
      <map code="0x27e8" name="uni27E8"/><!-- MATHEMATICAL LEFT ANGLE BRACKET -->
      <map code="0x27e9" name="uni27E9"/><!-- MATHEMATICAL RIGHT ANGLE BRACKET -->
      <map code="0x2a00" name="uni2A00"/><!-- N-ARY CIRCLED DOT OPERATOR -->
      <map code="0x2a01" name="uni2A01"/><!-- N-ARY CIRCLED PLUS OPERATOR -->
      <map code="0x2a02" name="uni2A02"/><!-- N-ARY CIRCLED TIMES OPERATOR -->
      <map code="0x2a04" name="uni2A04"/><!-- N-ARY UNION OPERATOR WITH PLUS -->
      <map code="0x2a06" name="uni2A06"/><!-- N-ARY SQUARE UNION OPERATOR -->
      <map code="0xeffd" name="uniEFFD"/><!-- ???? -->
      <map code="0xeffe" name="uniEFFE"/><!-- ???? -->
      <map code="0xefff" name="uniEFFF"/><!-- ???? -->
    </cmap_format_4>
  </cmap>

  <fpgm>
    <assembly>
      PUSHB[ ]	/* 1 value pushed */
      0
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      NEQ[ ]	/* NotEqual */
      IF[ ]	/* If */
      RCVT[ ]	/* ReadCVT */
      EIF[ ]	/* EndIf */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      MPPEM[ ]	/* MeasurePixelPerEm */
      PUSHW[ ]	/* 1 value pushed */
      14
      LTEQ[ ]	/* LessThenOrEqual */
      MPPEM[ ]	/* MeasurePixelPerEm */
      PUSHB[ ]	/* 1 value pushed */
      6
      GTEQ[ ]	/* GreaterThanOrEqual */
      AND[ ]	/* LogicalAnd */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      52
      ELSE[ ]	/* Else */
      PUSHB[ ]	/* 1 value pushed */
      40
      EIF[ ]	/* EndIf */
      ADD[ ]	/* Add */
      FLOOR[ ]	/* Floor */
      DUP[ ]	/* DuplicateTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      NEQ[ ]	/* NotEqual */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      SUB[ ]	/* Subtract */
      PUSHW[ ]	/* 2 values pushed */
      2048 2048
      MUL[ ]	/* Multiply */
      MUL[ ]	/* Multiply */
      SWAP[ ]	/* SwapTopStack */
      DIV[ ]	/* Divide */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 1 value pushed */
      0
      RS[ ]	/* ReadStore */
      SWAP[ ]	/* SwapTopStack */
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSHB[ ]	/* 3 values pushed */
      0 1 0
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      WS[ ]	/* WriteStore */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      1
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      32
      ADD[ ]	/* Add */
      FLOOR[ ]	/* Floor */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      2
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      ABS[ ]	/* Absolute */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      192
      LT[ ]	/* LessThan */
      PUSHB[ ]	/* 1 value pushed */
      4
      MINDEX[ ]	/* MoveXToTopStack */
      AND[ ]	/* LogicalAnd */
      PUSHB[ ]	/* 3 values pushed */
      40 1 10
      RS[ ]	/* ReadStore */
      RCVT[ ]	/* ReadCVT */
      MUL[ ]	/* Multiply */
      RCVT[ ]	/* ReadCVT */
      GT[ ]	/* GreaterThan */
      OR[ ]	/* LogicalOr */
      IF[ ]	/* If */
      POP[ ]	/* PopTopStack */
      SWAP[ ]	/* SwapTopStack */
      POP[ ]	/* PopTopStack */
      ELSE[ ]	/* Else */
      ROLL[ ]	/* RollTopThreeStack */
      IF[ ]	/* If */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      80
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      POP[ ]	/* PopTopStack */
      PUSHB[ ]	/* 1 value pushed */
      64
      EIF[ ]	/* EndIf */
      ELSE[ ]	/* Else */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      56
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      POP[ ]	/* PopTopStack */
      PUSHB[ ]	/* 1 value pushed */
      56
      EIF[ ]	/* EndIf */
      EIF[ ]	/* EndIf */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 2 values pushed */
      1 10
      RS[ ]	/* ReadStore */
      RCVT[ ]	/* ReadCVT */
      MUL[ ]	/* Multiply */
      RCVT[ ]	/* ReadCVT */
      SUB[ ]	/* Subtract */
      ABS[ ]	/* Absolute */
      PUSHB[ ]	/* 1 value pushed */
      40
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      POP[ ]	/* PopTopStack */
      PUSHB[ ]	/* 2 values pushed */
      1 10
      RS[ ]	/* ReadStore */
      RCVT[ ]	/* ReadCVT */
      MUL[ ]	/* Multiply */
      RCVT[ ]	/* ReadCVT */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      48
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      POP[ ]	/* PopTopStack */
      PUSHB[ ]	/* 1 value pushed */
      48
      EIF[ ]	/* EndIf */
      ELSE[ ]	/* Else */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      192
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      DUP[ ]	/* DuplicateTopStack */
      FLOOR[ ]	/* Floor */
      DUP[ ]	/* DuplicateTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      ROLL[ ]	/* RollTopThreeStack */
      SUB[ ]	/* Subtract */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      10
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      ADD[ ]	/* Add */
      ELSE[ ]	/* Else */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      32
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      POP[ ]	/* PopTopStack */
      PUSHB[ ]	/* 1 value pushed */
      10
      ADD[ ]	/* Add */
      ELSE[ ]	/* Else */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      54
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      POP[ ]	/* PopTopStack */
      PUSHB[ ]	/* 1 value pushed */
      54
      ADD[ ]	/* Add */
      ELSE[ ]	/* Else */
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      EIF[ ]	/* EndIf */
      EIF[ ]	/* EndIf */
      ELSE[ ]	/* Else */
      PUSHB[ ]	/* 1 value pushed */
      1
      CALL[ ]	/* CallFunction */
      EIF[ ]	/* EndIf */
      EIF[ ]	/* EndIf */
      SWAP[ ]	/* SwapTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      NEG[ ]	/* Negate */
      EIF[ ]	/* EndIf */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      3
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      RCVT[ ]	/* ReadCVT */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      SUB[ ]	/* Subtract */
      ABS[ ]	/* Absolute */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      5
      RS[ ]	/* ReadStore */
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      5
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 1 value pushed */
      6
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 1 value pushed */
      1
      ADD[ ]	/* Add */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      4
      FDEF[ ]	/* FunctionDefinition */
      SWAP[ ]	/* SwapTopStack */
      POP[ ]	/* PopTopStack */
      SWAP[ ]	/* SwapTopStack */
      POP[ ]	/* PopTopStack */
      DUP[ ]	/* DuplicateTopStack */
      ABS[ ]	/* Absolute */
      PUSHB[ ]	/* 2 values pushed */
      5 98
      WS[ ]	/* WriteStore */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      6
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 2 values pushed */
      1 10
      RS[ ]	/* ReadStore */
      RCVT[ ]	/* ReadCVT */
      MUL[ ]	/* Multiply */
      PUSHB[ ]	/* 2 values pushed */
      1 10
      RS[ ]	/* ReadStore */
      PUSHB[ ]	/* 1 value pushed */
      0
      ADD[ ]	/* Add */
      RCVT[ ]	/* ReadCVT */
      MUL[ ]	/* Multiply */
      PUSHB[ ]	/* 1 value pushed */
      3
      LOOPCALL[ ]	/* LoopAndCallFunction */
      POP[ ]	/* PopTopStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      6
      RS[ ]	/* ReadStore */
      DUP[ ]	/* DuplicateTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      DUP[ ]	/* DuplicateTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      PUSHB[ ]	/* 1 value pushed */
      1
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 2 values pushed */
      48 5
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      4
      MINDEX[ ]	/* MoveXToTopStack */
      LTEQ[ ]	/* LessThenOrEqual */
      IF[ ]	/* If */
      ADD[ ]	/* Add */
      LT[ ]	/* LessThan */
      ELSE[ ]	/* Else */
      SUB[ ]	/* Subtract */
      GT[ ]	/* GreaterThan */
      EIF[ ]	/* EndIf */
      IF[ ]	/* If */
      SWAP[ ]	/* SwapTopStack */
      EIF[ ]	/* EndIf */
      POP[ ]	/* PopTopStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      64
      GTEQ[ ]	/* GreaterThanOrEqual */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      1
      CALL[ ]	/* CallFunction */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      PUSHB[ ]	/* 1 value pushed */
      64
      EIF[ ]	/* EndIf */
      SWAP[ ]	/* SwapTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      NEG[ ]	/* Negate */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      5
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      7
      RS[ ]	/* ReadStore */
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 3 values pushed */
      0 2 0
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      WS[ ]	/* WriteStore */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      6
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      7
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 1 value pushed */
      2
      DIV[ ]	/* Divide */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      PUSHB[ ]	/* 1 value pushed */
      1
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 1 value pushed */
      5
      LOOPCALL[ ]	/* LoopAndCallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      7
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      RCVT[ ]	/* ReadCVT */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      11
      RS[ ]	/* ReadStore */
      MUL[ ]	/* Multiply */
      PUSHW[ ]	/* 1 value pushed */
      1024
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      ADD[ ]	/* Add */
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSHB[ ]	/* 1 value pushed */
      1
      ADD[ ]	/* Add */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      8
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      7 11 0
      RS[ ]	/* ReadStore */
      RCVT[ ]	/* ReadCVT */
      WS[ ]	/* WriteStore */
      LOOPCALL[ ]	/* LoopAndCallFunction */
      POP[ ]	/* PopTopStack */
      PUSHB[ ]	/* 3 values pushed */
      0 1 0
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      WS[ ]	/* WriteStore */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      9
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      0
      RS[ ]	/* ReadStore */
      SWAP[ ]	/* SwapTopStack */
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSHB[ ]	/* 3 values pushed */
      0 1 0
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      WS[ ]	/* WriteStore */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      10
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      RCVT[ ]	/* ReadCVT */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      1
      CALL[ ]	/* CallFunction */
      SWAP[ ]	/* SwapTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      RS[ ]	/* ReadStore */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      ADD[ ]	/* Add */
      DUP[ ]	/* DuplicateTopStack */
      RCVT[ ]	/* ReadCVT */
      ROLL[ ]	/* RollTopThreeStack */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      DUP[ ]	/* DuplicateTopStack */
      ABS[ ]	/* Absolute */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      32
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      POP[ ]	/* PopTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      ELSE[ ]	/* Else */
      PUSHB[ ]	/* 1 value pushed */
      48
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      32
      ELSE[ ]	/* Else */
      PUSHB[ ]	/* 1 value pushed */
      64
      EIF[ ]	/* EndIf */
      EIF[ ]	/* EndIf */
      SWAP[ ]	/* SwapTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      NEG[ ]	/* Negate */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 1 value pushed */
      3
      CINDEX[ ]	/* CopyXToTopStack */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      WCVTP[ ]	/* WriteCVTInPixels */
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSHB[ ]	/* 1 value pushed */
      1
      ADD[ ]	/* Add */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      11
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      RCVT[ ]	/* ReadCVT */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      1
      CALL[ ]	/* CallFunction */
      SWAP[ ]	/* SwapTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      RS[ ]	/* ReadStore */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      ADD[ ]	/* Add */
      DUP[ ]	/* DuplicateTopStack */
      RCVT[ ]	/* ReadCVT */
      ROLL[ ]	/* RollTopThreeStack */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      DUP[ ]	/* DuplicateTopStack */
      ABS[ ]	/* Absolute */
      PUSHB[ ]	/* 1 value pushed */
      36
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      0
      ELSE[ ]	/* Else */
      PUSHB[ ]	/* 1 value pushed */
      64
      EIF[ ]	/* EndIf */
      SWAP[ ]	/* SwapTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      NEG[ ]	/* Negate */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 1 value pushed */
      3
      CINDEX[ ]	/* CopyXToTopStack */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      WCVTP[ ]	/* WriteCVTInPixels */
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSHB[ ]	/* 1 value pushed */
      1
      ADD[ ]	/* Add */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      12
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 3 values pushed */
      11 10 3
      RCVT[ ]	/* ReadCVT */
      IF[ ]	/* If */
      POP[ ]	/* PopTopStack */
      ELSE[ ]	/* Else */
      SWAP[ ]	/* SwapTopStack */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      LOOPCALL[ ]	/* LoopAndCallFunction */
      POP[ ]	/* PopTopStack */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      13
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      2 2
      RCVT[ ]	/* ReadCVT */
      PUSHB[ ]	/* 1 value pushed */
      100
      SUB[ ]	/* Subtract */
      WCVTP[ ]	/* WriteCVTInPixels */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      14
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      1
      ADD[ ]	/* Add */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      12
      RS[ ]	/* ReadStore */
      MD[1]	/* MeasureDistance */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      12
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 1 value pushed */
      13
      RS[ ]	/* ReadStore */
      MD[1]	/* MeasureDistance */
      PUSHB[ ]	/* 1 value pushed */
      0
      GT[ ]	/* GreaterThan */
      IF[ ]	/* If */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      13
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      15
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      16
      DIV[ ]	/* Divide */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      DUP[ ]	/* DuplicateTopStack */
      PUSHW[ ]	/* 1 value pushed */
      1024
      MUL[ ]	/* Multiply */
      ROLL[ ]	/* RollTopThreeStack */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 1 value pushed */
      14
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      DUP[ ]	/* DuplicateTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      ADD[ ]	/* Add */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      14
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      SWAP[ ]	/* SwapTopStack */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      16
      FDEF[ ]	/* FunctionDefinition */
      MPPEM[ ]	/* MeasurePixelPerEm */
      EQ[ ]	/* Equal */
      IF[ ]	/* If */
      PUSHB[ ]	/* 2 values pushed */
      4 100
      WCVTP[ ]	/* WriteCVTInPixels */
      EIF[ ]	/* EndIf */
      DEPTH[ ]	/* GetDepthStack */
      PUSHB[ ]	/* 1 value pushed */
      13
      NEG[ ]	/* Negate */
      SWAP[ ]	/* SwapTopStack */
      JROT[ ]	/* JumpRelativeOnTrue */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      17
      FDEF[ ]	/* FunctionDefinition */
      MPPEM[ ]	/* MeasurePixelPerEm */
      LTEQ[ ]	/* LessThenOrEqual */
      IF[ ]	/* If */
      MPPEM[ ]	/* MeasurePixelPerEm */
      GTEQ[ ]	/* GreaterThanOrEqual */
      IF[ ]	/* If */
      PUSHB[ ]	/* 2 values pushed */
      4 100
      WCVTP[ ]	/* WriteCVTInPixels */
      EIF[ ]	/* EndIf */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      DEPTH[ ]	/* GetDepthStack */
      PUSHB[ ]	/* 1 value pushed */
      19
      NEG[ ]	/* Negate */
      SWAP[ ]	/* SwapTopStack */
      JROT[ ]	/* JumpRelativeOnTrue */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      18
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      0 15
      RS[ ]	/* ReadStore */
      NEQ[ ]	/* NotEqual */
      IF[ ]	/* If */
      PUSHB[ ]	/* 2 values pushed */
      15 15
      RS[ ]	/* ReadStore */
      PUSHB[ ]	/* 1 value pushed */
      1
      SUB[ ]	/* Subtract */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 1 value pushed */
      15
      CALL[ ]	/* CallFunction */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 1 value pushed */
      0
      RS[ ]	/* ReadStore */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 2 values pushed */
      12 2
      CINDEX[ ]	/* CopyXToTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 2 values pushed */
      13 2
      CINDEX[ ]	/* CopyXToTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 1 value pushed */
      1
      SZPS[ ]	/* SetZonePointerS */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      3
      CINDEX[ ]	/* CopyXToTopStack */
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 2 values pushed */
      1 0
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      WS[ ]	/* WriteStore */
      ROLL[ ]	/* RollTopThreeStack */
      ROLL[ ]	/* RollTopThreeStack */
      DUP[ ]	/* DuplicateTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 1 value pushed */
      14
      LOOPCALL[ ]	/* LoopAndCallFunction */
      POP[ ]	/* PopTopStack */
      SWAP[ ]	/* SwapTopStack */
      PUSHB[ ]	/* 1 value pushed */
      1
      SUB[ ]	/* Subtract */
      DUP[ ]	/* DuplicateTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 1 value pushed */
      14
      LOOPCALL[ ]	/* LoopAndCallFunction */
      POP[ ]	/* PopTopStack */
      ELSE[ ]	/* Else */
      PUSHB[ ]	/* 2 values pushed */
      1 0
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 1 value pushed */
      14
      LOOPCALL[ ]	/* LoopAndCallFunction */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 1 value pushed */
      12
      RS[ ]	/* ReadStore */
      GC[1]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      13
      RS[ ]	/* ReadStore */
      GC[1]	/* GetCoordOnPVector */
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 1 value pushed */
      2
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      11
      RS[ ]	/* ReadStore */
      MUL[ ]	/* Multiply */
      PUSHW[ ]	/* 1 value pushed */
      1024
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 2 values pushed */
      0 0
      SZP0[ ]	/* SetZonePointer0 */
      SWAP[ ]	/* SwapTopStack */
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSHB[ ]	/* 1 value pushed */
      1
      RS[ ]	/* ReadStore */
      PUSHB[ ]	/* 1 value pushed */
      0
      MIAP[0]	/* MoveIndirectAbsPt */
      PUSHB[ ]	/* 3 values pushed */
      1 1 1
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      WS[ ]	/* WriteStore */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      19
      FDEF[ ]	/* FunctionDefinition */
      SVTCA[0]	/* SetFPVectorToAxis */
      PUSHB[ ]	/* 2 values pushed */
      0 2
      RCVT[ ]	/* ReadCVT */
      EQ[ ]	/* Equal */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      15
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      DUP[ ]	/* DuplicateTopStack */
      RCVT[ ]	/* ReadCVT */
      PUSHB[ ]	/* 1 value pushed */
      11
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 1 value pushed */
      10
      SWAP[ ]	/* SwapTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      ADD[ ]	/* Add */
      WS[ ]	/* WriteStore */
      DUP[ ]	/* DuplicateTopStack */
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 1 value pushed */
      1
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 6 values pushed */
      16 16 1 0 14 0
      WS[ ]	/* WriteStore */
      WS[ ]	/* WriteStore */
      ROLL[ ]	/* RollTopThreeStack */
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 2 values pushed */
      18 6
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      117
      CALL[ ]	/* CallFunction */
      ELSE[ ]	/* Else */
      CLEAR[ ]	/* ClearStack */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      20
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      0 19
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      21
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      1 19
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      22
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      2 19
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      23
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      3 19
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      24
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      4 19
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      25
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      5 19
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      26
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      6 19
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      27
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      7 19
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      28
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      8 19
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      29
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      9 19
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      41
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSHB[ ]	/* 1 value pushed */
      1
      DELTAP1[ ]	/* DeltaExceptionP1 */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      42
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSHB[ ]	/* 1 value pushed */
      1
      DELTAP2[ ]	/* DeltaExceptionP2 */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      43
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSHB[ ]	/* 1 value pushed */
      1
      DELTAP3[ ]	/* DeltaExceptionP3 */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      30
      FDEF[ ]	/* FunctionDefinition */
      SVTCA[0]	/* SetFPVectorToAxis */
      PUSHB[ ]	/* 1 value pushed */
      13
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 2 values pushed */
      0 2
      RCVT[ ]	/* ReadCVT */
      EQ[ ]	/* Equal */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      15
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      DUP[ ]	/* DuplicateTopStack */
      RCVT[ ]	/* ReadCVT */
      PUSHB[ ]	/* 1 value pushed */
      11
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 1 value pushed */
      10
      SWAP[ ]	/* SwapTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      ADD[ ]	/* Add */
      WS[ ]	/* WriteStore */
      DUP[ ]	/* DuplicateTopStack */
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 1 value pushed */
      1
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 6 values pushed */
      16 16 1 0 14 0
      WS[ ]	/* WriteStore */
      WS[ ]	/* WriteStore */
      ROLL[ ]	/* RollTopThreeStack */
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 2 values pushed */
      18 6
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      117
      CALL[ ]	/* CallFunction */
      ELSE[ ]	/* Else */
      CLEAR[ ]	/* ClearStack */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      31
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      0 30
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      32
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      1 30
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      33
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      2 30
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      34
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      3 30
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      35
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      4 30
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      36
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      5 30
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      37
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      6 30
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      38
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      7 30
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      39
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      8 30
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      40
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      9 30
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      44
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      PUSHB[ ]	/* 1 value pushed */
      1
      ADD[ ]	/* Add */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      45
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 1 value pushed */
      16
      ADD[ ]	/* Add */
      DUP[ ]	/* DuplicateTopStack */
      RS[ ]	/* ReadStore */
      SWAP[ ]	/* SwapTopStack */
      PUSHB[ ]	/* 1 value pushed */
      1
      ADD[ ]	/* Add */
      RS[ ]	/* ReadStore */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 1 value pushed */
      1
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 1 value pushed */
      44
      LOOPCALL[ ]	/* LoopAndCallFunction */
      POP[ ]	/* PopTopStack */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      46
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      45
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      45
      LOOPCALL[ ]	/* LoopAndCallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      47
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      GC[1]	/* GetCoordOnPVector */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      11
      RS[ ]	/* ReadStore */
      MUL[ ]	/* Multiply */
      PUSHW[ ]	/* 1 value pushed */
      1024
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      ADD[ ]	/* Add */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      SHPIX[ ]	/* ShiftZoneByPixel */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      NEQ[ ]	/* NotEqual */
      IF[ ]	/* If */
      DUP[ ]	/* DuplicateTopStack */
      GC[1]	/* GetCoordOnPVector */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      11
      RS[ ]	/* ReadStore */
      MUL[ ]	/* Multiply */
      PUSHW[ ]	/* 1 value pushed */
      1024
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      ADD[ ]	/* Add */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      SHPIX[ ]	/* ShiftZoneByPixel */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      48
      FDEF[ ]	/* FunctionDefinition */
      SVTCA[0]	/* SetFPVectorToAxis */
      PUSHB[ ]	/* 2 values pushed */
      0 2
      RCVT[ ]	/* ReadCVT */
      EQ[ ]	/* Equal */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      1
      SZPS[ ]	/* SetZonePointerS */
      PUSHB[ ]	/* 1 value pushed */
      47
      LOOPCALL[ ]	/* LoopAndCallFunction */
      PUSHB[ ]	/* 2 values pushed */
      5 1
      SZP2[ ]	/* SetZonePointer2 */
      RCVT[ ]	/* ReadCVT */
      IF[ ]	/* If */
      IUP[0]	/* InterpolateUntPts */
      EIF[ ]	/* EndIf */
      ELSE[ ]	/* Else */
      CLEAR[ ]	/* ClearStack */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      49
      FDEF[ ]	/* FunctionDefinition */
      SVTCA[0]	/* SetFPVectorToAxis */
      PUSHB[ ]	/* 1 value pushed */
      13
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 2 values pushed */
      0 2
      RCVT[ ]	/* ReadCVT */
      EQ[ ]	/* Equal */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      1
      SZPS[ ]	/* SetZonePointerS */
      PUSHB[ ]	/* 1 value pushed */
      47
      LOOPCALL[ ]	/* LoopAndCallFunction */
      PUSHB[ ]	/* 2 values pushed */
      5 1
      SZP2[ ]	/* SetZonePointer2 */
      RCVT[ ]	/* ReadCVT */
      IF[ ]	/* If */
      IUP[0]	/* InterpolateUntPts */
      EIF[ ]	/* EndIf */
      ELSE[ ]	/* Else */
      CLEAR[ ]	/* ClearStack */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      50
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      SHC[1]	/* ShiftContourByLastPt */
      PUSHB[ ]	/* 1 value pushed */
      1
      ADD[ ]	/* Add */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      51
      FDEF[ ]	/* FunctionDefinition */
      SVTCA[0]	/* SetFPVectorToAxis */
      PUSHB[ ]	/* 1 value pushed */
      1
      RCVT[ ]	/* ReadCVT */
      MUL[ ]	/* Multiply */
      PUSHW[ ]	/* 1 value pushed */
      1024
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      PUSHB[ ]	/* 1 value pushed */
      1
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      11
      RS[ ]	/* ReadStore */
      MUL[ ]	/* Multiply */
      PUSHW[ ]	/* 1 value pushed */
      1024
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      PUSHB[ ]	/* 1 value pushed */
      1
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      0
      SZPS[ ]	/* SetZonePointerS */
      PUSHB[ ]	/* 5 values pushed */
      0 0 0 0 0
      WCVTP[ ]	/* WriteCVTInPixels */
      MIAP[0]	/* MoveIndirectAbsPt */
      SWAP[ ]	/* SwapTopStack */
      SHPIX[ ]	/* ShiftZoneByPixel */
      PUSHB[ ]	/* 2 values pushed */
      50 1
      SZP2[ ]	/* SetZonePointer2 */
      LOOPCALL[ ]	/* LoopAndCallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      52
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      DUP[ ]	/* DuplicateTopStack */
      GC[1]	/* GetCoordOnPVector */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      11
      RS[ ]	/* ReadStore */
      MUL[ ]	/* Multiply */
      PUSHW[ ]	/* 1 value pushed */
      1024
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 1 value pushed */
      0
      RS[ ]	/* ReadStore */
      SUB[ ]	/* Subtract */
      SHPIX[ ]	/* ShiftZoneByPixel */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      53
      FDEF[ ]	/* FunctionDefinition */
      MDAP[0]	/* MoveDirectAbsPt */
      SLOOP[ ]	/* SetLoopVariable */
      ALIGNRP[ ]	/* AlignRelativePt */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      54
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      DUP[ ]	/* DuplicateTopStack */
      GC[1]	/* GetCoordOnPVector */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      11
      RS[ ]	/* ReadStore */
      MUL[ ]	/* Multiply */
      PUSHW[ ]	/* 1 value pushed */
      1024
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 1 value pushed */
      0
      RS[ ]	/* ReadStore */
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 1 value pushed */
      1
      RS[ ]	/* ReadStore */
      MUL[ ]	/* Multiply */
      SHPIX[ ]	/* ShiftZoneByPixel */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      55
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      2 0
      SZPS[ ]	/* SetZonePointerS */
      CINDEX[ ]	/* CopyXToTopStack */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      DUP[ ]	/* DuplicateTopStack */
      GC[1]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      0
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      MD[0]	/* MeasureDistance */
      ROLL[ ]	/* RollTopThreeStack */
      ROLL[ ]	/* RollTopThreeStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      DUP[ ]	/* DuplicateTopStack */
      IF[ ]	/* If */
      DIV[ ]	/* Divide */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 1 value pushed */
      1
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 3 values pushed */
      54 1 1
      SZP2[ ]	/* SetZonePointer2 */
      SZP1[ ]	/* SetZonePointer1 */
      LOOPCALL[ ]	/* LoopAndCallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      56
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      0
      SZPS[ ]	/* SetZonePointerS */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 1 value pushed */
      9
      RS[ ]	/* ReadStore */
      CALL[ ]	/* CallFunction */
      NEG[ ]	/* Negate */
      ROLL[ ]	/* RollTopThreeStack */
      MDAP[0]	/* MoveDirectAbsPt */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      ROLL[ ]	/* RollTopThreeStack */
      SHPIX[ ]	/* ShiftZoneByPixel */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      57
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      0
      SZPS[ ]	/* SetZonePointerS */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      4
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 1 value pushed */
      9
      RS[ ]	/* ReadStore */
      CALL[ ]	/* CallFunction */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      96
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      64
      LTEQ[ ]	/* LessThenOrEqual */
      IF[ ]	/* If */
      PUSHB[ ]	/* 4 values pushed */
      2 32 3 32
      ELSE[ ]	/* Else */
      PUSHB[ ]	/* 4 values pushed */
      2 38 3 26
      EIF[ ]	/* EndIf */
      WS[ ]	/* WriteStore */
      WS[ ]	/* WriteStore */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      8
      RS[ ]	/* ReadStore */
      DUP[ ]	/* DuplicateTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      SWAP[ ]	/* SwapTopStack */
      GC[0]	/* GetCoordOnPVector */
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 1 value pushed */
      4
      RS[ ]	/* ReadStore */
      PUSHB[ ]	/* 1 value pushed */
      2
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      ADD[ ]	/* Add */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      1
      CALL[ ]	/* CallFunction */
      DUP[ ]	/* DuplicateTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      ROLL[ ]	/* RollTopThreeStack */
      SUB[ ]	/* Subtract */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      2
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      ABS[ ]	/* Absolute */
      SWAP[ ]	/* SwapTopStack */
      PUSHB[ ]	/* 1 value pushed */
      3
      RS[ ]	/* ReadStore */
      SUB[ ]	/* Subtract */
      ABS[ ]	/* Absolute */
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      2
      RS[ ]	/* ReadStore */
      SUB[ ]	/* Subtract */
      ELSE[ ]	/* Else */
      PUSHB[ ]	/* 1 value pushed */
      3
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 1 value pushed */
      3
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      2
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      SUB[ ]	/* Subtract */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      4
      MINDEX[ ]	/* MoveXToTopStack */
      SWAP[ ]	/* SwapTopStack */
      GC[0]	/* GetCoordOnPVector */
      SUB[ ]	/* Subtract */
      SHPIX[ ]	/* ShiftZoneByPixel */
      ELSE[ ]	/* Else */
      SWAP[ ]	/* SwapTopStack */
      PUSHB[ ]	/* 1 value pushed */
      8
      RS[ ]	/* ReadStore */
      GC[0]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      8
      RS[ ]	/* ReadStore */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      ADD[ ]	/* Add */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      4
      RS[ ]	/* ReadStore */
      PUSHB[ ]	/* 1 value pushed */
      2
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      ADD[ ]	/* Add */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      1
      CALL[ ]	/* CallFunction */
      SWAP[ ]	/* SwapTopStack */
      PUSHB[ ]	/* 1 value pushed */
      4
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 1 value pushed */
      1
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      5
      CINDEX[ ]	/* CopyXToTopStack */
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 1 value pushed */
      5
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      2
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      PUSHB[ ]	/* 1 value pushed */
      4
      MINDEX[ ]	/* MoveXToTopStack */
      SUB[ ]	/* Subtract */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      ADD[ ]	/* Add */
      ABS[ ]	/* Absolute */
      SWAP[ ]	/* SwapTopStack */
      PUSHB[ ]	/* 1 value pushed */
      3
      CINDEX[ ]	/* CopyXToTopStack */
      ADD[ ]	/* Add */
      ABS[ ]	/* Absolute */
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      POP[ ]	/* PopTopStack */
      ELSE[ ]	/* Else */
      SWAP[ ]	/* SwapTopStack */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      4
      MINDEX[ ]	/* MoveXToTopStack */
      SWAP[ ]	/* SwapTopStack */
      GC[0]	/* GetCoordOnPVector */
      SUB[ ]	/* Subtract */
      SHPIX[ ]	/* ShiftZoneByPixel */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      58
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      0
      SZPS[ ]	/* SetZonePointerS */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      5
      MINDEX[ ]	/* MoveXToTopStack */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      SWAP[ ]	/* SwapTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      SHPIX[ ]	/* ShiftZoneByPixel */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      59
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      0
      SZPS[ ]	/* SetZonePointerS */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      8
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      GC[0]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      1
      CALL[ ]	/* CallFunction */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      SHPIX[ ]	/* ShiftZoneByPixel */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      60
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      0
      SZPS[ ]	/* SetZonePointerS */
      PUSHB[ ]	/* 1 value pushed */
      3
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 1 value pushed */
      0
      EQ[ ]	/* Equal */
      IF[ ]	/* If */
      MDAP[0]	/* MoveDirectAbsPt */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      SWAP[ ]	/* SwapTopStack */
      POP[ ]	/* PopTopStack */
      ELSE[ ]	/* Else */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      5
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 1 value pushed */
      6
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      5
      CINDEX[ ]	/* CopyXToTopStack */
      MD[0]	/* MeasureDistance */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      SUB[ ]	/* Subtract */
      PUSHW[ ]	/* 2 values pushed */
      2048 2048
      MUL[ ]	/* Multiply */
      MUL[ ]	/* Multiply */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      IF[ ]	/* If */
      DIV[ ]	/* Divide */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      MUL[ ]	/* Multiply */
      PUSHW[ ]	/* 1 value pushed */
      1024
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      ADD[ ]	/* Add */
      SWAP[ ]	/* SwapTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      ROLL[ ]	/* RollTopThreeStack */
      SHPIX[ ]	/* ShiftZoneByPixel */
      SWAP[ ]	/* SwapTopStack */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      61
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      0
      SZPS[ ]	/* SetZonePointerS */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      8
      RS[ ]	/* ReadStore */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      DUP[ ]	/* DuplicateTopStack */
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 1 value pushed */
      32
      ADD[ ]	/* Add */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      2
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      ROLL[ ]	/* RollTopThreeStack */
      SHPIX[ ]	/* ShiftZoneByPixel */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      62
      FDEF[ ]	/* FunctionDefinition */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      GC[0]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      GC[0]	/* GetCoordOnPVector */
      GT[ ]	/* GreaterThan */
      IF[ ]	/* If */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      EIF[ ]	/* EndIf */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSHB[ ]	/* 2 values pushed */
      46 1
      SZP1[ ]	/* SetZonePointer1 */
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      63
      FDEF[ ]	/* FunctionDefinition */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      GC[0]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      GC[0]	/* GetCoordOnPVector */
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      EIF[ ]	/* EndIf */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSHB[ ]	/* 2 values pushed */
      46 1
      SZP1[ ]	/* SetZonePointer1 */
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      64
      FDEF[ ]	/* FunctionDefinition */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      GC[0]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      GC[0]	/* GetCoordOnPVector */
      GT[ ]	/* GreaterThan */
      IF[ ]	/* If */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      EIF[ ]	/* EndIf */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      GC[0]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      GC[0]	/* GetCoordOnPVector */
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      EIF[ ]	/* EndIf */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSHB[ ]	/* 2 values pushed */
      46 1
      SZP1[ ]	/* SetZonePointer1 */
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      65
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      56
      CALL[ ]	/* CallFunction */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      GC[0]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      GC[0]	/* GetCoordOnPVector */
      GT[ ]	/* GreaterThan */
      IF[ ]	/* If */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      EIF[ ]	/* EndIf */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSHB[ ]	/* 2 values pushed */
      46 1
      SZP1[ ]	/* SetZonePointer1 */
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      66
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      57
      CALL[ ]	/* CallFunction */
      ROLL[ ]	/* RollTopThreeStack */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      PUSHB[ ]	/* 1 value pushed */
      4
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      ROLL[ ]	/* RollTopThreeStack */
      SHPIX[ ]	/* ShiftZoneByPixel */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      GC[0]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      GC[0]	/* GetCoordOnPVector */
      GT[ ]	/* GreaterThan */
      IF[ ]	/* If */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      EIF[ ]	/* EndIf */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSHB[ ]	/* 2 values pushed */
      46 1
      SZP1[ ]	/* SetZonePointer1 */
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      4
      RS[ ]	/* ReadStore */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSHB[ ]	/* 1 value pushed */
      46
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      67
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      0
      SZPS[ ]	/* SetZonePointerS */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      4
      MINDEX[ ]	/* MoveXToTopStack */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 1 value pushed */
      9
      RS[ ]	/* ReadStore */
      CALL[ ]	/* CallFunction */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      SWAP[ ]	/* SwapTopStack */
      SHPIX[ ]	/* ShiftZoneByPixel */
      PUSHB[ ]	/* 2 values pushed */
      46 1
      SZP1[ ]	/* SetZonePointer1 */
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      68
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      8 4
      CINDEX[ ]	/* CopyXToTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 1 value pushed */
      0
      SZPS[ ]	/* SetZonePointerS */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      4
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 1 value pushed */
      9
      RS[ ]	/* ReadStore */
      CALL[ ]	/* CallFunction */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      96
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      64
      LTEQ[ ]	/* LessThenOrEqual */
      IF[ ]	/* If */
      PUSHB[ ]	/* 4 values pushed */
      2 32 3 32
      ELSE[ ]	/* Else */
      PUSHB[ ]	/* 4 values pushed */
      2 38 3 26
      EIF[ ]	/* EndIf */
      WS[ ]	/* WriteStore */
      WS[ ]	/* WriteStore */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      GC[1]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      4
      RS[ ]	/* ReadStore */
      PUSHB[ ]	/* 1 value pushed */
      2
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      ADD[ ]	/* Add */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      1
      CALL[ ]	/* CallFunction */
      DUP[ ]	/* DuplicateTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      ROLL[ ]	/* RollTopThreeStack */
      SUB[ ]	/* Subtract */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      2
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      ABS[ ]	/* Absolute */
      SWAP[ ]	/* SwapTopStack */
      PUSHB[ ]	/* 1 value pushed */
      3
      RS[ ]	/* ReadStore */
      SUB[ ]	/* Subtract */
      ABS[ ]	/* Absolute */
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      2
      RS[ ]	/* ReadStore */
      SUB[ ]	/* Subtract */
      ELSE[ ]	/* Else */
      PUSHB[ ]	/* 1 value pushed */
      3
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 1 value pushed */
      3
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      2
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      GC[0]	/* GetCoordOnPVector */
      SUB[ ]	/* Subtract */
      SHPIX[ ]	/* ShiftZoneByPixel */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      SWAP[ ]	/* SwapTopStack */
      SHPIX[ ]	/* ShiftZoneByPixel */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      GC[0]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      1
      CALL[ ]	/* CallFunction */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      SHPIX[ ]	/* ShiftZoneByPixel */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 2 values pushed */
      46 1
      SZP1[ ]	/* SetZonePointer1 */
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      69
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      56
      CALL[ ]	/* CallFunction */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSHB[ ]	/* 2 values pushed */
      46 1
      SZP1[ ]	/* SetZonePointer1 */
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      70
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      57
      CALL[ ]	/* CallFunction */
      POP[ ]	/* PopTopStack */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      PUSHB[ ]	/* 1 value pushed */
      4
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      SWAP[ ]	/* SwapTopStack */
      SHPIX[ ]	/* ShiftZoneByPixel */
      PUSHB[ ]	/* 2 values pushed */
      46 1
      SZP1[ ]	/* SetZonePointer1 */
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      4
      RS[ ]	/* ReadStore */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSHB[ ]	/* 1 value pushed */
      46
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      71
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      0
      SZP2[ ]	/* SetZonePointer2 */
      DUP[ ]	/* DuplicateTopStack */
      GC[1]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      0
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 3 values pushed */
      0 1 1
      SZP2[ ]	/* SetZonePointer2 */
      SZP1[ ]	/* SetZonePointer1 */
      SZP0[ ]	/* SetZonePointer0 */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSHB[ ]	/* 1 value pushed */
      52
      LOOPCALL[ ]	/* LoopAndCallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      72
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      0
      SZP2[ ]	/* SetZonePointer2 */
      DUP[ ]	/* DuplicateTopStack */
      GC[1]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      0
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 3 values pushed */
      0 1 1
      SZP2[ ]	/* SetZonePointer2 */
      SZP1[ ]	/* SetZonePointer1 */
      SZP0[ ]	/* SetZonePointer0 */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSHB[ ]	/* 1 value pushed */
      52
      LOOPCALL[ ]	/* LoopAndCallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      73
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      0 1
      SZP1[ ]	/* SetZonePointer1 */
      SZP0[ ]	/* SetZonePointer0 */
      PUSHB[ ]	/* 1 value pushed */
      53
      LOOPCALL[ ]	/* LoopAndCallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      74
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      55
      LOOPCALL[ ]	/* LoopAndCallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      75
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      0
      SZPS[ ]	/* SetZonePointerS */
      RCVT[ ]	/* ReadCVT */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      DUP[ ]	/* DuplicateTopStack */
      GC[0]	/* GetCoordOnPVector */
      ROLL[ ]	/* RollTopThreeStack */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      SHPIX[ ]	/* ShiftZoneByPixel */
      PUSHB[ ]	/* 2 values pushed */
      46 1
      SZP1[ ]	/* SetZonePointer1 */
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      76
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      8
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 1 value pushed */
      75
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      77
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      0 0 68
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      78
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      0 1 68
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      79
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      1 0 68
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      80
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      1 1 68
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      81
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      0 0 69
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      82
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      0 1 69
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      83
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      1 0 69
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      84
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      1 1 69
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      85
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      0 0 65
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      86
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      0 1 65
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      87
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      1 0 65
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      88
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      1 1 65
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      89
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      0 0 67
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      90
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      0 1 67
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      91
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      1 0 67
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      92
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      1 1 67
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      93
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      0 0 70
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      94
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      0 1 70
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      95
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      1 0 70
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      96
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      1 1 70
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      97
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      0 0 66
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      98
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      0 1 66
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      99
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      1 0 66
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      100
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      1 1 66
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      101
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      58
      CALL[ ]	/* CallFunction */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSHB[ ]	/* 2 values pushed */
      46 1
      SZP1[ ]	/* SetZonePointer1 */
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      102
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      58
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      62
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      103
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      58
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      63
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      104
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      0
      SZPS[ ]	/* SetZonePointerS */
      PUSHB[ ]	/* 1 value pushed */
      58
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      64
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      105
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      59
      CALL[ ]	/* CallFunction */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSHB[ ]	/* 2 values pushed */
      46 1
      SZP1[ ]	/* SetZonePointer1 */
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      106
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      59
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      62
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      107
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      59
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      63
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      108
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      59
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      64
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      109
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      60
      CALL[ ]	/* CallFunction */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSHB[ ]	/* 2 values pushed */
      46 1
      SZP1[ ]	/* SetZonePointer1 */
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      110
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      60
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      62
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      111
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      60
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      63
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      112
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      60
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      64
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      113
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      61
      CALL[ ]	/* CallFunction */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSHB[ ]	/* 2 values pushed */
      46 1
      SZP1[ ]	/* SetZonePointer1 */
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      114
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      61
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      62
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      115
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      61
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      63
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      116
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      61
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      64
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      117
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 4 values pushed */
      9 4 2 3
      RCVT[ ]	/* ReadCVT */
      IF[ ]	/* If */
      POP[ ]	/* PopTopStack */
      ELSE[ ]	/* Else */
      SWAP[ ]	/* SwapTopStack */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      WS[ ]	/* WriteStore */
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      8
      NEG[ ]	/* Negate */
      PUSHB[ ]	/* 1 value pushed */
      3
      DEPTH[ ]	/* GetDepthStack */
      LT[ ]	/* LessThan */
      JROT[ ]	/* JumpRelativeOnTrue */
      PUSHB[ ]	/* 2 values pushed */
      5 1
      SZP2[ ]	/* SetZonePointer2 */
      RCVT[ ]	/* ReadCVT */
      IF[ ]	/* If */
      IUP[0]	/* InterpolateUntPts */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
    </assembly>
  </fpgm>

  <prep>
    <assembly>
      SVTCA[0]	/* SetFPVectorToAxis */
      MPPEM[ ]	/* MeasurePixelPerEm */
      PUSHW[ ]	/* 1 value pushed */
      200
      GT[ ]	/* GreaterThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 2 values pushed */
      1 1
      INSTCTRL[ ]	/* SetInstrExecControl */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 1 value pushed */
      1
      PUSHW[ ]	/* 2 values pushed */
      2048 2048
      MUL[ ]	/* Multiply */
      WCVTF[ ]	/* WriteCVTInFUnits */
      PUSHB[ ]	/* 2 values pushed */
      0 6
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 2 values pushed */
      0 0
      LOOPCALL[ ]	/* LoopAndCallFunction */
      PUSHB[ ]	/* 2 values pushed */
      0 6
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 2 values pushed */
      0 8
      LOOPCALL[ ]	/* LoopAndCallFunction */
      PUSHB[ ]	/* 2 values pushed */
      0 6
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 2 values pushed */
      0 8
      LOOPCALL[ ]	/* LoopAndCallFunction */
      PUSHB[ ]	/* 2 values pushed */
      0 6
      WS[ ]	/* WriteStore */
      PUSHW[ ]	/* 2 values pushed */
      0 9
      LOOPCALL[ ]	/* LoopAndCallFunction */
      PUSHB[ ]	/* 2 values pushed */
      0 6
      WS[ ]	/* WriteStore */
      PUSHW[ ]	/* 2 values pushed */
      0 9
      LOOPCALL[ ]	/* LoopAndCallFunction */
      PUSHB[ ]	/* 2 values pushed */
      3 0
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSHB[ ]	/* 2 values pushed */
      36 1
      GETINFO[ ]	/* GetInfo */
      LTEQ[ ]	/* LessThenOrEqual */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      GETINFO[ ]	/* GetInfo */
      IF[ ]	/* If */
      PUSHB[ ]	/* 2 values pushed */
      3 100
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSHB[ ]	/* 2 values pushed */
      38 1
      GETINFO[ ]	/* GetInfo */
      LTEQ[ ]	/* LessThenOrEqual */
      IF[ ]	/* If */
      PUSHW[ ]	/* 3 values pushed */
      2176 1 1088
      GETINFO[ ]	/* GetInfo */
      MUL[ ]	/* Multiply */
      EQ[ ]	/* Equal */
      IF[ ]	/* If */
      PUSHB[ ]	/* 2 values pushed */
      3 0
      WCVTP[ ]	/* WriteCVTInPixels */
      EIF[ ]	/* EndIf */
      EIF[ ]	/* EndIf */
      EIF[ ]	/* EndIf */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 2 values pushed */
      0 12
      LOOPCALL[ ]	/* LoopAndCallFunction */
      PUSHW[ ]	/* 1 value pushed */
      511
      SCANCTRL[ ]	/* ScanConversionControl */
      PUSHB[ ]	/* 1 value pushed */
      4
      SCANTYPE[ ]	/* ScanType */
      PUSHB[ ]	/* 2 values pushed */
      2 0
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSHB[ ]	/* 2 values pushed */
      5 100
      WCVTP[ ]	/* WriteCVTInPixels */
    </assembly>
  </prep>

  <cvt>
    <cv index="0" value="0"/>
    <cv index="1" value="0"/>
    <cv index="2" value="0"/>
    <cv index="3" value="0"/>
    <cv index="4" value="0"/>
    <cv index="5" value="0"/>
  </cvt>

  <loca>
    <!-- The 'loca' table will be calculated by the compiler -->
  </loca>

  <glyf>

    <!-- The xMin, yMin, xMax and yMax values
         will be recalculated by the compiler. -->

    <TTGlyph name=".notdef" xMin="50" yMin="0" xMax="200" yMax="533">
      <contour>
        <pt x="50" y="0" on="1"/>
        <pt x="50" y="533" on="1"/>
        <pt x="200" y="533" on="1"/>
        <pt x="200" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="100" y="50" on="1"/>
        <pt x="150" y="50" on="1"/>
        <pt x="150" y="483" on="1"/>
        <pt x="100" y="483" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 6 values pushed */
          6 4 1 0 2 48
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name=".null"/><!-- contains no outline data -->

    <TTGlyph name="arrowdbldown" xMin="57" yMin="1" xMax="721" yMax="600">
      <contour>
        <pt x="257" y="236" on="1"/>
        <pt x="257" y="600" on="1"/>
        <pt x="300" y="600" on="1"/>
        <pt x="300" y="195" on="1"/>
        <pt x="312" y="183" on="1"/>
        <pt x="344" y="149" on="0"/>
        <pt x="389" y="84" on="1"/>
        <pt x="394" y="90" on="0"/>
        <pt x="399" y="98" on="1"/>
        <pt x="427" y="140" on="0"/>
        <pt x="466" y="183" on="1"/>
        <pt x="478" y="195" on="1"/>
        <pt x="478" y="600" on="1"/>
        <pt x="521" y="600" on="1"/>
        <pt x="521" y="418" on="1"/>
        <pt x="522" y="236" on="1"/>
        <pt x="532" y="244" on="1"/>
        <pt x="597" y="297" on="0"/>
        <pt x="667" y="331" on="1"/>
        <pt x="677" y="336" on="0"/>
        <pt x="718" y="353" on="0"/>
        <pt x="721" y="354" on="1"/>
        <pt x="721" y="311" on="1"/>
        <pt x="708" y="306" on="1"/>
        <pt x="677" y="295" on="0"/>
        <pt x="636" y="271" on="1"/>
        <pt x="477" y="180" on="0"/>
        <pt x="397" y="17" on="1"/>
        <pt x="389" y="1" on="1"/>
        <pt x="385" y="8" on="0"/>
        <pt x="381" y="17" on="1"/>
        <pt x="301" y="180" on="0"/>
        <pt x="142" y="271" on="1"/>
        <pt x="101" y="295" on="0"/>
        <pt x="70" y="306" on="1"/>
        <pt x="57" y="311" on="1"/>
        <pt x="57" y="354" on="1"/>
        <pt x="60" y="353" on="0"/>
        <pt x="101" y="336" on="0"/>
        <pt x="111" y="331" on="1"/>
        <pt x="180" y="298" on="0"/>
        <pt x="247" y="244" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 4 values pushed */
          28 1 1 48
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="arrowdblup" xMin="57" yMin="0" xMax="721" yMax="599">
      <contour>
        <pt x="381" y="583" on="1"/>
        <pt x="389" y="599" on="1"/>
        <pt x="393" y="592" on="0"/>
        <pt x="397" y="583" on="1"/>
        <pt x="477" y="420" on="0"/>
        <pt x="636" y="329" on="1"/>
        <pt x="677" y="305" on="0"/>
        <pt x="708" y="294" on="1"/>
        <pt x="721" y="289" on="1"/>
        <pt x="721" y="246" on="1"/>
        <pt x="718" y="247" on="0"/>
        <pt x="677" y="264" on="0"/>
        <pt x="667" y="269" on="1"/>
        <pt x="597" y="303" on="0"/>
        <pt x="532" y="356" on="1"/>
        <pt x="522" y="364" on="1"/>
        <pt x="521" y="182" on="1"/>
        <pt x="521" y="0" on="1"/>
        <pt x="478" y="0" on="1"/>
        <pt x="478" y="405" on="1"/>
        <pt x="466" y="417" on="1"/>
        <pt x="434" y="451" on="0"/>
        <pt x="389" y="516" on="1"/>
        <pt x="384" y="510" on="0"/>
        <pt x="379" y="502" on="1"/>
        <pt x="351" y="460" on="0"/>
        <pt x="312" y="417" on="1"/>
        <pt x="300" y="405" on="1"/>
        <pt x="300" y="0" on="1"/>
        <pt x="257" y="0" on="1"/>
        <pt x="257" y="364" on="1"/>
        <pt x="247" y="356" on="1"/>
        <pt x="180" y="302" on="0"/>
        <pt x="111" y="269" on="1"/>
        <pt x="101" y="264" on="0"/>
        <pt x="60" y="247" on="0"/>
        <pt x="57" y="246" on="1"/>
        <pt x="57" y="289" on="1"/>
        <pt x="70" y="294" on="1"/>
        <pt x="101" y="305" on="0"/>
        <pt x="142" y="329" on="1"/>
        <pt x="301" y="420" on="0"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 4 values pushed */
          17 1 1 48
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="arrowdown" xMin="112" yMin="0" xMax="555" yMax="600">
      <contour>
        <pt x="312" y="96" on="1"/>
        <pt x="312" y="600" on="1"/>
        <pt x="355" y="600" on="1"/>
        <pt x="355" y="96" on="1"/>
        <pt x="368" y="108" on="1"/>
        <pt x="445" y="182" on="0"/>
        <pt x="543" y="219" on="1"/>
        <pt x="555" y="223" on="1"/>
        <pt x="555" y="179" on="1"/>
        <pt x="550" y="177" on="1"/>
        <pt x="419" y="133" on="0"/>
        <pt x="339" y="9" on="1"/>
        <pt x="334" y="0" on="1"/>
        <pt x="327" y="11" on="1"/>
        <pt x="251" y="129" on="0"/>
        <pt x="117" y="177" on="1"/>
        <pt x="112" y="179" on="1"/>
        <pt x="112" y="223" on="1"/>
        <pt x="124" y="219" on="1"/>
        <pt x="222" y="182" on="0"/>
        <pt x="299" y="108" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 4 values pushed */
          12 1 1 48
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="arrowup" xMin="112" yMin="0" xMax="555" yMax="600">
      <contour>
        <pt x="328" y="591" on="1"/>
        <pt x="333" y="600" on="1"/>
        <pt x="340" y="589" on="1"/>
        <pt x="416" y="471" on="0"/>
        <pt x="550" y="423" on="1"/>
        <pt x="555" y="421" on="1"/>
        <pt x="555" y="377" on="1"/>
        <pt x="543" y="381" on="1"/>
        <pt x="445" y="418" on="0"/>
        <pt x="368" y="492" on="1"/>
        <pt x="355" y="504" on="1"/>
        <pt x="355" y="0" on="1"/>
        <pt x="312" y="0" on="1"/>
        <pt x="312" y="504" on="1"/>
        <pt x="299" y="492" on="1"/>
        <pt x="222" y="418" on="0"/>
        <pt x="124" y="381" on="1"/>
        <pt x="112" y="377" on="1"/>
        <pt x="112" y="421" on="1"/>
        <pt x="117" y="423" on="1"/>
        <pt x="248" y="467" on="0"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 4 values pushed */
          11 1 1 48
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="backslash" xMin="55" yMin="-349" xMax="522" yMax="850">
      <contour>
        <pt x="522" y="-326" on="1"/>
        <pt x="522" y="-336" on="0"/>
        <pt x="509" y="-349" on="0"/>
        <pt x="500" y="-349" on="1"/>
        <pt x="487" y="-349" on="0"/>
        <pt x="481" y="-337" on="1"/>
        <pt x="477" y="-328" on="0"/>
        <pt x="56" y="824" on="0"/>
        <pt x="55" y="827" on="1"/>
        <pt x="54" y="835" on="0"/>
        <pt x="67" y="850" on="0"/>
        <pt x="76" y="850" on="1"/>
        <pt x="89" y="850" on="0"/>
        <pt x="96" y="838" on="1"/>
        <pt x="100" y="829" on="0"/>
        <pt x="521" y="-323" on="0"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 4 values pushed */
          10 2 1 48
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="braceleft" xMin="105" yMin="-349" xMax="477" yMax="850">
      <contour>
        <pt x="477" y="-343" on="1"/>
        <pt x="471" y="-349" on="1"/>
        <pt x="458" y="-349" on="1"/>
        <pt x="444" y="-349" on="0"/>
        <pt x="407" y="-338" on="1"/>
        <pt x="309" y="-309" on="0"/>
        <pt x="273" y="-263" on="1"/>
        <pt x="258" y="-245" on="0"/>
        <pt x="250" y="-212" on="1"/>
        <pt x="249" y="-51" on="1"/>
        <pt x="249" y="-27" on="0"/>
        <pt x="249" y="12" on="1"/>
        <pt x="248" y="118" on="0"/>
        <pt x="244" y="128" on="1"/>
        <pt x="243" y="129" on="0"/>
        <pt x="243" y="130" on="1"/>
        <pt x="224" y="177" on="0"/>
        <pt x="162" y="210" on="1"/>
        <pt x="131" y="224" on="0"/>
        <pt x="121" y="228" on="1"/>
        <pt x="109" y="232" on="0"/>
        <pt x="105" y="238" on="0"/>
        <pt x="105" y="250" on="1"/>
        <pt x="105" y="263" on="0"/>
        <pt x="109" y="268" on="0"/>
        <pt x="121" y="273" on="1"/>
        <pt x="131" y="277" on="0"/>
        <pt x="162" y="291" on="1"/>
        <pt x="224" y="324" on="0"/>
        <pt x="243" y="371" on="1"/>
        <pt x="243" y="372" on="0"/>
        <pt x="244" y="373" on="1"/>
        <pt x="248" y="384" on="0"/>
        <pt x="249" y="469" on="1"/>
        <pt x="249" y="475" on="0"/>
        <pt x="249" y="489" on="1"/>
        <pt x="249" y="528" on="0"/>
        <pt x="249" y="552" on="1"/>
        <pt x="250" y="714" on="1"/>
        <pt x="258" y="744" on="0"/>
        <pt x="273" y="764" on="1"/>
        <pt x="312" y="813" on="0"/>
        <pt x="422" y="843" on="1"/>
        <pt x="440" y="849" on="0"/>
        <pt x="441" y="849" on="1"/>
        <pt x="443" y="849" on="1"/>
        <pt x="445" y="849" on="0"/>
        <pt x="449" y="850" on="0"/>
        <pt x="455" y="850" on="0"/>
        <pt x="457" y="850" on="1"/>
        <pt x="471" y="850" on="1"/>
        <pt x="477" y="844" on="1"/>
        <pt x="477" y="830" on="1"/>
        <pt x="477" y="812" on="0"/>
        <pt x="469" y="810" on="1"/>
        <pt x="425" y="798" on="0"/>
        <pt x="349" y="752" on="0"/>
        <pt x="338" y="724" on="1"/>
        <pt x="333" y="710" on="0"/>
        <pt x="333" y="550" on="1"/>
        <pt x="333" y="395" on="0"/>
        <pt x="332" y="389" on="1"/>
        <pt x="326" y="349" on="0"/>
        <pt x="295" y="318" on="1"/>
        <pt x="257" y="280" on="0"/>
        <pt x="181" y="255" on="1"/>
        <pt x="169" y="251" on="1"/>
        <pt x="184" y="245" on="1"/>
        <pt x="275" y="213" on="0"/>
        <pt x="309" y="167" on="1"/>
        <pt x="327" y="140" on="0"/>
        <pt x="332" y="112" on="1"/>
        <pt x="333" y="106" on="0"/>
        <pt x="333" y="-49" on="1"/>
        <pt x="333" y="-209" on="0"/>
        <pt x="338" y="-223" on="1"/>
        <pt x="349" y="-251" on="0"/>
        <pt x="425" y="-297" on="0"/>
        <pt x="469" y="-309" on="1"/>
        <pt x="477" y="-311" on="0"/>
        <pt x="477" y="-329" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 4 values pushed */
          47 1 1 48
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="braceright" xMin="105" yMin="-349" xMax="477" yMax="850">
      <contour>
        <pt x="110" y="849" on="1"/>
        <pt x="115" y="850" on="1"/>
        <pt x="120" y="850" on="0"/>
        <pt x="125" y="850" on="1"/>
        <pt x="138" y="850" on="0"/>
        <pt x="175" y="839" on="1"/>
        <pt x="273" y="810" on="0"/>
        <pt x="309" y="764" on="1"/>
        <pt x="324" y="747" on="0"/>
        <pt x="332" y="714" on="1"/>
        <pt x="333" y="552" on="1"/>
        <pt x="333" y="528" on="0"/>
        <pt x="333" y="489" on="1"/>
        <pt x="334" y="383" on="0"/>
        <pt x="338" y="373" on="1"/>
        <pt x="339" y="372" on="0"/>
        <pt x="339" y="371" on="1"/>
        <pt x="351" y="340" on="0"/>
        <pt x="425" y="284" on="0"/>
        <pt x="469" y="271" on="1"/>
        <pt x="477" y="268" on="0"/>
        <pt x="477" y="251" on="1"/>
        <pt x="477" y="233" on="0"/>
        <pt x="469" y="230" on="1"/>
        <pt x="425" y="217" on="0"/>
        <pt x="351" y="161" on="0"/>
        <pt x="339" y="130" on="1"/>
        <pt x="339" y="129" on="0"/>
        <pt x="338" y="128" on="1"/>
        <pt x="334" y="117" on="0"/>
        <pt x="333" y="32" on="1"/>
        <pt x="333" y="26" on="0"/>
        <pt x="333" y="12" on="1"/>
        <pt x="333" y="-27" on="0"/>
        <pt x="333" y="-51" on="1"/>
        <pt x="332" y="-212" on="1"/>
        <pt x="324" y="-245" on="0"/>
        <pt x="309" y="-263" on="1"/>
        <pt x="273" y="-309" on="0"/>
        <pt x="175" y="-338" on="1"/>
        <pt x="139" y="-349" on="0"/>
        <pt x="111" y="-349" on="0"/>
        <pt x="105" y="-343" on="0"/>
        <pt x="105" y="-329" on="1"/>
        <pt x="105" y="-316" on="0"/>
        <pt x="106" y="-314" on="1"/>
        <pt x="109" y="-310" on="0"/>
        <pt x="130" y="-304" on="1"/>
        <pt x="192" y="-284" on="0"/>
        <pt x="222" y="-254" on="1"/>
        <pt x="242" y="-234" on="0"/>
        <pt x="248" y="-209" on="1"/>
        <pt x="249" y="-203" on="0"/>
        <pt x="249" y="-49" on="1"/>
        <pt x="249" y="106" on="0"/>
        <pt x="250" y="112" on="1"/>
        <pt x="255" y="140" on="0"/>
        <pt x="273" y="167" on="1"/>
        <pt x="307" y="213" on="0"/>
        <pt x="398" y="245" on="1"/>
        <pt x="413" y="251" on="1"/>
        <pt x="401" y="255" on="1"/>
        <pt x="309" y="286" on="0"/>
        <pt x="273" y="334" on="1"/>
        <pt x="255" y="361" on="0"/>
        <pt x="250" y="389" on="1"/>
        <pt x="249" y="395" on="0"/>
        <pt x="249" y="550" on="1"/>
        <pt x="249" y="710" on="0"/>
        <pt x="244" y="724" on="1"/>
        <pt x="224" y="774" on="0"/>
        <pt x="130" y="805" on="1"/>
        <pt x="126" y="806" on="0"/>
        <pt x="119" y="808" on="0"/>
        <pt x="113" y="811" on="0"/>
        <pt x="112" y="811" on="1"/>
        <pt x="105" y="813" on="0"/>
        <pt x="105" y="830" on="1"/>
        <pt x="105" y="845" on="0"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 4 values pushed */
          40 1 1 48
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="bracketleft" xMin="202" yMin="-349" xMax="394" yMax="850">
      <contour>
        <pt x="202" y="-349" on="1"/>
        <pt x="202" y="850" on="1"/>
        <pt x="394" y="850" on="1"/>
        <pt x="394" y="810" on="1"/>
        <pt x="242" y="810" on="1"/>
        <pt x="242" y="-309" on="1"/>
        <pt x="394" y="-309" on="1"/>
        <pt x="394" y="-349" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 4 values pushed */
          1 0 1 48
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="bracketright" xMin="22" yMin="-349" xMax="214" yMax="850">
      <contour>
        <pt x="22" y="810" on="1"/>
        <pt x="22" y="850" on="1"/>
        <pt x="214" y="850" on="1"/>
        <pt x="214" y="-349" on="1"/>
        <pt x="22" y="-349" on="1"/>
        <pt x="22" y="-309" on="1"/>
        <pt x="174" y="-309" on="1"/>
        <pt x="174" y="810" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 4 values pushed */
          3 1 1 48
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="circumflex" xMin="-8" yMin="551" xMax="564" yMax="744">
      <contour>
        <pt x="279" y="669" on="1"/>
        <pt x="273" y="669" on="0"/>
        <pt x="10" y="551" on="0"/>
        <pt x="9" y="551" on="1"/>
        <pt x="0" y="569" on="1"/>
        <pt x="-8" y="585" on="0"/>
        <pt x="-8" y="587" on="1"/>
        <pt x="-8" y="588" on="0"/>
        <pt x="-7" y="588" on="1"/>
        <pt x="12" y="598" on="1"/>
        <pt x="30" y="608" on="0"/>
        <pt x="103" y="648" on="0"/>
        <pt x="136" y="666" on="1"/>
        <pt x="277" y="744" on="1"/>
        <pt x="280" y="742" on="0"/>
        <pt x="558" y="591" on="0"/>
        <pt x="564" y="587" on="1"/>
        <pt x="555" y="569" on="1"/>
        <pt x="549" y="556" on="0"/>
        <pt x="545" y="551" on="0"/>
        <pt x="544" y="552" on="1"/>
        <pt x="539" y="555" on="0"/>
        <pt x="282" y="669" on="0"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 4 values pushed */
          13 2 1 48
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="integral" xMin="55" yMin="-306" xMax="610" yMax="805">
      <contour>
        <pt x="83" y="-146" on="0"/>
        <pt x="125" y="-146" on="0"/>
        <pt x="153" y="-175" on="0"/>
        <pt x="153" y="-195" on="1"/>
        <pt x="153" y="-225" on="0"/>
        <pt x="129" y="-237" on="1"/>
        <pt x="128" y="-238" on="0"/>
        <pt x="120" y="-241" on="0"/>
        <pt x="116" y="-242" on="1"/>
        <pt x="113" y="-244" on="1"/>
        <pt x="113" y="-245" on="0"/>
        <pt x="124" y="-255" on="0"/>
        <pt x="128" y="-257" on="1"/>
        <pt x="144" y="-269" on="0"/>
        <pt x="167" y="-269" on="1"/>
        <pt x="186" y="-269" on="0"/>
        <pt x="199" y="-260" on="1"/>
        <pt x="223" y="-246" on="0"/>
        <pt x="235" y="-208" on="1"/>
        <pt x="252" y="-160" on="0"/>
        <pt x="267" y="47" on="1"/>
        <pt x="281" y="237" on="0"/>
        <pt x="297" y="367" on="1"/>
        <pt x="323" y="570" on="0"/>
        <pt x="327" y="591" on="1"/>
        <pt x="352" y="735" on="0"/>
        <pt x="424" y="782" on="1"/>
        <pt x="449" y="798" on="0"/>
        <pt x="479" y="804" on="1"/>
        <pt x="481" y="804" on="0"/>
        <pt x="496" y="805" on="0"/>
        <pt x="501" y="805" on="1"/>
        <pt x="548" y="802" on="0"/>
        <pt x="610" y="741" on="0"/>
        <pt x="610" y="695" on="1"/>
        <pt x="610" y="673" on="0"/>
        <pt x="582" y="645" on="0"/>
        <pt x="540" y="645" on="0"/>
        <pt x="512" y="674" on="0"/>
        <pt x="512" y="694" on="1"/>
        <pt x="512" y="724" on="0"/>
        <pt x="536" y="736" on="1"/>
        <pt x="537" y="737" on="0"/>
        <pt x="545" y="740" on="0"/>
        <pt x="548" y="742" on="1"/>
        <pt x="552" y="743" on="1"/>
        <pt x="552" y="748" on="0"/>
        <pt x="537" y="756" on="1"/>
        <pt x="520" y="768" on="0"/>
        <pt x="498" y="768" on="1"/>
        <pt x="454" y="768" on="0"/>
        <pt x="434" y="716" on="1"/>
        <pt x="422" y="687" on="0"/>
        <pt x="409" y="586" on="0"/>
        <pt x="399" y="452" on="1"/>
        <pt x="385" y="264" on="0"/>
        <pt x="369" y="133" on="1"/>
        <pt x="349" y="-39" on="0"/>
        <pt x="339" y="-91" on="1"/>
        <pt x="326" y="-162" on="0"/>
        <pt x="303" y="-207" on="1"/>
        <pt x="274" y="-269" on="0"/>
        <pt x="225" y="-293" on="1"/>
        <pt x="199" y="-306" on="0"/>
        <pt x="169" y="-306" on="1"/>
        <pt x="97" y="-306" on="0"/>
        <pt x="67" y="-244" on="1"/>
        <pt x="55" y="-223" on="0"/>
        <pt x="55" y="-196" on="1"/>
        <pt x="55" y="-174" on="0"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 4 values pushed */
          63 30 1 48
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="nonmarkingreturn"/><!-- contains no outline data -->

    <TTGlyph name="parenleft" xMin="152" yMin="-349" xMax="422" yMax="850">
      <contour>
        <pt x="152" y="251" on="1"/>
        <pt x="152" y="448" on="0"/>
        <pt x="275" y="753" on="0"/>
        <pt x="388" y="850" on="1"/>
        <pt x="416" y="850" on="1"/>
        <pt x="422" y="844" on="0"/>
        <pt x="422" y="841" on="1"/>
        <pt x="422" y="837" on="0"/>
        <pt x="412" y="826" on="1"/>
        <pt x="236" y="628" on="0"/>
        <pt x="236" y="250" on="1"/>
        <pt x="236" y="-125" on="0"/>
        <pt x="412" y="-325" on="1"/>
        <pt x="422" y="-336" on="0"/>
        <pt x="422" y="-340" on="1"/>
        <pt x="422" y="-343" on="0"/>
        <pt x="416" y="-349" on="1"/>
        <pt x="388" y="-349" on="1"/>
        <pt x="275" y="-252" on="0"/>
        <pt x="152" y="53" on="0"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 4 values pushed */
          16 3 1 48
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="parenright" xMin="35" yMin="-349" xMax="305" yMax="850">
      <contour>
        <pt x="305" y="251" on="1"/>
        <pt x="305" y="52" on="0"/>
        <pt x="183" y="-252" on="0"/>
        <pt x="69" y="-349" on="1"/>
        <pt x="56" y="-349" on="1"/>
        <pt x="43" y="-349" on="0"/>
        <pt x="35" y="-345" on="0"/>
        <pt x="35" y="-338" on="1"/>
        <pt x="37" y="-333" on="0"/>
        <pt x="47" y="-322" on="1"/>
        <pt x="221" y="-126" on="0"/>
        <pt x="221" y="250" on="1"/>
        <pt x="221" y="627" on="0"/>
        <pt x="47" y="823" on="1"/>
        <pt x="37" y="834" on="0"/>
        <pt x="35" y="839" on="1"/>
        <pt x="35" y="847" on="0"/>
        <pt x="43" y="850" on="0"/>
        <pt x="56" y="850" on="1"/>
        <pt x="69" y="850" on="1"/>
        <pt x="182" y="753" on="0"/>
        <pt x="305" y="448" on="0"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 4 values pushed */
          17 3 1 48
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="product" xMin="55" yMin="-250" xMax="888" yMax="750">
      <contour>
        <pt x="786" y="-155" on="1"/>
        <pt x="798" y="-206" on="0"/>
        <pt x="874" y="-210" on="1"/>
        <pt x="888" y="-210" on="1"/>
        <pt x="888" y="-250" on="1"/>
        <pt x="570" y="-250" on="1"/>
        <pt x="570" y="-210" on="1"/>
        <pt x="584" y="-210" on="1"/>
        <pt x="654" y="-206" on="0"/>
        <pt x="670" y="-163" on="1"/>
        <pt x="673" y="-155" on="1"/>
        <pt x="673" y="710" on="1"/>
        <pt x="270" y="710" on="1"/>
        <pt x="270" y="277" on="1"/>
        <pt x="271" y="-155" on="1"/>
        <pt x="283" y="-206" on="0"/>
        <pt x="359" y="-210" on="1"/>
        <pt x="373" y="-210" on="1"/>
        <pt x="373" y="-250" on="1"/>
        <pt x="55" y="-250" on="1"/>
        <pt x="55" y="-210" on="1"/>
        <pt x="69" y="-210" on="1"/>
        <pt x="139" y="-206" on="0"/>
        <pt x="155" y="-163" on="1"/>
        <pt x="158" y="-155" on="1"/>
        <pt x="158" y="656" on="1"/>
        <pt x="155" y="663" on="1"/>
        <pt x="139" y="706" on="0"/>
        <pt x="69" y="710" on="1"/>
        <pt x="55" y="710" on="1"/>
        <pt x="55" y="750" on="1"/>
        <pt x="888" y="750" on="1"/>
        <pt x="888" y="710" on="1"/>
        <pt x="874" y="710" on="1"/>
        <pt x="834" y="708" on="0"/>
        <pt x="793" y="683" on="0"/>
        <pt x="786" y="656" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 4 values pushed */
          30 4 1 48
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="radical" xMin="111" yMin="-350" xMax="1020" yMax="850">
      <contour>
        <pt x="263" y="249" on="1"/>
        <pt x="264" y="249" on="0"/>
        <pt x="366" y="11" on="0"/>
        <pt x="469" y="-227" on="0"/>
        <pt x="470" y="-228" on="1"/>
        <pt x="980" y="829" on="0"/>
        <pt x="982" y="839" on="1"/>
        <pt x="989" y="850" on="0"/>
        <pt x="1001" y="850" on="1"/>
        <pt x="1017" y="850" on="0"/>
        <pt x="1020" y="832" on="1"/>
        <pt x="1020" y="826" on="1"/>
        <pt x="741" y="243" on="1"/>
        <pt x="683" y="122" on="0"/>
        <pt x="527" y="-202" on="0"/>
        <pt x="460" y="-342" on="0"/>
        <pt x="459" y="-343" on="1"/>
        <pt x="452" y="-350" on="0"/>
        <pt x="436" y="-350" on="1"/>
        <pt x="424" y="-349" on="1"/>
        <pt x="315" y="-96" on="1"/>
        <pt x="206" y="156" on="0"/>
        <pt x="205" y="156" on="1"/>
        <pt x="189" y="144" on="0"/>
        <pt x="171" y="130" on="1"/>
        <pt x="138" y="104" on="0"/>
        <pt x="137" y="104" on="1"/>
        <pt x="111" y="130" on="1"/>
        <pt x="187" y="189" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 4 values pushed */
          17 7 1 48
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="slash" xMin="55" yMin="-349" xMax="522" yMax="850">
      <contour>
        <pt x="481" y="838" on="1"/>
        <pt x="489" y="850" on="0"/>
        <pt x="500" y="850" on="1"/>
        <pt x="509" y="850" on="0"/>
        <pt x="522" y="837" on="0"/>
        <pt x="522" y="827" on="1"/>
        <pt x="521" y="824" on="0"/>
        <pt x="100" y="-328" on="0"/>
        <pt x="96" y="-337" on="1"/>
        <pt x="90" y="-349" on="0"/>
        <pt x="77" y="-349" on="1"/>
        <pt x="68" y="-349" on="0"/>
        <pt x="55" y="-336" on="0"/>
        <pt x="55" y="-326" on="1"/>
        <pt x="56" y="-323" on="0"/>
        <pt x="477" y="829" on="0"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 4 values pushed */
          9 1 1 48
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="space"/><!-- contains no outline data -->

    <TTGlyph name="summation" xMin="56" yMin="-250" xMax="999" yMax="750">
      <contour>
        <pt x="61" y="748" on="1"/>
        <pt x="64" y="750" on="0"/>
        <pt x="489" y="750" on="1"/>
        <pt x="913" y="750" on="1"/>
        <pt x="954" y="640" on="1"/>
        <pt x="964" y="613" on="0"/>
        <pt x="987" y="551" on="0"/>
        <pt x="997" y="522" on="0"/>
        <pt x="999" y="516" on="1"/>
        <pt x="979" y="516" on="1"/>
        <pt x="959" y="517" on="1"/>
        <pt x="937" y="575" on="0"/>
        <pt x="840" y="662" on="0"/>
        <pt x="777" y="682" on="1"/>
        <pt x="722" y="701" on="0"/>
        <pt x="620" y="708" on="1"/>
        <pt x="590" y="710" on="0"/>
        <pt x="319" y="710" on="1"/>
        <pt x="183" y="710" on="0"/>
        <pt x="183" y="709" on="1"/>
        <pt x="186" y="706" on="0"/>
        <pt x="510" y="261" on="0"/>
        <pt x="511" y="259" on="1"/>
        <pt x="517" y="250" on="0"/>
        <pt x="513" y="244" on="1"/>
        <pt x="149" y="-187" on="1"/>
        <pt x="149" y="-188" on="0"/>
        <pt x="362" y="-188" on="1"/>
        <pt x="583" y="-188" on="0"/>
        <pt x="598" y="-187" on="1"/>
        <pt x="704" y="-183" on="0"/>
        <pt x="767" y="-165" on="1"/>
        <pt x="879" y="-133" on="0"/>
        <pt x="936" y="-43" on="1"/>
        <pt x="946" y="-27" on="0"/>
        <pt x="959" y="6" on="1"/>
        <pt x="999" y="6" on="1"/>
        <pt x="984" y="-37" on="0"/>
        <pt x="927" y="-207" on="0"/>
        <pt x="913" y="-249" on="1"/>
        <pt x="489" y="-250" on="1"/>
        <pt x="65" y="-250" on="0"/>
        <pt x="62" y="-248" on="1"/>
        <pt x="56" y="-246" on="0"/>
        <pt x="56" y="-239" on="1"/>
        <pt x="56" y="-236" on="0"/>
        <pt x="59" y="-232" on="1"/>
        <pt x="60" y="-230" on="0"/>
        <pt x="244" y="-12" on="0"/>
        <pt x="336" y="97" on="1"/>
        <pt x="428" y="206" on="1"/>
        <pt x="428" y="207" on="0"/>
        <pt x="242" y="462" on="1"/>
        <pt x="57" y="717" on="1"/>
        <pt x="56" y="728" on="1"/>
        <pt x="56" y="744" on="0"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 4 values pushed */
          40 1 1 48
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="tilde" xMin="1" yMin="597" xMax="554" yMax="722">
      <contour>
        <pt x="55" y="671" on="1"/>
        <pt x="120" y="722" on="0"/>
        <pt x="182" y="722" on="1"/>
        <pt x="195" y="722" on="0"/>
        <pt x="200" y="721" on="1"/>
        <pt x="236" y="715" on="0"/>
        <pt x="285" y="692" on="1"/>
        <pt x="344" y="666" on="0"/>
        <pt x="381" y="662" on="1"/>
        <pt x="386" y="661" on="0"/>
        <pt x="395" y="661" on="1"/>
        <pt x="454" y="661" on="0"/>
        <pt x="521" y="713" on="1"/>
        <pt x="531" y="722" on="1"/>
        <pt x="543" y="708" on="1"/>
        <pt x="554" y="695" on="0"/>
        <pt x="554" y="693" on="1"/>
        <pt x="554" y="690" on="0"/>
        <pt x="527" y="668" on="0"/>
        <pt x="514" y="658" on="1"/>
        <pt x="500" y="648" on="1"/>
        <pt x="434" y="597" on="0"/>
        <pt x="374" y="597" on="1"/>
        <pt x="357" y="597" on="0"/>
        <pt x="335" y="602" on="1"/>
        <pt x="310" y="609" on="0"/>
        <pt x="270" y="627" on="1"/>
        <pt x="211" y="653" on="0"/>
        <pt x="175" y="657" on="1"/>
        <pt x="170" y="658" on="0"/>
        <pt x="160" y="658" on="1"/>
        <pt x="101" y="658" on="0"/>
        <pt x="34" y="606" on="1"/>
        <pt x="24" y="597" on="1"/>
        <pt x="12" y="611" on="1"/>
        <pt x="1" y="624" on="0"/>
        <pt x="1" y="626" on="1"/>
        <pt x="1" y="629" on="0"/>
        <pt x="28" y="651" on="0"/>
        <pt x="42" y="661" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 4 values pushed */
          21 1 1 48
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="tildecomb" xMin="-555" yMin="597" xMax="-2" yMax="722">
      <contour>
        <pt x="-501" y="671" on="1"/>
        <pt x="-436" y="722" on="0"/>
        <pt x="-374" y="722" on="1"/>
        <pt x="-361" y="722" on="0"/>
        <pt x="-356" y="721" on="1"/>
        <pt x="-320" y="715" on="0"/>
        <pt x="-271" y="692" on="1"/>
        <pt x="-212" y="666" on="0"/>
        <pt x="-175" y="662" on="1"/>
        <pt x="-170" y="661" on="0"/>
        <pt x="-161" y="661" on="1"/>
        <pt x="-102" y="661" on="0"/>
        <pt x="-35" y="713" on="1"/>
        <pt x="-25" y="722" on="1"/>
        <pt x="-13" y="708" on="1"/>
        <pt x="-2" y="695" on="0"/>
        <pt x="-2" y="693" on="1"/>
        <pt x="-2" y="690" on="0"/>
        <pt x="-29" y="668" on="0"/>
        <pt x="-42" y="658" on="1"/>
        <pt x="-56" y="648" on="1"/>
        <pt x="-122" y="597" on="0"/>
        <pt x="-182" y="597" on="1"/>
        <pt x="-199" y="597" on="0"/>
        <pt x="-221" y="602" on="1"/>
        <pt x="-246" y="609" on="0"/>
        <pt x="-286" y="627" on="1"/>
        <pt x="-345" y="653" on="0"/>
        <pt x="-381" y="657" on="1"/>
        <pt x="-386" y="658" on="0"/>
        <pt x="-396" y="658" on="1"/>
        <pt x="-455" y="658" on="0"/>
        <pt x="-522" y="606" on="1"/>
        <pt x="-532" y="597" on="1"/>
        <pt x="-544" y="611" on="1"/>
        <pt x="-555" y="624" on="0"/>
        <pt x="-555" y="626" on="1"/>
        <pt x="-555" y="629" on="0"/>
        <pt x="-528" y="651" on="0"/>
        <pt x="-514" y="661" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 4 values pushed */
          21 1 1 48
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="uni00A0"/><!-- contains no outline data -->

    <TTGlyph name="uni0302" xMin="-564" yMin="551" xMax="8" yMax="744">
      <contour>
        <pt x="-277" y="669" on="1"/>
        <pt x="-283" y="669" on="0"/>
        <pt x="-546" y="551" on="0"/>
        <pt x="-547" y="551" on="1"/>
        <pt x="-556" y="569" on="1"/>
        <pt x="-564" y="585" on="0"/>
        <pt x="-564" y="587" on="1"/>
        <pt x="-564" y="588" on="0"/>
        <pt x="-563" y="588" on="1"/>
        <pt x="-544" y="598" on="1"/>
        <pt x="-526" y="608" on="0"/>
        <pt x="-453" y="648" on="0"/>
        <pt x="-420" y="666" on="1"/>
        <pt x="-279" y="744" on="1"/>
        <pt x="-276" y="742" on="0"/>
        <pt x="2" y="591" on="0"/>
        <pt x="8" y="587" on="1"/>
        <pt x="-1" y="569" on="1"/>
        <pt x="-7" y="556" on="0"/>
        <pt x="-11" y="551" on="0"/>
        <pt x="-12" y="552" on="1"/>
        <pt x="-17" y="555" on="0"/>
        <pt x="-274" y="669" on="0"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 4 values pushed */
          13 2 1 48
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="uni2016" xMin="257" yMin="0" xMax="521" yMax="602">
      <contour>
        <pt x="257" y="0" on="1"/>
        <pt x="257" y="602" on="1"/>
        <pt x="300" y="602" on="1"/>
        <pt x="300" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="478" y="0" on="1"/>
        <pt x="478" y="602" on="1"/>
        <pt x="521" y="602" on="1"/>
        <pt x="521" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 6 values pushed */
          5 4 1 0 2 48
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="uni2210" xMin="55" yMin="-250" xMax="888" yMax="750">
      <contour>
        <pt x="786" y="-155" on="1"/>
        <pt x="798" y="-206" on="0"/>
        <pt x="874" y="-210" on="1"/>
        <pt x="888" y="-210" on="1"/>
        <pt x="888" y="-250" on="1"/>
        <pt x="55" y="-250" on="1"/>
        <pt x="55" y="-210" on="1"/>
        <pt x="69" y="-210" on="1"/>
        <pt x="139" y="-206" on="0"/>
        <pt x="155" y="-163" on="1"/>
        <pt x="158" y="-155" on="1"/>
        <pt x="158" y="656" on="1"/>
        <pt x="155" y="663" on="1"/>
        <pt x="139" y="706" on="0"/>
        <pt x="69" y="710" on="1"/>
        <pt x="55" y="710" on="1"/>
        <pt x="55" y="750" on="1"/>
        <pt x="373" y="750" on="1"/>
        <pt x="373" y="710" on="1"/>
        <pt x="359" y="710" on="1"/>
        <pt x="319" y="708" on="0"/>
        <pt x="278" y="683" on="0"/>
        <pt x="271" y="656" on="1"/>
        <pt x="270" y="223" on="1"/>
        <pt x="270" y="-210" on="1"/>
        <pt x="673" y="-210" on="1"/>
        <pt x="673" y="656" on="1"/>
        <pt x="670" y="663" on="1"/>
        <pt x="654" y="706" on="0"/>
        <pt x="584" y="710" on="1"/>
        <pt x="570" y="710" on="1"/>
        <pt x="570" y="750" on="1"/>
        <pt x="888" y="750" on="1"/>
        <pt x="888" y="710" on="1"/>
        <pt x="874" y="710" on="1"/>
        <pt x="834" y="708" on="0"/>
        <pt x="793" y="683" on="0"/>
        <pt x="786" y="656" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 4 values pushed */
          16 4 1 48
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="uni2223" xMin="145" yMin="-15" xMax="188" yMax="627">
      <contour>
        <pt x="146" y="612" on="1"/>
        <pt x="150" y="627" on="0"/>
        <pt x="182" y="627" on="0"/>
        <pt x="187" y="612" on="1"/>
        <pt x="188" y="610" on="0"/>
        <pt x="188" y="2" on="0"/>
        <pt x="187" y="0" on="1"/>
        <pt x="184" y="-15" on="0"/>
        <pt x="166" y="-15" on="1"/>
        <pt x="149" y="-15" on="0"/>
        <pt x="146" y="0" on="1"/>
        <pt x="146" y="10" on="1"/>
        <pt x="146" y="19" on="0"/>
        <pt x="146" y="52" on="0"/>
        <pt x="146" y="95" on="0"/>
        <pt x="145" y="150" on="0"/>
        <pt x="145" y="208" on="0"/>
        <pt x="145" y="275" on="0"/>
        <pt x="145" y="337" on="0"/>
        <pt x="145" y="404" on="0"/>
        <pt x="145" y="462" on="0"/>
        <pt x="146" y="517" on="0"/>
        <pt x="146" y="560" on="0"/>
        <pt x="146" y="593" on="0"/>
        <pt x="146" y="602" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 4 values pushed */
          7 1 1 48
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="uni2225" xMin="145" yMin="-15" xMax="410" yMax="627">
      <contour>
        <pt x="146" y="612" on="1"/>
        <pt x="150" y="627" on="0"/>
        <pt x="182" y="627" on="0"/>
        <pt x="187" y="612" on="1"/>
        <pt x="188" y="610" on="0"/>
        <pt x="188" y="2" on="0"/>
        <pt x="187" y="0" on="1"/>
        <pt x="184" y="-15" on="0"/>
        <pt x="166" y="-15" on="1"/>
        <pt x="149" y="-15" on="0"/>
        <pt x="146" y="0" on="1"/>
        <pt x="146" y="10" on="1"/>
        <pt x="146" y="19" on="0"/>
        <pt x="146" y="52" on="0"/>
        <pt x="146" y="95" on="0"/>
        <pt x="145" y="150" on="0"/>
        <pt x="145" y="208" on="0"/>
        <pt x="145" y="275" on="0"/>
        <pt x="145" y="337" on="0"/>
        <pt x="145" y="404" on="0"/>
        <pt x="145" y="462" on="0"/>
        <pt x="146" y="517" on="0"/>
        <pt x="146" y="560" on="0"/>
        <pt x="146" y="593" on="0"/>
        <pt x="146" y="602" on="1"/>
      </contour>
      <contour>
        <pt x="368" y="612" on="1"/>
        <pt x="372" y="627" on="0"/>
        <pt x="404" y="627" on="0"/>
        <pt x="409" y="612" on="1"/>
        <pt x="410" y="610" on="0"/>
        <pt x="410" y="2" on="0"/>
        <pt x="409" y="0" on="1"/>
        <pt x="406" y="-15" on="0"/>
        <pt x="389" y="-15" on="1"/>
        <pt x="371" y="-15" on="0"/>
        <pt x="368" y="0" on="1"/>
        <pt x="368" y="10" on="1"/>
        <pt x="368" y="19" on="0"/>
        <pt x="368" y="52" on="0"/>
        <pt x="368" y="95" on="0"/>
        <pt x="367" y="150" on="0"/>
        <pt x="367" y="208" on="0"/>
        <pt x="367" y="275" on="0"/>
        <pt x="367" y="337" on="0"/>
        <pt x="367" y="404" on="0"/>
        <pt x="367" y="462" on="0"/>
        <pt x="368" y="517" on="0"/>
        <pt x="368" y="560" on="0"/>
        <pt x="368" y="593" on="0"/>
        <pt x="368" y="602" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 6 values pushed */
          32 26 7 1 2 48
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="uni222C" xMin="55" yMin="-306" xMax="957" yMax="805">
      <contour>
        <pt x="83" y="-146" on="0"/>
        <pt x="125" y="-146" on="0"/>
        <pt x="153" y="-175" on="0"/>
        <pt x="153" y="-195" on="1"/>
        <pt x="153" y="-225" on="0"/>
        <pt x="129" y="-237" on="1"/>
        <pt x="128" y="-238" on="0"/>
        <pt x="120" y="-241" on="0"/>
        <pt x="116" y="-242" on="1"/>
        <pt x="113" y="-244" on="1"/>
        <pt x="113" y="-245" on="0"/>
        <pt x="124" y="-255" on="0"/>
        <pt x="128" y="-257" on="1"/>
        <pt x="144" y="-269" on="0"/>
        <pt x="167" y="-269" on="1"/>
        <pt x="186" y="-269" on="0"/>
        <pt x="199" y="-260" on="1"/>
        <pt x="223" y="-246" on="0"/>
        <pt x="235" y="-208" on="1"/>
        <pt x="252" y="-160" on="0"/>
        <pt x="267" y="47" on="1"/>
        <pt x="281" y="237" on="0"/>
        <pt x="297" y="367" on="1"/>
        <pt x="323" y="570" on="0"/>
        <pt x="327" y="591" on="1"/>
        <pt x="352" y="735" on="0"/>
        <pt x="424" y="782" on="1"/>
        <pt x="449" y="798" on="0"/>
        <pt x="479" y="804" on="1"/>
        <pt x="481" y="804" on="0"/>
        <pt x="496" y="805" on="0"/>
        <pt x="501" y="805" on="1"/>
        <pt x="548" y="802" on="0"/>
        <pt x="610" y="741" on="0"/>
        <pt x="610" y="695" on="1"/>
        <pt x="610" y="673" on="0"/>
        <pt x="582" y="645" on="0"/>
        <pt x="540" y="645" on="0"/>
        <pt x="512" y="674" on="0"/>
        <pt x="512" y="694" on="1"/>
        <pt x="512" y="724" on="0"/>
        <pt x="536" y="736" on="1"/>
        <pt x="537" y="737" on="0"/>
        <pt x="545" y="740" on="0"/>
        <pt x="548" y="742" on="1"/>
        <pt x="552" y="743" on="1"/>
        <pt x="552" y="748" on="0"/>
        <pt x="537" y="756" on="1"/>
        <pt x="520" y="768" on="0"/>
        <pt x="498" y="768" on="1"/>
        <pt x="454" y="768" on="0"/>
        <pt x="434" y="716" on="1"/>
        <pt x="422" y="687" on="0"/>
        <pt x="409" y="586" on="0"/>
        <pt x="399" y="452" on="1"/>
        <pt x="385" y="264" on="0"/>
        <pt x="369" y="133" on="1"/>
        <pt x="349" y="-39" on="0"/>
        <pt x="339" y="-91" on="1"/>
        <pt x="326" y="-162" on="0"/>
        <pt x="303" y="-207" on="1"/>
        <pt x="274" y="-269" on="0"/>
        <pt x="225" y="-293" on="1"/>
        <pt x="199" y="-306" on="0"/>
        <pt x="169" y="-306" on="1"/>
        <pt x="97" y="-306" on="0"/>
        <pt x="67" y="-244" on="1"/>
        <pt x="55" y="-223" on="0"/>
        <pt x="55" y="-196" on="1"/>
        <pt x="55" y="-174" on="0"/>
      </contour>
      <contour>
        <pt x="430" y="-146" on="0"/>
        <pt x="472" y="-146" on="0"/>
        <pt x="500" y="-175" on="0"/>
        <pt x="500" y="-195" on="1"/>
        <pt x="500" y="-225" on="0"/>
        <pt x="476" y="-237" on="1"/>
        <pt x="475" y="-238" on="0"/>
        <pt x="467" y="-241" on="0"/>
        <pt x="464" y="-242" on="1"/>
        <pt x="460" y="-244" on="1"/>
        <pt x="460" y="-245" on="0"/>
        <pt x="471" y="-255" on="0"/>
        <pt x="475" y="-257" on="1"/>
        <pt x="492" y="-269" on="0"/>
        <pt x="514" y="-269" on="1"/>
        <pt x="532" y="-269" on="0"/>
        <pt x="546" y="-260" on="1"/>
        <pt x="570" y="-246" on="0"/>
        <pt x="582" y="-208" on="1"/>
        <pt x="599" y="-160" on="0"/>
        <pt x="614" y="47" on="1"/>
        <pt x="628" y="237" on="0"/>
        <pt x="644" y="367" on="1"/>
        <pt x="670" y="570" on="0"/>
        <pt x="674" y="591" on="1"/>
        <pt x="699" y="735" on="0"/>
        <pt x="771" y="782" on="1"/>
        <pt x="796" y="798" on="0"/>
        <pt x="826" y="804" on="1"/>
        <pt x="828" y="804" on="0"/>
        <pt x="843" y="805" on="0"/>
        <pt x="848" y="805" on="1"/>
        <pt x="895" y="802" on="0"/>
        <pt x="957" y="741" on="0"/>
        <pt x="957" y="695" on="1"/>
        <pt x="957" y="673" on="0"/>
        <pt x="929" y="645" on="0"/>
        <pt x="887" y="645" on="0"/>
        <pt x="859" y="674" on="0"/>
        <pt x="859" y="694" on="1"/>
        <pt x="859" y="724" on="0"/>
        <pt x="883" y="736" on="1"/>
        <pt x="884" y="737" on="0"/>
        <pt x="892" y="740" on="0"/>
        <pt x="896" y="742" on="1"/>
        <pt x="899" y="743" on="1"/>
        <pt x="899" y="748" on="0"/>
        <pt x="884" y="756" on="1"/>
        <pt x="868" y="768" on="0"/>
        <pt x="845" y="768" on="1"/>
        <pt x="801" y="768" on="0"/>
        <pt x="781" y="716" on="1"/>
        <pt x="769" y="687" on="0"/>
        <pt x="756" y="586" on="0"/>
        <pt x="746" y="452" on="1"/>
        <pt x="732" y="264" on="0"/>
        <pt x="716" y="133" on="1"/>
        <pt x="696" y="-39" on="0"/>
        <pt x="686" y="-91" on="1"/>
        <pt x="673" y="-162" on="0"/>
        <pt x="650" y="-207" on="1"/>
        <pt x="621" y="-269" on="0"/>
        <pt x="572" y="-293" on="1"/>
        <pt x="546" y="-306" on="0"/>
        <pt x="516" y="-306" on="1"/>
        <pt x="444" y="-306" on="0"/>
        <pt x="414" y="-244" on="1"/>
        <pt x="402" y="-223" on="0"/>
        <pt x="402" y="-196" on="1"/>
        <pt x="402" y="-174" on="0"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 6 values pushed */
          133 100 63 30 2 48
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="uni222D" xMin="55" yMin="-306" xMax="1304" yMax="805">
      <contour>
        <pt x="83" y="-146" on="0"/>
        <pt x="125" y="-146" on="0"/>
        <pt x="153" y="-175" on="0"/>
        <pt x="153" y="-195" on="1"/>
        <pt x="153" y="-225" on="0"/>
        <pt x="129" y="-237" on="1"/>
        <pt x="128" y="-238" on="0"/>
        <pt x="120" y="-241" on="0"/>
        <pt x="116" y="-242" on="1"/>
        <pt x="113" y="-244" on="1"/>
        <pt x="113" y="-245" on="0"/>
        <pt x="124" y="-255" on="0"/>
        <pt x="128" y="-257" on="1"/>
        <pt x="144" y="-269" on="0"/>
        <pt x="167" y="-269" on="1"/>
        <pt x="186" y="-269" on="0"/>
        <pt x="199" y="-260" on="1"/>
        <pt x="223" y="-246" on="0"/>
        <pt x="235" y="-208" on="1"/>
        <pt x="252" y="-160" on="0"/>
        <pt x="267" y="47" on="1"/>
        <pt x="281" y="237" on="0"/>
        <pt x="297" y="367" on="1"/>
        <pt x="323" y="570" on="0"/>
        <pt x="327" y="591" on="1"/>
        <pt x="352" y="735" on="0"/>
        <pt x="424" y="782" on="1"/>
        <pt x="449" y="798" on="0"/>
        <pt x="479" y="804" on="1"/>
        <pt x="481" y="804" on="0"/>
        <pt x="496" y="805" on="0"/>
        <pt x="501" y="805" on="1"/>
        <pt x="548" y="802" on="0"/>
        <pt x="610" y="741" on="0"/>
        <pt x="610" y="695" on="1"/>
        <pt x="610" y="673" on="0"/>
        <pt x="582" y="645" on="0"/>
        <pt x="540" y="645" on="0"/>
        <pt x="512" y="674" on="0"/>
        <pt x="512" y="694" on="1"/>
        <pt x="512" y="724" on="0"/>
        <pt x="536" y="736" on="1"/>
        <pt x="537" y="737" on="0"/>
        <pt x="545" y="740" on="0"/>
        <pt x="548" y="742" on="1"/>
        <pt x="552" y="743" on="1"/>
        <pt x="552" y="748" on="0"/>
        <pt x="537" y="756" on="1"/>
        <pt x="520" y="768" on="0"/>
        <pt x="498" y="768" on="1"/>
        <pt x="454" y="768" on="0"/>
        <pt x="434" y="716" on="1"/>
        <pt x="422" y="687" on="0"/>
        <pt x="409" y="586" on="0"/>
        <pt x="399" y="452" on="1"/>
        <pt x="385" y="264" on="0"/>
        <pt x="369" y="133" on="1"/>
        <pt x="349" y="-39" on="0"/>
        <pt x="339" y="-91" on="1"/>
        <pt x="326" y="-162" on="0"/>
        <pt x="303" y="-207" on="1"/>
        <pt x="274" y="-269" on="0"/>
        <pt x="225" y="-293" on="1"/>
        <pt x="199" y="-306" on="0"/>
        <pt x="169" y="-306" on="1"/>
        <pt x="97" y="-306" on="0"/>
        <pt x="67" y="-244" on="1"/>
        <pt x="55" y="-223" on="0"/>
        <pt x="55" y="-196" on="1"/>
        <pt x="55" y="-174" on="0"/>
      </contour>
      <contour>
        <pt x="430" y="-146" on="0"/>
        <pt x="472" y="-146" on="0"/>
        <pt x="500" y="-175" on="0"/>
        <pt x="500" y="-195" on="1"/>
        <pt x="500" y="-225" on="0"/>
        <pt x="476" y="-237" on="1"/>
        <pt x="475" y="-238" on="0"/>
        <pt x="467" y="-241" on="0"/>
        <pt x="464" y="-242" on="1"/>
        <pt x="460" y="-244" on="1"/>
        <pt x="460" y="-245" on="0"/>
        <pt x="471" y="-255" on="0"/>
        <pt x="475" y="-257" on="1"/>
        <pt x="492" y="-269" on="0"/>
        <pt x="514" y="-269" on="1"/>
        <pt x="532" y="-269" on="0"/>
        <pt x="546" y="-260" on="1"/>
        <pt x="570" y="-246" on="0"/>
        <pt x="582" y="-208" on="1"/>
        <pt x="599" y="-160" on="0"/>
        <pt x="614" y="47" on="1"/>
        <pt x="628" y="237" on="0"/>
        <pt x="644" y="367" on="1"/>
        <pt x="670" y="570" on="0"/>
        <pt x="674" y="591" on="1"/>
        <pt x="699" y="735" on="0"/>
        <pt x="771" y="782" on="1"/>
        <pt x="796" y="798" on="0"/>
        <pt x="826" y="804" on="1"/>
        <pt x="828" y="804" on="0"/>
        <pt x="843" y="805" on="0"/>
        <pt x="848" y="805" on="1"/>
        <pt x="895" y="802" on="0"/>
        <pt x="957" y="741" on="0"/>
        <pt x="957" y="695" on="1"/>
        <pt x="957" y="673" on="0"/>
        <pt x="929" y="645" on="0"/>
        <pt x="887" y="645" on="0"/>
        <pt x="859" y="674" on="0"/>
        <pt x="859" y="694" on="1"/>
        <pt x="859" y="724" on="0"/>
        <pt x="883" y="736" on="1"/>
        <pt x="884" y="737" on="0"/>
        <pt x="892" y="740" on="0"/>
        <pt x="896" y="742" on="1"/>
        <pt x="899" y="743" on="1"/>
        <pt x="899" y="748" on="0"/>
        <pt x="884" y="756" on="1"/>
        <pt x="868" y="768" on="0"/>
        <pt x="845" y="768" on="1"/>
        <pt x="801" y="768" on="0"/>
        <pt x="781" y="716" on="1"/>
        <pt x="769" y="687" on="0"/>
        <pt x="756" y="586" on="0"/>
        <pt x="746" y="452" on="1"/>
        <pt x="732" y="264" on="0"/>
        <pt x="716" y="133" on="1"/>
        <pt x="696" y="-39" on="0"/>
        <pt x="686" y="-91" on="1"/>
        <pt x="673" y="-162" on="0"/>
        <pt x="650" y="-207" on="1"/>
        <pt x="621" y="-269" on="0"/>
        <pt x="572" y="-293" on="1"/>
        <pt x="546" y="-306" on="0"/>
        <pt x="516" y="-306" on="1"/>
        <pt x="444" y="-306" on="0"/>
        <pt x="414" y="-244" on="1"/>
        <pt x="402" y="-223" on="0"/>
        <pt x="402" y="-196" on="1"/>
        <pt x="402" y="-174" on="0"/>
      </contour>
      <contour>
        <pt x="777" y="-146" on="0"/>
        <pt x="819" y="-146" on="0"/>
        <pt x="847" y="-175" on="0"/>
        <pt x="847" y="-195" on="1"/>
        <pt x="847" y="-225" on="0"/>
        <pt x="823" y="-237" on="1"/>
        <pt x="822" y="-238" on="0"/>
        <pt x="814" y="-241" on="0"/>
        <pt x="810" y="-242" on="1"/>
        <pt x="807" y="-244" on="1"/>
        <pt x="807" y="-245" on="0"/>
        <pt x="818" y="-255" on="0"/>
        <pt x="822" y="-257" on="1"/>
        <pt x="838" y="-269" on="0"/>
        <pt x="861" y="-269" on="1"/>
        <pt x="880" y="-269" on="0"/>
        <pt x="893" y="-260" on="1"/>
        <pt x="917" y="-246" on="0"/>
        <pt x="929" y="-208" on="1"/>
        <pt x="946" y="-160" on="0"/>
        <pt x="961" y="47" on="1"/>
        <pt x="975" y="237" on="0"/>
        <pt x="991" y="367" on="1"/>
        <pt x="1017" y="570" on="0"/>
        <pt x="1021" y="591" on="1"/>
        <pt x="1046" y="735" on="0"/>
        <pt x="1118" y="782" on="1"/>
        <pt x="1143" y="798" on="0"/>
        <pt x="1173" y="804" on="1"/>
        <pt x="1175" y="804" on="0"/>
        <pt x="1190" y="805" on="0"/>
        <pt x="1195" y="805" on="1"/>
        <pt x="1242" y="802" on="0"/>
        <pt x="1304" y="741" on="0"/>
        <pt x="1304" y="695" on="1"/>
        <pt x="1304" y="673" on="0"/>
        <pt x="1276" y="645" on="0"/>
        <pt x="1234" y="645" on="0"/>
        <pt x="1206" y="674" on="0"/>
        <pt x="1206" y="694" on="1"/>
        <pt x="1206" y="724" on="0"/>
        <pt x="1230" y="736" on="1"/>
        <pt x="1231" y="737" on="0"/>
        <pt x="1239" y="740" on="0"/>
        <pt x="1242" y="742" on="1"/>
        <pt x="1246" y="743" on="1"/>
        <pt x="1246" y="748" on="0"/>
        <pt x="1231" y="756" on="1"/>
        <pt x="1214" y="768" on="0"/>
        <pt x="1192" y="768" on="1"/>
        <pt x="1148" y="768" on="0"/>
        <pt x="1128" y="716" on="1"/>
        <pt x="1116" y="687" on="0"/>
        <pt x="1103" y="586" on="0"/>
        <pt x="1093" y="452" on="1"/>
        <pt x="1079" y="264" on="0"/>
        <pt x="1063" y="133" on="1"/>
        <pt x="1043" y="-39" on="0"/>
        <pt x="1033" y="-91" on="1"/>
        <pt x="1020" y="-162" on="0"/>
        <pt x="997" y="-207" on="1"/>
        <pt x="968" y="-269" on="0"/>
        <pt x="919" y="-293" on="1"/>
        <pt x="893" y="-306" on="0"/>
        <pt x="863" y="-306" on="1"/>
        <pt x="791" y="-306" on="0"/>
        <pt x="761" y="-244" on="1"/>
        <pt x="749" y="-223" on="0"/>
        <pt x="749" y="-196" on="1"/>
        <pt x="749" y="-174" on="0"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 8 values pushed */
          203 170 133 100 63 30 3 48
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="uni222E" xMin="55" yMin="-306" xMax="610" yMax="805">
      <contour>
        <pt x="83" y="-146" on="0"/>
        <pt x="125" y="-146" on="0"/>
        <pt x="153" y="-175" on="0"/>
        <pt x="153" y="-195" on="1"/>
        <pt x="153" y="-225" on="0"/>
        <pt x="129" y="-237" on="1"/>
        <pt x="128" y="-238" on="0"/>
        <pt x="120" y="-241" on="0"/>
        <pt x="116" y="-242" on="1"/>
        <pt x="113" y="-244" on="1"/>
        <pt x="113" y="-245" on="0"/>
        <pt x="124" y="-255" on="0"/>
        <pt x="128" y="-257" on="1"/>
        <pt x="144" y="-269" on="0"/>
        <pt x="167" y="-269" on="1"/>
        <pt x="186" y="-269" on="0"/>
        <pt x="199" y="-260" on="1"/>
        <pt x="223" y="-246" on="0"/>
        <pt x="235" y="-208" on="1"/>
        <pt x="251" y="-163" on="0"/>
        <pt x="266" y="33" on="1"/>
        <pt x="269" y="74" on="1"/>
        <pt x="264" y="76" on="1"/>
        <pt x="260" y="79" on="0"/>
        <pt x="247" y="84" on="0"/>
        <pt x="246" y="85" on="1"/>
        <pt x="179" y="119" on="0"/>
        <pt x="156" y="192" on="1"/>
        <pt x="148" y="216" on="0"/>
        <pt x="148" y="250" on="1"/>
        <pt x="148" y="283" on="0"/>
        <pt x="156" y="307" on="1"/>
        <pt x="182" y="390" on="0"/>
        <pt x="265" y="423" on="1"/>
        <pt x="270" y="425" on="0"/>
        <pt x="285" y="429" on="0"/>
        <pt x="302" y="433" on="0"/>
        <pt x="306" y="434" on="1"/>
        <pt x="307" y="444" on="1"/>
        <pt x="308" y="449" on="0"/>
        <pt x="318" y="524" on="0"/>
        <pt x="326" y="586" on="0"/>
        <pt x="327" y="591" on="1"/>
        <pt x="352" y="735" on="0"/>
        <pt x="424" y="782" on="1"/>
        <pt x="449" y="798" on="0"/>
        <pt x="479" y="804" on="1"/>
        <pt x="481" y="804" on="0"/>
        <pt x="496" y="805" on="0"/>
        <pt x="501" y="805" on="1"/>
        <pt x="548" y="802" on="0"/>
        <pt x="610" y="741" on="0"/>
        <pt x="610" y="695" on="1"/>
        <pt x="610" y="673" on="0"/>
        <pt x="582" y="645" on="0"/>
        <pt x="540" y="645" on="0"/>
        <pt x="512" y="674" on="0"/>
        <pt x="512" y="694" on="1"/>
        <pt x="512" y="724" on="0"/>
        <pt x="536" y="736" on="1"/>
        <pt x="537" y="737" on="0"/>
        <pt x="545" y="740" on="0"/>
        <pt x="548" y="742" on="1"/>
        <pt x="552" y="743" on="1"/>
        <pt x="552" y="748" on="0"/>
        <pt x="537" y="756" on="1"/>
        <pt x="520" y="768" on="0"/>
        <pt x="498" y="768" on="1"/>
        <pt x="454" y="768" on="0"/>
        <pt x="434" y="716" on="1"/>
        <pt x="415" y="672" on="0"/>
        <pt x="405" y="527" on="1"/>
        <pt x="397" y="425" on="1"/>
        <pt x="397" y="423" on="0"/>
        <pt x="420" y="414" on="1"/>
        <pt x="487" y="380" on="0"/>
        <pt x="510" y="307" on="1"/>
        <pt x="518" y="283" on="0"/>
        <pt x="518" y="250" on="1"/>
        <pt x="518" y="216" on="0"/>
        <pt x="510" y="192" on="1"/>
        <pt x="484" y="109" on="0"/>
        <pt x="401" y="76" on="1"/>
        <pt x="396" y="74" on="0"/>
        <pt x="381" y="70" on="0"/>
        <pt x="364" y="66" on="0"/>
        <pt x="360" y="65" on="1"/>
        <pt x="359" y="55" on="1"/>
        <pt x="357" y="41" on="0"/>
        <pt x="346" y="-46" on="0"/>
        <pt x="340" y="-81" on="0"/>
        <pt x="328" y="-144" on="0"/>
        <pt x="313" y="-187" on="0"/>
        <pt x="303" y="-207" on="1"/>
        <pt x="274" y="-269" on="0"/>
        <pt x="225" y="-293" on="1"/>
        <pt x="199" y="-306" on="0"/>
        <pt x="169" y="-306" on="1"/>
        <pt x="97" y="-306" on="0"/>
        <pt x="67" y="-244" on="1"/>
        <pt x="55" y="-223" on="0"/>
        <pt x="55" y="-196" on="1"/>
        <pt x="55" y="-174" on="0"/>
      </contour>
      <contour>
        <pt x="300" y="391" on="1"/>
        <pt x="300" y="392" on="0"/>
        <pt x="299" y="392" on="1"/>
        <pt x="298" y="392" on="0"/>
        <pt x="297" y="391" on="1"/>
        <pt x="294" y="390" on="0"/>
        <pt x="292" y="390" on="1"/>
        <pt x="248" y="378" on="0"/>
        <pt x="187" y="301" on="0"/>
        <pt x="187" y="249" on="1"/>
        <pt x="187" y="203" on="0"/>
        <pt x="235" y="135" on="0"/>
        <pt x="272" y="116" on="1"/>
        <pt x="272" y="122" on="1"/>
        <pt x="273" y="126" on="0"/>
        <pt x="275" y="154" on="1"/>
        <pt x="280" y="222" on="0"/>
      </contour>
      <contour>
        <pt x="479" y="249" on="1"/>
        <pt x="479" y="292" on="0"/>
        <pt x="434" y="363" on="0"/>
        <pt x="402" y="379" on="1"/>
        <pt x="394" y="383" on="1"/>
        <pt x="394" y="377" on="1"/>
        <pt x="393" y="373" on="0"/>
        <pt x="391" y="346" on="1"/>
        <pt x="385" y="274" on="0"/>
        <pt x="369" y="133" on="1"/>
        <pt x="366" y="112" on="0"/>
        <pt x="366" y="107" on="1"/>
        <pt x="372" y="107" on="0"/>
        <pt x="388" y="114" on="1"/>
        <pt x="426" y="128" on="0"/>
        <pt x="479" y="202" on="0"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 8 values pushed */
          131 124 115 104 96 48 3 48
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="uni22C0" xMin="55" yMin="-249" xMax="777" yMax="750">
      <contour>
        <pt x="97" y="-249" on="1"/>
        <pt x="78" y="-249" on="0"/>
        <pt x="55" y="-224" on="0"/>
        <pt x="55" y="-207" on="1"/>
        <pt x="55" y="-201" on="0"/>
        <pt x="56" y="-198" on="1"/>
        <pt x="58" y="-190" on="0"/>
        <pt x="378" y="726" on="0"/>
        <pt x="380" y="729" on="1"/>
        <pt x="391" y="750" on="0"/>
        <pt x="416" y="750" on="1"/>
        <pt x="438" y="750" on="0"/>
        <pt x="451" y="732" on="1"/>
        <pt x="453" y="728" on="0"/>
        <pt x="615" y="267" on="0"/>
        <pt x="695" y="36" on="1"/>
        <pt x="775" y="-194" on="1"/>
        <pt x="777" y="-204" on="0"/>
        <pt x="777" y="-208" on="1"/>
        <pt x="777" y="-225" on="0"/>
        <pt x="753" y="-249" on="0"/>
        <pt x="735" y="-249" on="1"/>
        <pt x="713" y="-249" on="0"/>
        <pt x="700" y="-231" on="1"/>
        <pt x="698" y="-228" on="0"/>
        <pt x="662" y="-126" on="1"/>
        <pt x="557" y="178" on="0"/>
        <pt x="416" y="579" on="1"/>
        <pt x="138" y="-224" on="0"/>
        <pt x="132" y="-231" on="1"/>
        <pt x="119" y="-249" on="0"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 4 values pushed */
          9 0 1 48
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="uni22C1" xMin="55" yMin="-249" xMax="777" yMax="750">
      <contour>
        <pt x="55" y="708" on="1"/>
        <pt x="55" y="726" on="0"/>
        <pt x="78" y="750" on="0"/>
        <pt x="96" y="750" on="1"/>
        <pt x="118" y="750" on="0"/>
        <pt x="132" y="731" on="1"/>
        <pt x="135" y="727" on="0"/>
        <pt x="416" y="-79" on="1"/>
        <pt x="477" y="95" on="0"/>
        <pt x="584" y="401" on="0"/>
        <pt x="640" y="562" on="0"/>
        <pt x="682" y="684" on="0"/>
        <pt x="698" y="728" on="0"/>
        <pt x="700" y="731" on="1"/>
        <pt x="713" y="749" on="0"/>
        <pt x="735" y="749" on="1"/>
        <pt x="753" y="749" on="0"/>
        <pt x="777" y="725" on="0"/>
        <pt x="777" y="708" on="1"/>
        <pt x="777" y="704" on="0"/>
        <pt x="775" y="694" on="1"/>
        <pt x="695" y="464" on="1"/>
        <pt x="615" y="233" on="0"/>
        <pt x="453" y="-228" on="0"/>
        <pt x="451" y="-232" on="1"/>
        <pt x="437" y="-249" on="0"/>
        <pt x="416" y="-249" on="1"/>
        <pt x="402" y="-249" on="0"/>
        <pt x="391" y="-241" on="1"/>
        <pt x="384" y="-236" on="0"/>
        <pt x="380" y="-226" on="1"/>
        <pt x="368" y="-198" on="0"/>
        <pt x="219" y="230" on="1"/>
        <pt x="182" y="335" on="0"/>
        <pt x="99" y="575" on="0"/>
        <pt x="58" y="692" on="0"/>
        <pt x="57" y="694" on="1"/>
        <pt x="55" y="704" on="0"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 4 values pushed */
          25 2 1 48
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="uni22C2" xMin="55" yMin="-249" xMax="777" yMax="750">
      <contour>
        <pt x="139" y="-217" on="1"/>
        <pt x="124" y="-249" on="0"/>
        <pt x="97" y="-249" on="1"/>
        <pt x="66" y="-249" on="0"/>
        <pt x="57" y="-220" on="1"/>
        <pt x="55" y="-214" on="0"/>
        <pt x="55" y="102" on="1"/>
        <pt x="55" y="422" on="0"/>
        <pt x="56" y="430" on="1"/>
        <pt x="68" y="561" on="0"/>
        <pt x="251" y="735" on="0"/>
        <pt x="378" y="748" on="1"/>
        <pt x="383" y="749" on="0"/>
        <pt x="392" y="749" on="1"/>
        <pt x="393" y="750" on="0"/>
        <pt x="402" y="750" on="1"/>
        <pt x="414" y="750" on="0"/>
        <pt x="422" y="749" on="1"/>
        <pt x="467" y="749" on="0"/>
        <pt x="512" y="738" on="1"/>
        <pt x="610" y="712" on="0"/>
        <pt x="680" y="640" on="1"/>
        <pt x="766" y="551" on="0"/>
        <pt x="776" y="430" on="1"/>
        <pt x="777" y="422" on="0"/>
        <pt x="777" y="102" on="1"/>
        <pt x="777" y="-214" on="0"/>
        <pt x="775" y="-220" on="1"/>
        <pt x="766" y="-249" on="0"/>
        <pt x="735" y="-249" on="1"/>
        <pt x="705" y="-249" on="0"/>
        <pt x="694" y="-217" on="1"/>
        <pt x="694" y="-109" on="0"/>
        <pt x="692" y="321" on="0"/>
        <pt x="692" y="428" on="1"/>
        <pt x="690" y="441" on="1"/>
        <pt x="676" y="523" on="0"/>
        <pt x="620" y="581" on="1"/>
        <pt x="535" y="666" on="0"/>
        <pt x="416" y="666" on="1"/>
        <pt x="349" y="666" on="0"/>
        <pt x="287" y="635" on="1"/>
        <pt x="230" y="607" on="0"/>
        <pt x="153" y="506" on="0"/>
        <pt x="142" y="441" on="1"/>
        <pt x="140" y="428" on="1"/>
        <pt x="139" y="105" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 4 values pushed */
          14 1 1 48
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="uni22C3" xMin="55" yMin="-249" xMax="777" yMax="750">
      <contour>
        <pt x="70" y="740" on="1"/>
        <pt x="80" y="750" on="0"/>
        <pt x="96" y="750" on="1"/>
        <pt x="125" y="750" on="0"/>
        <pt x="136" y="723" on="1"/>
        <pt x="139" y="718" on="1"/>
        <pt x="139" y="395" on="1"/>
        <pt x="140" y="73" on="1"/>
        <pt x="142" y="60" on="1"/>
        <pt x="157" y="-29" on="0"/>
        <pt x="285" y="-151" on="0"/>
        <pt x="379" y="-164" on="1"/>
        <pt x="397" y="-166" on="0"/>
        <pt x="416" y="-166" on="1"/>
        <pt x="535" y="-166" on="0"/>
        <pt x="620" y="-81" on="1"/>
        <pt x="676" y="-23" on="0"/>
        <pt x="690" y="60" on="1"/>
        <pt x="692" y="73" on="1"/>
        <pt x="692" y="181" on="0"/>
        <pt x="694" y="611" on="0"/>
        <pt x="694" y="718" on="1"/>
        <pt x="707" y="749" on="0"/>
        <pt x="735" y="749" on="1"/>
        <pt x="766" y="749" on="0"/>
        <pt x="775" y="720" on="1"/>
        <pt x="777" y="714" on="0"/>
        <pt x="777" y="398" on="1"/>
        <pt x="777" y="78" on="0"/>
        <pt x="776" y="71" on="1"/>
        <pt x="766" y="-51" on="0"/>
        <pt x="680" y="-140" on="1"/>
        <pt x="605" y="-215" on="0"/>
        <pt x="506" y="-239" on="1"/>
        <pt x="466" y="-249" on="0"/>
        <pt x="366" y="-249" on="0"/>
        <pt x="327" y="-239" on="1"/>
        <pt x="227" y="-215" on="0"/>
        <pt x="152" y="-140" on="1"/>
        <pt x="66" y="-51" on="0"/>
        <pt x="56" y="71" on="1"/>
        <pt x="55" y="78" on="0"/>
        <pt x="55" y="398" on="1"/>
        <pt x="55" y="714" on="0"/>
        <pt x="57" y="720" on="1"/>
        <pt x="60" y="734" on="0"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 4 values pushed */
          34 1 1 48
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="uni2308" xMin="202" yMin="-349" xMax="449" yMax="850">
      <contour>
        <pt x="202" y="-349" on="1"/>
        <pt x="202" y="850" on="1"/>
        <pt x="449" y="850" on="1"/>
        <pt x="449" y="810" on="1"/>
        <pt x="242" y="810" on="1"/>
        <pt x="242" y="-349" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 4 values pushed */
          1 0 1 48
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="uni2309" xMin="22" yMin="-349" xMax="269" yMax="850">
      <contour>
        <pt x="22" y="810" on="1"/>
        <pt x="22" y="850" on="1"/>
        <pt x="269" y="850" on="1"/>
        <pt x="269" y="-349" on="1"/>
        <pt x="229" y="-349" on="1"/>
        <pt x="229" y="810" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 4 values pushed */
          3 1 1 48
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="uni230A" xMin="202" yMin="-349" xMax="449" yMax="850">
      <contour>
        <pt x="202" y="-349" on="1"/>
        <pt x="202" y="850" on="1"/>
        <pt x="242" y="850" on="1"/>
        <pt x="242" y="-309" on="1"/>
        <pt x="449" y="-309" on="1"/>
        <pt x="449" y="-349" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 4 values pushed */
          1 0 1 48
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="uni230B" xMin="22" yMin="-349" xMax="269" yMax="850">
      <contour>
        <pt x="229" y="-309" on="1"/>
        <pt x="229" y="850" on="1"/>
        <pt x="269" y="850" on="1"/>
        <pt x="269" y="-349" on="1"/>
        <pt x="22" y="-349" on="1"/>
        <pt x="22" y="-309" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 4 values pushed */
          3 1 1 48
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="uni23D0" xMin="312" yMin="0" xMax="355" yMax="602">
      <contour>
        <pt x="312" y="0" on="1"/>
        <pt x="312" y="602" on="1"/>
        <pt x="355" y="602" on="1"/>
        <pt x="355" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 4 values pushed */
          1 0 1 48
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="uni27E8" xMin="97" yMin="-350" xMax="394" yMax="850">
      <contour>
        <pt x="373" y="850" on="1"/>
        <pt x="392" y="850" on="0"/>
        <pt x="394" y="832" on="1"/>
        <pt x="394" y="825" on="0"/>
        <pt x="267" y="538" on="1"/>
        <pt x="139" y="250" on="1"/>
        <pt x="267" y="-38" on="1"/>
        <pt x="394" y="-325" on="0"/>
        <pt x="394" y="-332" on="1"/>
        <pt x="392" y="-350" on="0"/>
        <pt x="375" y="-350" on="1"/>
        <pt x="362" y="-350" on="0"/>
        <pt x="356" y="-338" on="1"/>
        <pt x="354" y="-331" on="0"/>
        <pt x="224" y="-40" on="0"/>
        <pt x="97" y="246" on="0"/>
        <pt x="97" y="254" on="0"/>
        <pt x="224" y="540" on="0"/>
        <pt x="354" y="831" on="0"/>
        <pt x="356" y="838" on="1"/>
        <pt x="363" y="850" on="0"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 4 values pushed */
          9 0 1 48
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="uni27E9" xMin="77" yMin="-350" xMax="374" yMax="850">
      <contour>
        <pt x="77" y="832" on="1"/>
        <pt x="79" y="850" on="0"/>
        <pt x="98" y="850" on="1"/>
        <pt x="110" y="849" on="0"/>
        <pt x="115" y="838" on="1"/>
        <pt x="117" y="831" on="0"/>
        <pt x="247" y="540" on="0"/>
        <pt x="374" y="254" on="0"/>
        <pt x="374" y="246" on="0"/>
        <pt x="247" y="-40" on="0"/>
        <pt x="117" y="-331" on="0"/>
        <pt x="115" y="-338" on="1"/>
        <pt x="109" y="-350" on="0"/>
        <pt x="96" y="-350" on="1"/>
        <pt x="79" y="-350" on="0"/>
        <pt x="77" y="-332" on="1"/>
        <pt x="77" y="-325" on="0"/>
        <pt x="204" y="-38" on="1"/>
        <pt x="332" y="250" on="1"/>
        <pt x="204" y="538" on="1"/>
        <pt x="77" y="825" on="0"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 4 values pushed */
          12 1 1 48
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="uni2A00" xMin="56" yMin="-250" xMax="1054" yMax="750">
      <contour>
        <pt x="372" y="715" on="1"/>
        <pt x="461" y="750" on="0"/>
        <pt x="539" y="750" on="1"/>
        <pt x="554" y="750" on="0"/>
        <pt x="562" y="749" on="1"/>
        <pt x="607" y="749" on="0"/>
        <pt x="641" y="742" on="1"/>
        <pt x="758" y="722" on="0"/>
        <pt x="950" y="579" on="0"/>
        <pt x="1003" y="473" on="1"/>
        <pt x="1041" y="394" on="0"/>
        <pt x="1053" y="300" on="1"/>
        <pt x="1054" y="289" on="0"/>
        <pt x="1054" y="250" on="1"/>
        <pt x="1054" y="150" on="0"/>
        <pt x="1020" y="66" on="1"/>
        <pt x="982" y="-31" on="0"/>
        <pt x="836" y="-177" on="0"/>
        <pt x="739" y="-215" on="1"/>
        <pt x="651" y="-250" on="0"/>
        <pt x="555" y="-250" on="1"/>
        <pt x="457" y="-250" on="0"/>
        <pt x="372" y="-215" on="1"/>
        <pt x="275" y="-177" on="0"/>
        <pt x="128" y="-31" on="0"/>
        <pt x="90" y="66" on="1"/>
        <pt x="56" y="150" on="0"/>
        <pt x="56" y="250" on="1"/>
        <pt x="56" y="348" on="0"/>
        <pt x="90" y="434" on="1"/>
        <pt x="128" y="531" on="0"/>
        <pt x="275" y="677" on="0"/>
      </contour>
      <contour>
        <pt x="970" y="250" on="1"/>
        <pt x="970" y="418" on="0"/>
        <pt x="755" y="646" on="0"/>
        <pt x="600" y="664" on="1"/>
        <pt x="591" y="665" on="0"/>
        <pt x="548" y="665" on="1"/>
        <pt x="526" y="665" on="0"/>
        <pt x="486" y="660" on="1"/>
        <pt x="351" y="637" on="0"/>
        <pt x="159" y="439" on="0"/>
        <pt x="141" y="294" on="1"/>
        <pt x="140" y="284" on="0"/>
        <pt x="140" y="216" on="0"/>
        <pt x="141" y="206" on="1"/>
        <pt x="158" y="69" on="0"/>
        <pt x="248" y="-30" on="1"/>
        <pt x="341" y="-135" on="0"/>
        <pt x="482" y="-159" on="1"/>
        <pt x="514" y="-165" on="0"/>
        <pt x="555" y="-165" on="1"/>
        <pt x="610" y="-165" on="0"/>
        <pt x="654" y="-154" on="1"/>
        <pt x="772" y="-124" on="0"/>
        <pt x="943" y="53" on="0"/>
        <pt x="964" y="177" on="1"/>
        <pt x="970" y="209" on="0"/>
      </contour>
      <contour>
        <pt x="478" y="250" on="1"/>
        <pt x="478" y="282" on="0"/>
        <pt x="521" y="326" on="0"/>
        <pt x="551" y="326" on="1"/>
        <pt x="587" y="326" on="0"/>
        <pt x="632" y="285" on="0"/>
        <pt x="632" y="250" on="1"/>
        <pt x="632" y="216" on="0"/>
        <pt x="589" y="174" on="0"/>
        <pt x="521" y="174" on="0"/>
        <pt x="478" y="216" on="0"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 8 values pushed */
          66 60 50 36 19 1 3 48
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="uni2A01" xMin="56" yMin="-250" xMax="1054" yMax="750">
      <contour>
        <pt x="372" y="715" on="1"/>
        <pt x="461" y="750" on="0"/>
        <pt x="539" y="750" on="1"/>
        <pt x="554" y="750" on="0"/>
        <pt x="562" y="749" on="1"/>
        <pt x="607" y="749" on="0"/>
        <pt x="641" y="742" on="1"/>
        <pt x="758" y="722" on="0"/>
        <pt x="950" y="579" on="0"/>
        <pt x="1003" y="473" on="1"/>
        <pt x="1041" y="394" on="0"/>
        <pt x="1053" y="300" on="1"/>
        <pt x="1054" y="289" on="0"/>
        <pt x="1054" y="250" on="1"/>
        <pt x="1054" y="150" on="0"/>
        <pt x="1020" y="66" on="1"/>
        <pt x="982" y="-31" on="0"/>
        <pt x="836" y="-177" on="0"/>
        <pt x="739" y="-215" on="1"/>
        <pt x="651" y="-250" on="0"/>
        <pt x="555" y="-250" on="1"/>
        <pt x="457" y="-250" on="0"/>
        <pt x="372" y="-215" on="1"/>
        <pt x="275" y="-177" on="0"/>
        <pt x="128" y="-31" on="0"/>
        <pt x="90" y="66" on="1"/>
        <pt x="56" y="150" on="0"/>
        <pt x="56" y="250" on="1"/>
        <pt x="56" y="348" on="0"/>
        <pt x="90" y="434" on="1"/>
        <pt x="128" y="531" on="0"/>
        <pt x="275" y="677" on="0"/>
      </contour>
      <contour>
        <pt x="513" y="478" on="1"/>
        <pt x="513" y="664" on="0"/>
        <pt x="512" y="664" on="1"/>
        <pt x="509" y="664" on="0"/>
        <pt x="507" y="663" on="1"/>
        <pt x="403" y="653" on="0"/>
        <pt x="313" y="588" on="1"/>
        <pt x="164" y="479" on="0"/>
        <pt x="142" y="297" on="1"/>
        <pt x="141" y="292" on="1"/>
        <pt x="513" y="292" on="1"/>
      </contour>
      <contour>
        <pt x="622" y="660" on="1"/>
        <pt x="610" y="663" on="0"/>
        <pt x="602" y="663" on="1"/>
        <pt x="597" y="664" on="1"/>
        <pt x="597" y="292" on="1"/>
        <pt x="969" y="292" on="1"/>
        <pt x="968" y="297" on="1"/>
        <pt x="946" y="479" on="0"/>
        <pt x="798" y="588" on="1"/>
        <pt x="716" y="646" on="0"/>
      </contour>
      <contour>
        <pt x="513" y="-164" on="1"/>
        <pt x="513" y="208" on="1"/>
        <pt x="141" y="208" on="1"/>
        <pt x="142" y="203" on="1"/>
        <pt x="156" y="82" on="0"/>
        <pt x="229" y="-9" on="1"/>
        <pt x="281" y="-73" on="0"/>
        <pt x="425" y="-153" on="0"/>
        <pt x="508" y="-163" on="1"/>
      </contour>
      <contour>
        <pt x="968" y="203" on="1"/>
        <pt x="969" y="208" on="1"/>
        <pt x="597" y="208" on="1"/>
        <pt x="597" y="-164" on="1"/>
        <pt x="602" y="-163" on="1"/>
        <pt x="750" y="-146" on="0"/>
        <pt x="951" y="61" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 12 values pushed */
          65 63 54 53 47 46 41 33 19 1 5 48
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="uni2A02" xMin="56" yMin="-250" xMax="1054" yMax="750">
      <contour>
        <pt x="372" y="715" on="1"/>
        <pt x="461" y="750" on="0"/>
        <pt x="539" y="750" on="1"/>
        <pt x="554" y="750" on="0"/>
        <pt x="562" y="749" on="1"/>
        <pt x="607" y="749" on="0"/>
        <pt x="641" y="742" on="1"/>
        <pt x="758" y="722" on="0"/>
        <pt x="950" y="579" on="0"/>
        <pt x="1003" y="473" on="1"/>
        <pt x="1041" y="394" on="0"/>
        <pt x="1053" y="300" on="1"/>
        <pt x="1054" y="289" on="0"/>
        <pt x="1054" y="250" on="1"/>
        <pt x="1054" y="150" on="0"/>
        <pt x="1020" y="66" on="1"/>
        <pt x="982" y="-31" on="0"/>
        <pt x="836" y="-177" on="0"/>
        <pt x="739" y="-215" on="1"/>
        <pt x="651" y="-250" on="0"/>
        <pt x="555" y="-250" on="1"/>
        <pt x="457" y="-250" on="0"/>
        <pt x="372" y="-215" on="1"/>
        <pt x="275" y="-177" on="0"/>
        <pt x="128" y="-31" on="0"/>
        <pt x="90" y="66" on="1"/>
        <pt x="56" y="150" on="0"/>
        <pt x="56" y="250" on="1"/>
        <pt x="56" y="348" on="0"/>
        <pt x="90" y="434" on="1"/>
        <pt x="128" y="531" on="0"/>
        <pt x="275" y="677" on="0"/>
      </contour>
      <contour>
        <pt x="600" y="664" on="1"/>
        <pt x="591" y="665" on="0"/>
        <pt x="548" y="665" on="1"/>
        <pt x="526" y="665" on="0"/>
        <pt x="486" y="660" on="1"/>
        <pt x="385" y="643" on="0"/>
        <pt x="306" y="583" on="1"/>
        <pt x="292" y="573" on="1"/>
        <pt x="423" y="441" on="0"/>
        <pt x="555" y="310" on="1"/>
        <pt x="687" y="441" on="0"/>
        <pt x="818" y="573" on="1"/>
        <pt x="804" y="583" on="1"/>
        <pt x="714" y="650" on="0"/>
      </contour>
      <contour>
        <pt x="232" y="-13" on="1"/>
        <pt x="364" y="118" on="0"/>
        <pt x="495" y="250" on="1"/>
        <pt x="364" y="382" on="0"/>
        <pt x="232" y="513" on="1"/>
        <pt x="223" y="500" on="1"/>
        <pt x="154" y="411" on="0"/>
        <pt x="141" y="294" on="1"/>
        <pt x="140" y="284" on="0"/>
        <pt x="140" y="216" on="0"/>
        <pt x="141" y="206" on="1"/>
        <pt x="154" y="89" on="0"/>
        <pt x="223" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="887" y="501" on="1"/>
        <pt x="878" y="512" on="1"/>
        <pt x="878" y="513" on="0"/>
        <pt x="843" y="478" on="0"/>
        <pt x="780" y="415" on="0"/>
        <pt x="746" y="381" on="1"/>
        <pt x="615" y="250" on="1"/>
        <pt x="746" y="118" on="0"/>
        <pt x="878" y="-13" on="1"/>
        <pt x="887" y="0" on="1"/>
        <pt x="956" y="89" on="0"/>
        <pt x="969" y="206" on="1"/>
        <pt x="970" y="216" on="0"/>
        <pt x="970" y="284" on="0"/>
        <pt x="969" y="294" on="1"/>
        <pt x="955" y="410" on="0"/>
      </contour>
      <contour>
        <pt x="687" y="59" on="1"/>
        <pt x="555" y="190" on="1"/>
        <pt x="495" y="131" on="0"/>
        <pt x="423" y="59" on="1"/>
        <pt x="292" y="-73" on="1"/>
        <pt x="306" y="-83" on="1"/>
        <pt x="396" y="-151" on="0"/>
        <pt x="511" y="-164" on="1"/>
        <pt x="531" y="-166" on="0"/>
        <pt x="579" y="-166" on="0"/>
        <pt x="599" y="-164" on="1"/>
        <pt x="714" y="-151" on="0"/>
        <pt x="804" y="-83" on="1"/>
        <pt x="818" y="-73" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 12 values pushed */
          83 76 67 61 50 46 41 33 19 1 5 48
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="uni2A04" xMin="55" yMin="-249" xMax="777" yMax="750">
      <contour>
        <pt x="70" y="740" on="1"/>
        <pt x="80" y="750" on="0"/>
        <pt x="96" y="750" on="1"/>
        <pt x="125" y="750" on="0"/>
        <pt x="136" y="723" on="1"/>
        <pt x="139" y="718" on="1"/>
        <pt x="139" y="395" on="1"/>
        <pt x="140" y="73" on="1"/>
        <pt x="142" y="60" on="1"/>
        <pt x="157" y="-29" on="0"/>
        <pt x="285" y="-151" on="0"/>
        <pt x="379" y="-164" on="1"/>
        <pt x="397" y="-166" on="0"/>
        <pt x="416" y="-166" on="1"/>
        <pt x="535" y="-166" on="0"/>
        <pt x="620" y="-81" on="1"/>
        <pt x="676" y="-23" on="0"/>
        <pt x="690" y="60" on="1"/>
        <pt x="692" y="73" on="1"/>
        <pt x="692" y="181" on="0"/>
        <pt x="694" y="611" on="0"/>
        <pt x="694" y="718" on="1"/>
        <pt x="707" y="749" on="0"/>
        <pt x="735" y="749" on="1"/>
        <pt x="766" y="749" on="0"/>
        <pt x="775" y="720" on="1"/>
        <pt x="777" y="714" on="0"/>
        <pt x="777" y="398" on="1"/>
        <pt x="777" y="78" on="0"/>
        <pt x="776" y="71" on="1"/>
        <pt x="766" y="-51" on="0"/>
        <pt x="680" y="-140" on="1"/>
        <pt x="605" y="-215" on="0"/>
        <pt x="506" y="-239" on="1"/>
        <pt x="466" y="-249" on="0"/>
        <pt x="366" y="-249" on="0"/>
        <pt x="327" y="-239" on="1"/>
        <pt x="227" y="-215" on="0"/>
        <pt x="152" y="-140" on="1"/>
        <pt x="66" y="-51" on="0"/>
        <pt x="56" y="71" on="1"/>
        <pt x="55" y="78" on="0"/>
        <pt x="55" y="398" on="1"/>
        <pt x="55" y="714" on="0"/>
        <pt x="57" y="720" on="1"/>
        <pt x="60" y="734" on="0"/>
      </contour>
      <contour>
        <pt x="223" y="276" on="1"/>
        <pt x="223" y="302" on="0"/>
        <pt x="254" y="319" on="1"/>
        <pt x="374" y="319" on="1"/>
        <pt x="374" y="376" on="1"/>
        <pt x="374" y="438" on="0"/>
        <pt x="379" y="448" on="1"/>
        <pt x="386" y="459" on="0"/>
        <pt x="394" y="464" on="1"/>
        <pt x="400" y="470" on="0"/>
        <pt x="418" y="470" on="1"/>
        <pt x="443" y="467" on="0"/>
        <pt x="453" y="448" on="1"/>
        <pt x="458" y="438" on="0"/>
        <pt x="458" y="376" on="1"/>
        <pt x="458" y="319" on="1"/>
        <pt x="579" y="319" on="1"/>
        <pt x="585" y="315" on="1"/>
        <pt x="609" y="303" on="0"/>
        <pt x="609" y="276" on="1"/>
        <pt x="609" y="252" on="0"/>
        <pt x="587" y="241" on="1"/>
        <pt x="577" y="235" on="0"/>
        <pt x="513" y="235" on="1"/>
        <pt x="458" y="235" on="1"/>
        <pt x="458" y="178" on="1"/>
        <pt x="458" y="120" on="0"/>
        <pt x="457" y="117" on="1"/>
        <pt x="454" y="103" on="0"/>
        <pt x="431" y="84" on="0"/>
        <pt x="415" y="84" on="1"/>
        <pt x="401" y="84" on="0"/>
        <pt x="378" y="103" on="0"/>
        <pt x="375" y="117" on="1"/>
        <pt x="374" y="120" on="0"/>
        <pt x="374" y="178" on="1"/>
        <pt x="374" y="235" on="1"/>
        <pt x="319" y="235" on="1"/>
        <pt x="255" y="235" on="0"/>
        <pt x="245" y="241" on="1"/>
        <pt x="223" y="252" on="0"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 6 values pushed */
          75 55 34 1 2 48
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="uni2A06" xMin="55" yMin="-249" xMax="777" yMax="750">
      <contour>
        <pt x="777" y="-217" on="1"/>
        <pt x="766" y="-244" on="0"/>
        <pt x="745" y="-249" on="1"/>
        <pt x="88" y="-249" on="1"/>
        <pt x="64" y="-241" on="0"/>
        <pt x="57" y="-220" on="1"/>
        <pt x="55" y="-214" on="0"/>
        <pt x="55" y="714" on="0"/>
        <pt x="57" y="720" on="1"/>
        <pt x="60" y="734" on="0"/>
        <pt x="70" y="740" on="1"/>
        <pt x="80" y="750" on="0"/>
        <pt x="96" y="750" on="1"/>
        <pt x="126" y="750" on="0"/>
        <pt x="137" y="720" on="1"/>
        <pt x="139" y="714" on="0"/>
        <pt x="139" y="274" on="1"/>
        <pt x="139" y="-166" on="1"/>
        <pt x="693" y="-166" on="1"/>
        <pt x="693" y="274" on="1"/>
        <pt x="693" y="714" on="0"/>
        <pt x="695" y="720" on="1"/>
        <pt x="704" y="749" on="0"/>
        <pt x="735" y="749" on="1"/>
        <pt x="768" y="749" on="0"/>
        <pt x="775" y="719" on="1"/>
        <pt x="777" y="713" on="0"/>
        <pt x="777" y="248" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 4 values pushed */
          11 2 1 48
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="uniEFFD" xMin="0" yMin="0" xMax="300" yMax="100">
      <contour>
        <pt x="0" y="0" on="1"/>
        <pt x="0" y="100" on="1"/>
        <pt x="100" y="100" on="1"/>
        <pt x="100" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="200" y="0" on="1"/>
        <pt x="200" y="100" on="1"/>
        <pt x="300" y="100" on="1"/>
        <pt x="300" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 6 values pushed */
          5 4 1 0 2 48
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="uniEFFE" xMin="0" yMin="0" xMax="300" yMax="100">
      <contour>
        <pt x="0" y="0" on="1"/>
        <pt x="0" y="100" on="1"/>
        <pt x="100" y="100" on="1"/>
        <pt x="100" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="200" y="0" on="1"/>
        <pt x="200" y="100" on="1"/>
        <pt x="300" y="100" on="1"/>
        <pt x="300" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 6 values pushed */
          5 4 1 0 2 48
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="uniEFFF" xMin="0" yMin="0" xMax="100" yMax="100">
      <contour>
        <pt x="0" y="0" on="1"/>
        <pt x="0" y="100" on="1"/>
        <pt x="100" y="100" on="1"/>
        <pt x="100" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 4 values pushed */
          1 0 1 48
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

  </glyf>

  <name>
    <namerecord nameID="0" platformID="1" platEncID="0" langID="0x0" unicode="True">
      Copyright (c) 2009-2010 Design Science, Inc.
Copyright (c) 2014 Khan Academy
    </namerecord>
    <namerecord nameID="1" platformID="1" platEncID="0" langID="0x0" unicode="True">
      KaTeX_Size1
    </namerecord>
    <namerecord nameID="2" platformID="1" platEncID="0" langID="0x0" unicode="True">
      Regular
    </namerecord>
    <namerecord nameID="3" platformID="1" platEncID="0" langID="0x0" unicode="True">
      FontForge 2.0 : KaTeX_Size1-Regular
    </namerecord>
    <namerecord nameID="4" platformID="1" platEncID="0" langID="0x0" unicode="True">
      KaTeX_Size1-Regular
    </namerecord>
    <namerecord nameID="5" platformID="1" platEncID="0" langID="0x0" unicode="True">
      Version 1.1; ttfautohint (v1.3)
    </namerecord>
    <namerecord nameID="6" platformID="1" platEncID="0" langID="0x0" unicode="True">
      KaTeX_Size1-Regular
    </namerecord>
    <namerecord nameID="13" platformID="1" platEncID="0" langID="0x0" unicode="True">
      Copyright (c) 2009-2010, Design Science, Inc. (&lt;www.mathjax.org&gt;)
Copyright (c) 2014 Khan Academy (&lt;www.khanacademy.org&gt;),
with Reserved Font Name KaTeX_Size1.

This Font Software is licensed under the SIL Open Font License, Version 1.1.
This license available with a FAQ at:
http://scripts.sil.org/OFL
    </namerecord>
    <namerecord nameID="14" platformID="1" platEncID="0" langID="0x0" unicode="True">
      http://scripts.sil.org/OFL
    </namerecord>
    <namerecord nameID="16" platformID="1" platEncID="0" langID="0x0" unicode="True">
      KaTeX_Size1
    </namerecord>
    <namerecord nameID="17" platformID="1" platEncID="0" langID="0x0" unicode="True">
      Regular
    </namerecord>
    <namerecord nameID="0" platformID="3" platEncID="1" langID="0x409">
      Copyright (c) 2009-2010 Design Science, Inc.
Copyright (c) 2014 Khan Academy
    </namerecord>
    <namerecord nameID="1" platformID="3" platEncID="1" langID="0x409">
      KaTeX_Size1
    </namerecord>
    <namerecord nameID="2" platformID="3" platEncID="1" langID="0x409">
      Regular
    </namerecord>
    <namerecord nameID="3" platformID="3" platEncID="1" langID="0x409">
      FontForge 2.0 : KaTeX_Size1-Regular
    </namerecord>
    <namerecord nameID="4" platformID="3" platEncID="1" langID="0x409">
      KaTeX_Size1-Regular
    </namerecord>
    <namerecord nameID="5" platformID="3" platEncID="1" langID="0x409">
      Version 1.1; ttfautohint (v1.3)
    </namerecord>
    <namerecord nameID="6" platformID="3" platEncID="1" langID="0x409">
      KaTeX_Size1-Regular
    </namerecord>
    <namerecord nameID="13" platformID="3" platEncID="1" langID="0x409">
      Copyright (c) 2009-2010, Design Science, Inc. (&lt;www.mathjax.org&gt;)
Copyright (c) 2014 Khan Academy (&lt;www.khanacademy.org&gt;),
with Reserved Font Name KaTeX_Size1.

This Font Software is licensed under the SIL Open Font License, Version 1.1.
This license available with a FAQ at:
http://scripts.sil.org/OFL
    </namerecord>
    <namerecord nameID="14" platformID="3" platEncID="1" langID="0x409">
      http://scripts.sil.org/OFL
    </namerecord>
    <namerecord nameID="16" platformID="3" platEncID="1" langID="0x409">
      KaTeX_Size1
    </namerecord>
    <namerecord nameID="17" platformID="3" platEncID="1" langID="0x409">
      Regular
    </namerecord>
  </name>

  <post>
    <formatType value="2.0"/>
    <italicAngle value="0.0"/>
    <underlinePosition value="-125"/>
    <underlineThickness value="50"/>
    <isFixedPitch value="0"/>
    <minMemType42 value="0"/>
    <maxMemType42 value="0"/>
    <minMemType1 value="0"/>
    <maxMemType1 value="0"/>
    <psNames>
      <!-- This file uses unique glyph names based on the information
           found in the 'post' table. Since these names might not be unique,
           we have to invent artificial names in case of clashes. In order to
           be able to retain the original information, we need a name to
           ps name mapping for those cases where they differ. That's what
           you see below.
            -->
    </psNames>
    <extraNames>
      <!-- following are the name that are not taken from the standard Mac glyph order -->
      <psName name="uni00A0"/>
      <psName name="uni0302"/>
      <psName name="tildecomb"/>
      <psName name="uni2016"/>
      <psName name="arrowup"/>
      <psName name="arrowdown"/>
      <psName name="arrowdblup"/>
      <psName name="arrowdbldown"/>
      <psName name="uni2210"/>
      <psName name="uni2223"/>
      <psName name="uni2225"/>
      <psName name="uni222C"/>
      <psName name="uni222D"/>
      <psName name="uni222E"/>
      <psName name="uni22C0"/>
      <psName name="uni22C1"/>
      <psName name="uni22C2"/>
      <psName name="uni22C3"/>
      <psName name="uni2308"/>
      <psName name="uni2309"/>
      <psName name="uni230A"/>
      <psName name="uni230B"/>
      <psName name="uni23D0"/>
      <psName name="uni27E8"/>
      <psName name="uni27E9"/>
      <psName name="uni2A00"/>
      <psName name="uni2A01"/>
      <psName name="uni2A02"/>
      <psName name="uni2A04"/>
      <psName name="uni2A06"/>
      <psName name="uniEFFD"/>
      <psName name="uniEFFE"/>
      <psName name="uniEFFF"/>
    </extraNames>
  </post>

  <gasp>
    <gaspRange rangeMaxPPEM="65535" rangeGaspBehavior="15"/>
  </gasp>

  <FFTM>
    <!-- FontForge's timestamp, font source creation and modification dates -->
    <version value="1"/>
    <FFTimeStamp value="Tue Jul 31 14:57:19 2012"/>
    <sourceCreated value="Mon Oct 12 19:21:51 2009"/>
    <sourceModified value="Tue Jan 17 04:00:33 2017"/>
  </FFTM>

</ttFont>
