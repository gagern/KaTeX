<?xml version="1.0" encoding="UTF-8"?>
<ttFont sfntVersion="\x00\x01\x00\x00" ttLibVersion="3.3">

  <GlyphOrder>
    <!-- The 'id' attribute is only for humans; it is ignored when parsed. -->
    <GlyphID id="0" name=".notdef"/>
    <GlyphID id="1" name=".null"/>
    <GlyphID id="2" name="nonmarkingreturn"/>
    <GlyphID id="3" name="space"/>
    <GlyphID id="4" name="A"/>
    <GlyphID id="5" name="B"/>
    <GlyphID id="6" name="C"/>
    <GlyphID id="7" name="D"/>
    <GlyphID id="8" name="E"/>
    <GlyphID id="9" name="F"/>
    <GlyphID id="10" name="G"/>
    <GlyphID id="11" name="H"/>
    <GlyphID id="12" name="I"/>
    <GlyphID id="13" name="J"/>
    <GlyphID id="14" name="K"/>
    <GlyphID id="15" name="L"/>
    <GlyphID id="16" name="M"/>
    <GlyphID id="17" name="N"/>
    <GlyphID id="18" name="O"/>
    <GlyphID id="19" name="P"/>
    <GlyphID id="20" name="Q"/>
    <GlyphID id="21" name="R"/>
    <GlyphID id="22" name="S"/>
    <GlyphID id="23" name="T"/>
    <GlyphID id="24" name="U"/>
    <GlyphID id="25" name="V"/>
    <GlyphID id="26" name="W"/>
    <GlyphID id="27" name="X"/>
    <GlyphID id="28" name="Y"/>
    <GlyphID id="29" name="Z"/>
    <GlyphID id="30" name="uni00A0"/>
    <GlyphID id="31" name="uniEFFD"/>
    <GlyphID id="32" name="uniEFFE"/>
    <GlyphID id="33" name="uniEFFF"/>
  </GlyphOrder>

  <head>
    <!-- Most of this table will be recalculated by the compiler -->
    <tableVersion value="1.0"/>
    <fontRevision value="1.0"/>
    <checkSumAdjustment value="0xf6def68f"/>
    <magicNumber value="0x5f0f3cf5"/>
    <flags value="00000000 00011111"/>
    <unitsPerEm value="1000"/>
    <created value="Tue Jan 17 04:00:36 2017"/>
    <modified value="Tue Jan 17 04:00:36 2017"/>
    <xMin value="-2"/>
    <yMin value="-314"/>
    <xMax value="1241"/>
    <yMax value="735"/>
    <macStyle value="00000000 00000000"/>
    <lowestRecPPEM value="8"/>
    <fontDirectionHint value="2"/>
    <indexToLocFormat value="0"/>
    <glyphDataFormat value="0"/>
  </head>

  <hhea>
    <tableVersion value="0x00010000"/>
    <ascent value="735"/>
    <descent value="-314"/>
    <lineGap value="90"/>
    <advanceWidthMax value="1080"/>
    <minLeftSideBearing value="-2"/>
    <minRightSideBearing value="-306"/>
    <xMaxExtent value="1241"/>
    <caretSlopeRise value="1"/>
    <caretSlopeRun value="0"/>
    <caretOffset value="0"/>
    <reserved0 value="0"/>
    <reserved1 value="0"/>
    <reserved2 value="0"/>
    <reserved3 value="0"/>
    <metricDataFormat value="0"/>
    <numberOfHMetrics value="34"/>
  </hhea>

  <maxp>
    <!-- Most of this table will be recalculated by the compiler -->
    <tableVersion value="0x10000"/>
    <numGlyphs value="34"/>
    <maxPoints value="208"/>
    <maxContours value="4"/>
    <maxCompositePoints value="0"/>
    <maxCompositeContours value="0"/>
    <maxZones value="2"/>
    <maxTwilightPoints value="42"/>
    <maxStorage value="58"/>
    <maxFunctionDefs value="119"/>
    <maxInstructionDefs value="0"/>
    <maxStackElements value="184"/>
    <maxSizeOfInstructions value="652"/>
    <maxComponentElements value="0"/>
    <maxComponentDepth value="0"/>
  </maxp>

  <OS_2>
    <!-- The fields 'usFirstCharIndex' and 'usLastCharIndex'
         will be recalculated by the compiler -->
    <version value="2"/>
    <xAvgCharWidth value="736"/>
    <usWeightClass value="400"/>
    <usWidthClass value="5"/>
    <fsType value="00000000 00000000"/>
    <ySubscriptXSize value="650"/>
    <ySubscriptYSize value="700"/>
    <ySubscriptXOffset value="0"/>
    <ySubscriptYOffset value="140"/>
    <ySuperscriptXSize value="650"/>
    <ySuperscriptYSize value="700"/>
    <ySuperscriptXOffset value="0"/>
    <ySuperscriptYOffset value="480"/>
    <yStrikeoutSize value="49"/>
    <yStrikeoutPosition value="258"/>
    <sFamilyClass value="0"/>
    <panose>
      <bFamilyType value="0"/>
      <bSerifStyle value="0"/>
      <bWeight value="0"/>
      <bProportion value="0"/>
      <bContrast value="0"/>
      <bStrokeVariation value="0"/>
      <bArmStyle value="0"/>
      <bLetterForm value="0"/>
      <bMidline value="0"/>
      <bXHeight value="0"/>
    </panose>
    <ulUnicodeRange1 value="10000000 00000000 00000000 11101111"/>
    <ulUnicodeRange2 value="00010000 00000000 11101100 11101101"/>
    <ulUnicodeRange3 value="00000000 00000000 00000000 00000000"/>
    <ulUnicodeRange4 value="00000000 00000000 00000000 00000000"/>
    <achVendID value="PfEd"/>
    <fsSelection value="00000000 01000000"/>
    <usFirstCharIndex value="32"/>
    <usLastCharIndex value="61439"/>
    <sTypoAscender value="800"/>
    <sTypoDescender value="-200"/>
    <sTypoLineGap value="90"/>
    <usWinAscent value="735"/>
    <usWinDescent value="314"/>
    <ulCodePageRange1 value="00100000 00000000 00000000 10001111"/>
    <ulCodePageRange2 value="01011110 00000011 00000000 00000000"/>
    <sxHeight value="0"/>
    <sCapHeight value="717"/>
    <usDefaultChar value="0"/>
    <usBreakChar value="32"/>
    <usMaxContext value="1"/>
  </OS_2>

  <hmtx>
    <mtx name=".notdef" width="250" lsb="50"/>
    <mtx name=".null" width="0" lsb="0"/>
    <mtx name="A" width="803" lsb="35"/>
    <mtx name="B" width="908" lsb="31"/>
    <mtx name="C" width="666" lsb="26"/>
    <mtx name="D" width="774" lsb="68"/>
    <mtx name="E" width="562" lsb="46"/>
    <mtx name="F" width="895" lsb="39"/>
    <mtx name="G" width="610" lsb="12"/>
    <mtx name="H" width="969" lsb="29"/>
    <mtx name="I" width="809" lsb="59"/>
    <mtx name="J" width="1052" lsb="92"/>
    <mtx name="K" width="914" lsb="29"/>
    <mtx name="L" width="874" lsb="14"/>
    <mtx name="M" width="1080" lsb="30"/>
    <mtx name="N" width="902" lsb="29"/>
    <mtx name="O" width="738" lsb="96"/>
    <mtx name="P" width="1013" lsb="90"/>
    <mtx name="Q" width="883" lsb="54"/>
    <mtx name="R" width="850" lsb="-2"/>
    <mtx name="S" width="868" lsb="29"/>
    <mtx name="T" width="747" lsb="92"/>
    <mtx name="U" width="800" lsb="55"/>
    <mtx name="V" width="622" lsb="56"/>
    <mtx name="W" width="805" lsb="46"/>
    <mtx name="X" width="944" lsb="103"/>
    <mtx name="Y" width="710" lsb="57"/>
    <mtx name="Z" width="821" lsb="83"/>
    <mtx name="nonmarkingreturn" width="333" lsb="0"/>
    <mtx name="space" width="250" lsb="0"/>
    <mtx name="uni00A0" width="250" lsb="0"/>
    <mtx name="uniEFFD" width="300" lsb="0"/>
    <mtx name="uniEFFE" width="300" lsb="0"/>
    <mtx name="uniEFFF" width="100" lsb="0"/>
  </hmtx>

  <cmap>
    <tableVersion version="0"/>
    <cmap_format_4 platformID="0" platEncID="3" language="0">
      <map code="0x20" name="space"/><!-- SPACE -->
      <map code="0x41" name="A"/><!-- LATIN CAPITAL LETTER A -->
      <map code="0x42" name="B"/><!-- LATIN CAPITAL LETTER B -->
      <map code="0x43" name="C"/><!-- LATIN CAPITAL LETTER C -->
      <map code="0x44" name="D"/><!-- LATIN CAPITAL LETTER D -->
      <map code="0x45" name="E"/><!-- LATIN CAPITAL LETTER E -->
      <map code="0x46" name="F"/><!-- LATIN CAPITAL LETTER F -->
      <map code="0x47" name="G"/><!-- LATIN CAPITAL LETTER G -->
      <map code="0x48" name="H"/><!-- LATIN CAPITAL LETTER H -->
      <map code="0x49" name="I"/><!-- LATIN CAPITAL LETTER I -->
      <map code="0x4a" name="J"/><!-- LATIN CAPITAL LETTER J -->
      <map code="0x4b" name="K"/><!-- LATIN CAPITAL LETTER K -->
      <map code="0x4c" name="L"/><!-- LATIN CAPITAL LETTER L -->
      <map code="0x4d" name="M"/><!-- LATIN CAPITAL LETTER M -->
      <map code="0x4e" name="N"/><!-- LATIN CAPITAL LETTER N -->
      <map code="0x4f" name="O"/><!-- LATIN CAPITAL LETTER O -->
      <map code="0x50" name="P"/><!-- LATIN CAPITAL LETTER P -->
      <map code="0x51" name="Q"/><!-- LATIN CAPITAL LETTER Q -->
      <map code="0x52" name="R"/><!-- LATIN CAPITAL LETTER R -->
      <map code="0x53" name="S"/><!-- LATIN CAPITAL LETTER S -->
      <map code="0x54" name="T"/><!-- LATIN CAPITAL LETTER T -->
      <map code="0x55" name="U"/><!-- LATIN CAPITAL LETTER U -->
      <map code="0x56" name="V"/><!-- LATIN CAPITAL LETTER V -->
      <map code="0x57" name="W"/><!-- LATIN CAPITAL LETTER W -->
      <map code="0x58" name="X"/><!-- LATIN CAPITAL LETTER X -->
      <map code="0x59" name="Y"/><!-- LATIN CAPITAL LETTER Y -->
      <map code="0x5a" name="Z"/><!-- LATIN CAPITAL LETTER Z -->
      <map code="0xa0" name="uni00A0"/><!-- NO-BREAK SPACE -->
      <map code="0xeffd" name="uniEFFD"/><!-- ???? -->
      <map code="0xeffe" name="uniEFFE"/><!-- ???? -->
      <map code="0xefff" name="uniEFFF"/><!-- ???? -->
    </cmap_format_4>
    <cmap_format_0 platformID="1" platEncID="0" language="0">
      <map code="0x0" name=".null"/>
      <map code="0x1" name=".notdef"/>
      <map code="0x2" name=".notdef"/>
      <map code="0x3" name=".notdef"/>
      <map code="0x4" name=".notdef"/>
      <map code="0x5" name=".notdef"/>
      <map code="0x6" name=".notdef"/>
      <map code="0x7" name=".notdef"/>
      <map code="0x8" name=".null"/>
      <map code="0x9" name="nonmarkingreturn"/>
      <map code="0xa" name=".notdef"/>
      <map code="0xb" name=".notdef"/>
      <map code="0xc" name=".notdef"/>
      <map code="0xd" name="nonmarkingreturn"/>
      <map code="0xe" name=".notdef"/>
      <map code="0xf" name=".notdef"/>
      <map code="0x10" name=".notdef"/>
      <map code="0x11" name=".notdef"/>
      <map code="0x12" name=".notdef"/>
      <map code="0x13" name=".notdef"/>
      <map code="0x14" name=".notdef"/>
      <map code="0x15" name=".notdef"/>
      <map code="0x16" name=".notdef"/>
      <map code="0x17" name=".notdef"/>
      <map code="0x18" name=".notdef"/>
      <map code="0x19" name=".notdef"/>
      <map code="0x1a" name=".notdef"/>
      <map code="0x1b" name=".notdef"/>
      <map code="0x1c" name=".notdef"/>
      <map code="0x1d" name=".null"/>
      <map code="0x1e" name=".notdef"/>
      <map code="0x1f" name=".notdef"/>
      <map code="0x20" name="space"/>
      <map code="0x21" name=".notdef"/>
      <map code="0x22" name=".notdef"/>
      <map code="0x23" name=".notdef"/>
      <map code="0x24" name=".notdef"/>
      <map code="0x25" name=".notdef"/>
      <map code="0x26" name=".notdef"/>
      <map code="0x27" name=".notdef"/>
      <map code="0x28" name=".notdef"/>
      <map code="0x29" name=".notdef"/>
      <map code="0x2a" name=".notdef"/>
      <map code="0x2b" name=".notdef"/>
      <map code="0x2c" name=".notdef"/>
      <map code="0x2d" name=".notdef"/>
      <map code="0x2e" name=".notdef"/>
      <map code="0x2f" name=".notdef"/>
      <map code="0x30" name=".notdef"/>
      <map code="0x31" name=".notdef"/>
      <map code="0x32" name=".notdef"/>
      <map code="0x33" name=".notdef"/>
      <map code="0x34" name=".notdef"/>
      <map code="0x35" name=".notdef"/>
      <map code="0x36" name=".notdef"/>
      <map code="0x37" name=".notdef"/>
      <map code="0x38" name=".notdef"/>
      <map code="0x39" name=".notdef"/>
      <map code="0x3a" name=".notdef"/>
      <map code="0x3b" name=".notdef"/>
      <map code="0x3c" name=".notdef"/>
      <map code="0x3d" name=".notdef"/>
      <map code="0x3e" name=".notdef"/>
      <map code="0x3f" name=".notdef"/>
      <map code="0x40" name=".notdef"/>
      <map code="0x41" name="A"/>
      <map code="0x42" name="B"/>
      <map code="0x43" name="C"/>
      <map code="0x44" name="D"/>
      <map code="0x45" name="E"/>
      <map code="0x46" name="F"/>
      <map code="0x47" name="G"/>
      <map code="0x48" name="H"/>
      <map code="0x49" name="I"/>
      <map code="0x4a" name="J"/>
      <map code="0x4b" name="K"/>
      <map code="0x4c" name="L"/>
      <map code="0x4d" name="M"/>
      <map code="0x4e" name="N"/>
      <map code="0x4f" name="O"/>
      <map code="0x50" name="P"/>
      <map code="0x51" name="Q"/>
      <map code="0x52" name="R"/>
      <map code="0x53" name="S"/>
      <map code="0x54" name="T"/>
      <map code="0x55" name="U"/>
      <map code="0x56" name="V"/>
      <map code="0x57" name="W"/>
      <map code="0x58" name="X"/>
      <map code="0x59" name="Y"/>
      <map code="0x5a" name="Z"/>
      <map code="0x5b" name=".notdef"/>
      <map code="0x5c" name=".notdef"/>
      <map code="0x5d" name=".notdef"/>
      <map code="0x5e" name=".notdef"/>
      <map code="0x5f" name=".notdef"/>
      <map code="0x60" name=".notdef"/>
      <map code="0x61" name=".notdef"/>
      <map code="0x62" name=".notdef"/>
      <map code="0x63" name=".notdef"/>
      <map code="0x64" name=".notdef"/>
      <map code="0x65" name=".notdef"/>
      <map code="0x66" name=".notdef"/>
      <map code="0x67" name=".notdef"/>
      <map code="0x68" name=".notdef"/>
      <map code="0x69" name=".notdef"/>
      <map code="0x6a" name=".notdef"/>
      <map code="0x6b" name=".notdef"/>
      <map code="0x6c" name=".notdef"/>
      <map code="0x6d" name=".notdef"/>
      <map code="0x6e" name=".notdef"/>
      <map code="0x6f" name=".notdef"/>
      <map code="0x70" name=".notdef"/>
      <map code="0x71" name=".notdef"/>
      <map code="0x72" name=".notdef"/>
      <map code="0x73" name=".notdef"/>
      <map code="0x74" name=".notdef"/>
      <map code="0x75" name=".notdef"/>
      <map code="0x76" name=".notdef"/>
      <map code="0x77" name=".notdef"/>
      <map code="0x78" name=".notdef"/>
      <map code="0x79" name=".notdef"/>
      <map code="0x7a" name=".notdef"/>
      <map code="0x7b" name=".notdef"/>
      <map code="0x7c" name=".notdef"/>
      <map code="0x7d" name=".notdef"/>
      <map code="0x7e" name=".notdef"/>
      <map code="0x7f" name=".notdef"/>
      <map code="0x80" name=".notdef"/>
      <map code="0x81" name=".notdef"/>
      <map code="0x82" name=".notdef"/>
      <map code="0x83" name=".notdef"/>
      <map code="0x84" name=".notdef"/>
      <map code="0x85" name=".notdef"/>
      <map code="0x86" name=".notdef"/>
      <map code="0x87" name=".notdef"/>
      <map code="0x88" name=".notdef"/>
      <map code="0x89" name=".notdef"/>
      <map code="0x8a" name=".notdef"/>
      <map code="0x8b" name=".notdef"/>
      <map code="0x8c" name=".notdef"/>
      <map code="0x8d" name=".notdef"/>
      <map code="0x8e" name=".notdef"/>
      <map code="0x8f" name=".notdef"/>
      <map code="0x90" name=".notdef"/>
      <map code="0x91" name=".notdef"/>
      <map code="0x92" name=".notdef"/>
      <map code="0x93" name=".notdef"/>
      <map code="0x94" name=".notdef"/>
      <map code="0x95" name=".notdef"/>
      <map code="0x96" name=".notdef"/>
      <map code="0x97" name=".notdef"/>
      <map code="0x98" name=".notdef"/>
      <map code="0x99" name=".notdef"/>
      <map code="0x9a" name=".notdef"/>
      <map code="0x9b" name=".notdef"/>
      <map code="0x9c" name=".notdef"/>
      <map code="0x9d" name=".notdef"/>
      <map code="0x9e" name=".notdef"/>
      <map code="0x9f" name=".notdef"/>
      <map code="0xa0" name=".notdef"/>
      <map code="0xa1" name=".notdef"/>
      <map code="0xa2" name=".notdef"/>
      <map code="0xa3" name=".notdef"/>
      <map code="0xa4" name=".notdef"/>
      <map code="0xa5" name=".notdef"/>
      <map code="0xa6" name=".notdef"/>
      <map code="0xa7" name=".notdef"/>
      <map code="0xa8" name=".notdef"/>
      <map code="0xa9" name=".notdef"/>
      <map code="0xaa" name=".notdef"/>
      <map code="0xab" name=".notdef"/>
      <map code="0xac" name=".notdef"/>
      <map code="0xad" name=".notdef"/>
      <map code="0xae" name=".notdef"/>
      <map code="0xaf" name=".notdef"/>
      <map code="0xb0" name=".notdef"/>
      <map code="0xb1" name=".notdef"/>
      <map code="0xb2" name=".notdef"/>
      <map code="0xb3" name=".notdef"/>
      <map code="0xb4" name=".notdef"/>
      <map code="0xb5" name=".notdef"/>
      <map code="0xb6" name=".notdef"/>
      <map code="0xb7" name=".notdef"/>
      <map code="0xb8" name=".notdef"/>
      <map code="0xb9" name=".notdef"/>
      <map code="0xba" name=".notdef"/>
      <map code="0xbb" name=".notdef"/>
      <map code="0xbc" name=".notdef"/>
      <map code="0xbd" name=".notdef"/>
      <map code="0xbe" name=".notdef"/>
      <map code="0xbf" name=".notdef"/>
      <map code="0xc0" name=".notdef"/>
      <map code="0xc1" name=".notdef"/>
      <map code="0xc2" name=".notdef"/>
      <map code="0xc3" name=".notdef"/>
      <map code="0xc4" name=".notdef"/>
      <map code="0xc5" name=".notdef"/>
      <map code="0xc6" name=".notdef"/>
      <map code="0xc7" name=".notdef"/>
      <map code="0xc8" name=".notdef"/>
      <map code="0xc9" name=".notdef"/>
      <map code="0xca" name="uni00A0"/>
      <map code="0xcb" name=".notdef"/>
      <map code="0xcc" name=".notdef"/>
      <map code="0xcd" name=".notdef"/>
      <map code="0xce" name=".notdef"/>
      <map code="0xcf" name=".notdef"/>
      <map code="0xd0" name=".notdef"/>
      <map code="0xd1" name=".notdef"/>
      <map code="0xd2" name=".notdef"/>
      <map code="0xd3" name=".notdef"/>
      <map code="0xd4" name=".notdef"/>
      <map code="0xd5" name=".notdef"/>
      <map code="0xd6" name=".notdef"/>
      <map code="0xd7" name=".notdef"/>
      <map code="0xd8" name=".notdef"/>
      <map code="0xd9" name=".notdef"/>
      <map code="0xda" name=".notdef"/>
      <map code="0xdb" name=".notdef"/>
      <map code="0xdc" name=".notdef"/>
      <map code="0xdd" name=".notdef"/>
      <map code="0xde" name=".notdef"/>
      <map code="0xdf" name=".notdef"/>
      <map code="0xe0" name=".notdef"/>
      <map code="0xe1" name=".notdef"/>
      <map code="0xe2" name=".notdef"/>
      <map code="0xe3" name=".notdef"/>
      <map code="0xe4" name=".notdef"/>
      <map code="0xe5" name=".notdef"/>
      <map code="0xe6" name=".notdef"/>
      <map code="0xe7" name=".notdef"/>
      <map code="0xe8" name=".notdef"/>
      <map code="0xe9" name=".notdef"/>
      <map code="0xea" name=".notdef"/>
      <map code="0xeb" name=".notdef"/>
      <map code="0xec" name=".notdef"/>
      <map code="0xed" name=".notdef"/>
      <map code="0xee" name=".notdef"/>
      <map code="0xef" name=".notdef"/>
      <map code="0xf0" name=".notdef"/>
      <map code="0xf1" name=".notdef"/>
      <map code="0xf2" name=".notdef"/>
      <map code="0xf3" name=".notdef"/>
      <map code="0xf4" name=".notdef"/>
      <map code="0xf5" name=".notdef"/>
      <map code="0xf6" name=".notdef"/>
      <map code="0xf7" name=".notdef"/>
      <map code="0xf8" name=".notdef"/>
      <map code="0xf9" name=".notdef"/>
      <map code="0xfa" name=".notdef"/>
      <map code="0xfb" name=".notdef"/>
      <map code="0xfc" name=".notdef"/>
      <map code="0xfd" name=".notdef"/>
      <map code="0xfe" name=".notdef"/>
      <map code="0xff" name=".notdef"/>
    </cmap_format_0>
    <cmap_format_4 platformID="3" platEncID="1" language="0">
      <map code="0x20" name="space"/><!-- SPACE -->
      <map code="0x41" name="A"/><!-- LATIN CAPITAL LETTER A -->
      <map code="0x42" name="B"/><!-- LATIN CAPITAL LETTER B -->
      <map code="0x43" name="C"/><!-- LATIN CAPITAL LETTER C -->
      <map code="0x44" name="D"/><!-- LATIN CAPITAL LETTER D -->
      <map code="0x45" name="E"/><!-- LATIN CAPITAL LETTER E -->
      <map code="0x46" name="F"/><!-- LATIN CAPITAL LETTER F -->
      <map code="0x47" name="G"/><!-- LATIN CAPITAL LETTER G -->
      <map code="0x48" name="H"/><!-- LATIN CAPITAL LETTER H -->
      <map code="0x49" name="I"/><!-- LATIN CAPITAL LETTER I -->
      <map code="0x4a" name="J"/><!-- LATIN CAPITAL LETTER J -->
      <map code="0x4b" name="K"/><!-- LATIN CAPITAL LETTER K -->
      <map code="0x4c" name="L"/><!-- LATIN CAPITAL LETTER L -->
      <map code="0x4d" name="M"/><!-- LATIN CAPITAL LETTER M -->
      <map code="0x4e" name="N"/><!-- LATIN CAPITAL LETTER N -->
      <map code="0x4f" name="O"/><!-- LATIN CAPITAL LETTER O -->
      <map code="0x50" name="P"/><!-- LATIN CAPITAL LETTER P -->
      <map code="0x51" name="Q"/><!-- LATIN CAPITAL LETTER Q -->
      <map code="0x52" name="R"/><!-- LATIN CAPITAL LETTER R -->
      <map code="0x53" name="S"/><!-- LATIN CAPITAL LETTER S -->
      <map code="0x54" name="T"/><!-- LATIN CAPITAL LETTER T -->
      <map code="0x55" name="U"/><!-- LATIN CAPITAL LETTER U -->
      <map code="0x56" name="V"/><!-- LATIN CAPITAL LETTER V -->
      <map code="0x57" name="W"/><!-- LATIN CAPITAL LETTER W -->
      <map code="0x58" name="X"/><!-- LATIN CAPITAL LETTER X -->
      <map code="0x59" name="Y"/><!-- LATIN CAPITAL LETTER Y -->
      <map code="0x5a" name="Z"/><!-- LATIN CAPITAL LETTER Z -->
      <map code="0xa0" name="uni00A0"/><!-- NO-BREAK SPACE -->
      <map code="0xeffd" name="uniEFFD"/><!-- ???? -->
      <map code="0xeffe" name="uniEFFE"/><!-- ???? -->
      <map code="0xefff" name="uniEFFF"/><!-- ???? -->
    </cmap_format_4>
  </cmap>

  <fpgm>
    <assembly>
      PUSHB[ ]	/* 1 value pushed */
      0
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      NEQ[ ]	/* NotEqual */
      IF[ ]	/* If */
      RCVT[ ]	/* ReadCVT */
      EIF[ ]	/* EndIf */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      MPPEM[ ]	/* MeasurePixelPerEm */
      PUSHW[ ]	/* 1 value pushed */
      14
      LTEQ[ ]	/* LessThenOrEqual */
      MPPEM[ ]	/* MeasurePixelPerEm */
      PUSHB[ ]	/* 1 value pushed */
      6
      GTEQ[ ]	/* GreaterThanOrEqual */
      AND[ ]	/* LogicalAnd */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      52
      ELSE[ ]	/* Else */
      PUSHB[ ]	/* 1 value pushed */
      40
      EIF[ ]	/* EndIf */
      ADD[ ]	/* Add */
      FLOOR[ ]	/* Floor */
      DUP[ ]	/* DuplicateTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      NEQ[ ]	/* NotEqual */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      SUB[ ]	/* Subtract */
      PUSHW[ ]	/* 2 values pushed */
      2048 2048
      MUL[ ]	/* Multiply */
      MUL[ ]	/* Multiply */
      SWAP[ ]	/* SwapTopStack */
      DIV[ ]	/* Divide */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 1 value pushed */
      0
      RS[ ]	/* ReadStore */
      SWAP[ ]	/* SwapTopStack */
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSHB[ ]	/* 3 values pushed */
      0 1 0
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      WS[ ]	/* WriteStore */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      1
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      32
      ADD[ ]	/* Add */
      FLOOR[ ]	/* Floor */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      2
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      ABS[ ]	/* Absolute */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      192
      LT[ ]	/* LessThan */
      PUSHB[ ]	/* 1 value pushed */
      4
      MINDEX[ ]	/* MoveXToTopStack */
      AND[ ]	/* LogicalAnd */
      PUSHB[ ]	/* 3 values pushed */
      40 1 10
      RS[ ]	/* ReadStore */
      RCVT[ ]	/* ReadCVT */
      MUL[ ]	/* Multiply */
      RCVT[ ]	/* ReadCVT */
      GT[ ]	/* GreaterThan */
      OR[ ]	/* LogicalOr */
      IF[ ]	/* If */
      POP[ ]	/* PopTopStack */
      SWAP[ ]	/* SwapTopStack */
      POP[ ]	/* PopTopStack */
      ELSE[ ]	/* Else */
      ROLL[ ]	/* RollTopThreeStack */
      IF[ ]	/* If */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      80
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      POP[ ]	/* PopTopStack */
      PUSHB[ ]	/* 1 value pushed */
      64
      EIF[ ]	/* EndIf */
      ELSE[ ]	/* Else */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      56
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      POP[ ]	/* PopTopStack */
      PUSHB[ ]	/* 1 value pushed */
      56
      EIF[ ]	/* EndIf */
      EIF[ ]	/* EndIf */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 2 values pushed */
      1 10
      RS[ ]	/* ReadStore */
      RCVT[ ]	/* ReadCVT */
      MUL[ ]	/* Multiply */
      RCVT[ ]	/* ReadCVT */
      SUB[ ]	/* Subtract */
      ABS[ ]	/* Absolute */
      PUSHB[ ]	/* 1 value pushed */
      40
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      POP[ ]	/* PopTopStack */
      PUSHB[ ]	/* 2 values pushed */
      1 10
      RS[ ]	/* ReadStore */
      RCVT[ ]	/* ReadCVT */
      MUL[ ]	/* Multiply */
      RCVT[ ]	/* ReadCVT */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      48
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      POP[ ]	/* PopTopStack */
      PUSHB[ ]	/* 1 value pushed */
      48
      EIF[ ]	/* EndIf */
      ELSE[ ]	/* Else */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      192
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      DUP[ ]	/* DuplicateTopStack */
      FLOOR[ ]	/* Floor */
      DUP[ ]	/* DuplicateTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      ROLL[ ]	/* RollTopThreeStack */
      SUB[ ]	/* Subtract */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      10
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      ADD[ ]	/* Add */
      ELSE[ ]	/* Else */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      32
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      POP[ ]	/* PopTopStack */
      PUSHB[ ]	/* 1 value pushed */
      10
      ADD[ ]	/* Add */
      ELSE[ ]	/* Else */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      54
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      POP[ ]	/* PopTopStack */
      PUSHB[ ]	/* 1 value pushed */
      54
      ADD[ ]	/* Add */
      ELSE[ ]	/* Else */
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      EIF[ ]	/* EndIf */
      EIF[ ]	/* EndIf */
      ELSE[ ]	/* Else */
      PUSHB[ ]	/* 1 value pushed */
      1
      CALL[ ]	/* CallFunction */
      EIF[ ]	/* EndIf */
      EIF[ ]	/* EndIf */
      SWAP[ ]	/* SwapTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      NEG[ ]	/* Negate */
      EIF[ ]	/* EndIf */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      3
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      RCVT[ ]	/* ReadCVT */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      SUB[ ]	/* Subtract */
      ABS[ ]	/* Absolute */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      5
      RS[ ]	/* ReadStore */
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      5
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 1 value pushed */
      6
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 1 value pushed */
      1
      ADD[ ]	/* Add */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      4
      FDEF[ ]	/* FunctionDefinition */
      SWAP[ ]	/* SwapTopStack */
      POP[ ]	/* PopTopStack */
      SWAP[ ]	/* SwapTopStack */
      POP[ ]	/* PopTopStack */
      DUP[ ]	/* DuplicateTopStack */
      ABS[ ]	/* Absolute */
      PUSHB[ ]	/* 2 values pushed */
      5 98
      WS[ ]	/* WriteStore */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      6
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 2 values pushed */
      1 10
      RS[ ]	/* ReadStore */
      RCVT[ ]	/* ReadCVT */
      MUL[ ]	/* Multiply */
      PUSHB[ ]	/* 2 values pushed */
      1 10
      RS[ ]	/* ReadStore */
      PUSHB[ ]	/* 1 value pushed */
      1
      ADD[ ]	/* Add */
      RCVT[ ]	/* ReadCVT */
      MUL[ ]	/* Multiply */
      PUSHB[ ]	/* 1 value pushed */
      3
      LOOPCALL[ ]	/* LoopAndCallFunction */
      POP[ ]	/* PopTopStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      6
      RS[ ]	/* ReadStore */
      DUP[ ]	/* DuplicateTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      DUP[ ]	/* DuplicateTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      PUSHB[ ]	/* 1 value pushed */
      1
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 2 values pushed */
      48 5
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      4
      MINDEX[ ]	/* MoveXToTopStack */
      LTEQ[ ]	/* LessThenOrEqual */
      IF[ ]	/* If */
      ADD[ ]	/* Add */
      LT[ ]	/* LessThan */
      ELSE[ ]	/* Else */
      SUB[ ]	/* Subtract */
      GT[ ]	/* GreaterThan */
      EIF[ ]	/* EndIf */
      IF[ ]	/* If */
      SWAP[ ]	/* SwapTopStack */
      EIF[ ]	/* EndIf */
      POP[ ]	/* PopTopStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      64
      GTEQ[ ]	/* GreaterThanOrEqual */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      1
      CALL[ ]	/* CallFunction */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      PUSHB[ ]	/* 1 value pushed */
      64
      EIF[ ]	/* EndIf */
      SWAP[ ]	/* SwapTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      NEG[ ]	/* Negate */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      5
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      7
      RS[ ]	/* ReadStore */
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 3 values pushed */
      0 2 0
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      WS[ ]	/* WriteStore */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      6
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      7
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 1 value pushed */
      2
      DIV[ ]	/* Divide */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      PUSHB[ ]	/* 1 value pushed */
      1
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 1 value pushed */
      5
      LOOPCALL[ ]	/* LoopAndCallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      7
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      RCVT[ ]	/* ReadCVT */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      11
      RS[ ]	/* ReadStore */
      MUL[ ]	/* Multiply */
      PUSHW[ ]	/* 1 value pushed */
      1024
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      ADD[ ]	/* Add */
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSHB[ ]	/* 1 value pushed */
      1
      ADD[ ]	/* Add */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      8
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      7 11 0
      RS[ ]	/* ReadStore */
      RCVT[ ]	/* ReadCVT */
      WS[ ]	/* WriteStore */
      LOOPCALL[ ]	/* LoopAndCallFunction */
      POP[ ]	/* PopTopStack */
      PUSHB[ ]	/* 3 values pushed */
      0 1 0
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      WS[ ]	/* WriteStore */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      9
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      0
      RS[ ]	/* ReadStore */
      SWAP[ ]	/* SwapTopStack */
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSHB[ ]	/* 3 values pushed */
      0 1 0
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      WS[ ]	/* WriteStore */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      10
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      RCVT[ ]	/* ReadCVT */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      1
      CALL[ ]	/* CallFunction */
      SWAP[ ]	/* SwapTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      RS[ ]	/* ReadStore */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      ADD[ ]	/* Add */
      DUP[ ]	/* DuplicateTopStack */
      RCVT[ ]	/* ReadCVT */
      ROLL[ ]	/* RollTopThreeStack */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      DUP[ ]	/* DuplicateTopStack */
      ABS[ ]	/* Absolute */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      32
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      POP[ ]	/* PopTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      ELSE[ ]	/* Else */
      PUSHB[ ]	/* 1 value pushed */
      48
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      32
      ELSE[ ]	/* Else */
      PUSHB[ ]	/* 1 value pushed */
      64
      EIF[ ]	/* EndIf */
      EIF[ ]	/* EndIf */
      SWAP[ ]	/* SwapTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      NEG[ ]	/* Negate */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 1 value pushed */
      3
      CINDEX[ ]	/* CopyXToTopStack */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      WCVTP[ ]	/* WriteCVTInPixels */
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSHB[ ]	/* 1 value pushed */
      1
      ADD[ ]	/* Add */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      11
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      RCVT[ ]	/* ReadCVT */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      1
      CALL[ ]	/* CallFunction */
      SWAP[ ]	/* SwapTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      RS[ ]	/* ReadStore */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      ADD[ ]	/* Add */
      DUP[ ]	/* DuplicateTopStack */
      RCVT[ ]	/* ReadCVT */
      ROLL[ ]	/* RollTopThreeStack */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      DUP[ ]	/* DuplicateTopStack */
      ABS[ ]	/* Absolute */
      PUSHB[ ]	/* 1 value pushed */
      36
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      0
      ELSE[ ]	/* Else */
      PUSHB[ ]	/* 1 value pushed */
      64
      EIF[ ]	/* EndIf */
      SWAP[ ]	/* SwapTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      NEG[ ]	/* Negate */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 1 value pushed */
      3
      CINDEX[ ]	/* CopyXToTopStack */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      WCVTP[ ]	/* WriteCVTInPixels */
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSHB[ ]	/* 1 value pushed */
      1
      ADD[ ]	/* Add */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      12
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 3 values pushed */
      11 10 3
      RCVT[ ]	/* ReadCVT */
      IF[ ]	/* If */
      POP[ ]	/* PopTopStack */
      ELSE[ ]	/* Else */
      SWAP[ ]	/* SwapTopStack */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      LOOPCALL[ ]	/* LoopAndCallFunction */
      POP[ ]	/* PopTopStack */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      13
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      2 2
      RCVT[ ]	/* ReadCVT */
      PUSHB[ ]	/* 1 value pushed */
      100
      SUB[ ]	/* Subtract */
      WCVTP[ ]	/* WriteCVTInPixels */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      14
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      1
      ADD[ ]	/* Add */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      12
      RS[ ]	/* ReadStore */
      MD[1]	/* MeasureDistance */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      12
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 1 value pushed */
      13
      RS[ ]	/* ReadStore */
      MD[1]	/* MeasureDistance */
      PUSHB[ ]	/* 1 value pushed */
      0
      GT[ ]	/* GreaterThan */
      IF[ ]	/* If */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      13
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      15
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      16
      DIV[ ]	/* Divide */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      DUP[ ]	/* DuplicateTopStack */
      PUSHW[ ]	/* 1 value pushed */
      1024
      MUL[ ]	/* Multiply */
      ROLL[ ]	/* RollTopThreeStack */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 1 value pushed */
      14
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      DUP[ ]	/* DuplicateTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      ADD[ ]	/* Add */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      14
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      SWAP[ ]	/* SwapTopStack */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      16
      FDEF[ ]	/* FunctionDefinition */
      MPPEM[ ]	/* MeasurePixelPerEm */
      EQ[ ]	/* Equal */
      IF[ ]	/* If */
      PUSHB[ ]	/* 2 values pushed */
      4 100
      WCVTP[ ]	/* WriteCVTInPixels */
      EIF[ ]	/* EndIf */
      DEPTH[ ]	/* GetDepthStack */
      PUSHB[ ]	/* 1 value pushed */
      13
      NEG[ ]	/* Negate */
      SWAP[ ]	/* SwapTopStack */
      JROT[ ]	/* JumpRelativeOnTrue */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      17
      FDEF[ ]	/* FunctionDefinition */
      MPPEM[ ]	/* MeasurePixelPerEm */
      LTEQ[ ]	/* LessThenOrEqual */
      IF[ ]	/* If */
      MPPEM[ ]	/* MeasurePixelPerEm */
      GTEQ[ ]	/* GreaterThanOrEqual */
      IF[ ]	/* If */
      PUSHB[ ]	/* 2 values pushed */
      4 100
      WCVTP[ ]	/* WriteCVTInPixels */
      EIF[ ]	/* EndIf */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      DEPTH[ ]	/* GetDepthStack */
      PUSHB[ ]	/* 1 value pushed */
      19
      NEG[ ]	/* Negate */
      SWAP[ ]	/* SwapTopStack */
      JROT[ ]	/* JumpRelativeOnTrue */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      18
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      0 15
      RS[ ]	/* ReadStore */
      NEQ[ ]	/* NotEqual */
      IF[ ]	/* If */
      PUSHB[ ]	/* 2 values pushed */
      15 15
      RS[ ]	/* ReadStore */
      PUSHB[ ]	/* 1 value pushed */
      1
      SUB[ ]	/* Subtract */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 1 value pushed */
      15
      CALL[ ]	/* CallFunction */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 1 value pushed */
      0
      RS[ ]	/* ReadStore */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 2 values pushed */
      12 2
      CINDEX[ ]	/* CopyXToTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 2 values pushed */
      13 2
      CINDEX[ ]	/* CopyXToTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 1 value pushed */
      1
      SZPS[ ]	/* SetZonePointerS */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      3
      CINDEX[ ]	/* CopyXToTopStack */
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 2 values pushed */
      1 0
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      WS[ ]	/* WriteStore */
      ROLL[ ]	/* RollTopThreeStack */
      ROLL[ ]	/* RollTopThreeStack */
      DUP[ ]	/* DuplicateTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 1 value pushed */
      14
      LOOPCALL[ ]	/* LoopAndCallFunction */
      POP[ ]	/* PopTopStack */
      SWAP[ ]	/* SwapTopStack */
      PUSHB[ ]	/* 1 value pushed */
      1
      SUB[ ]	/* Subtract */
      DUP[ ]	/* DuplicateTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 1 value pushed */
      14
      LOOPCALL[ ]	/* LoopAndCallFunction */
      POP[ ]	/* PopTopStack */
      ELSE[ ]	/* Else */
      PUSHB[ ]	/* 2 values pushed */
      1 0
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 1 value pushed */
      14
      LOOPCALL[ ]	/* LoopAndCallFunction */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 1 value pushed */
      12
      RS[ ]	/* ReadStore */
      GC[1]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      13
      RS[ ]	/* ReadStore */
      GC[1]	/* GetCoordOnPVector */
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 1 value pushed */
      2
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      11
      RS[ ]	/* ReadStore */
      MUL[ ]	/* Multiply */
      PUSHW[ ]	/* 1 value pushed */
      1024
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 2 values pushed */
      0 0
      SZP0[ ]	/* SetZonePointer0 */
      SWAP[ ]	/* SwapTopStack */
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSHB[ ]	/* 1 value pushed */
      1
      RS[ ]	/* ReadStore */
      PUSHB[ ]	/* 1 value pushed */
      0
      MIAP[0]	/* MoveIndirectAbsPt */
      PUSHB[ ]	/* 3 values pushed */
      1 1 1
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      WS[ ]	/* WriteStore */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      19
      FDEF[ ]	/* FunctionDefinition */
      SVTCA[0]	/* SetFPVectorToAxis */
      PUSHB[ ]	/* 2 values pushed */
      0 2
      RCVT[ ]	/* ReadCVT */
      EQ[ ]	/* Equal */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      15
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      DUP[ ]	/* DuplicateTopStack */
      RCVT[ ]	/* ReadCVT */
      PUSHB[ ]	/* 1 value pushed */
      11
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 1 value pushed */
      10
      SWAP[ ]	/* SwapTopStack */
      PUSHB[ ]	/* 1 value pushed */
      1
      ADD[ ]	/* Add */
      WS[ ]	/* WriteStore */
      DUP[ ]	/* DuplicateTopStack */
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 1 value pushed */
      1
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 6 values pushed */
      16 16 1 0 14 0
      WS[ ]	/* WriteStore */
      WS[ ]	/* WriteStore */
      ROLL[ ]	/* RollTopThreeStack */
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 2 values pushed */
      18 6
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      117
      CALL[ ]	/* CallFunction */
      ELSE[ ]	/* Else */
      CLEAR[ ]	/* ClearStack */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      20
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      0 19
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      21
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      1 19
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      22
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      2 19
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      23
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      3 19
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      24
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      4 19
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      25
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      5 19
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      26
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      6 19
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      27
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      7 19
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      28
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      8 19
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      29
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      9 19
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      41
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSHB[ ]	/* 1 value pushed */
      1
      DELTAP1[ ]	/* DeltaExceptionP1 */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      42
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSHB[ ]	/* 1 value pushed */
      1
      DELTAP2[ ]	/* DeltaExceptionP2 */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      43
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSHB[ ]	/* 1 value pushed */
      1
      DELTAP3[ ]	/* DeltaExceptionP3 */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      30
      FDEF[ ]	/* FunctionDefinition */
      SVTCA[0]	/* SetFPVectorToAxis */
      PUSHB[ ]	/* 1 value pushed */
      13
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 2 values pushed */
      0 2
      RCVT[ ]	/* ReadCVT */
      EQ[ ]	/* Equal */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      15
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      DUP[ ]	/* DuplicateTopStack */
      RCVT[ ]	/* ReadCVT */
      PUSHB[ ]	/* 1 value pushed */
      11
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 1 value pushed */
      10
      SWAP[ ]	/* SwapTopStack */
      PUSHB[ ]	/* 1 value pushed */
      1
      ADD[ ]	/* Add */
      WS[ ]	/* WriteStore */
      DUP[ ]	/* DuplicateTopStack */
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 1 value pushed */
      1
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 6 values pushed */
      16 16 1 0 14 0
      WS[ ]	/* WriteStore */
      WS[ ]	/* WriteStore */
      ROLL[ ]	/* RollTopThreeStack */
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 2 values pushed */
      18 6
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      117
      CALL[ ]	/* CallFunction */
      ELSE[ ]	/* Else */
      CLEAR[ ]	/* ClearStack */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      31
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      0 30
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      32
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      1 30
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      33
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      2 30
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      34
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      3 30
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      35
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      4 30
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      36
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      5 30
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      37
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      6 30
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      38
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      7 30
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      39
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      8 30
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      40
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      9 30
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      44
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      PUSHB[ ]	/* 1 value pushed */
      1
      ADD[ ]	/* Add */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      45
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 1 value pushed */
      16
      ADD[ ]	/* Add */
      DUP[ ]	/* DuplicateTopStack */
      RS[ ]	/* ReadStore */
      SWAP[ ]	/* SwapTopStack */
      PUSHB[ ]	/* 1 value pushed */
      1
      ADD[ ]	/* Add */
      RS[ ]	/* ReadStore */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 1 value pushed */
      1
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 1 value pushed */
      44
      LOOPCALL[ ]	/* LoopAndCallFunction */
      POP[ ]	/* PopTopStack */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      46
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      45
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      45
      LOOPCALL[ ]	/* LoopAndCallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      47
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      GC[1]	/* GetCoordOnPVector */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      11
      RS[ ]	/* ReadStore */
      MUL[ ]	/* Multiply */
      PUSHW[ ]	/* 1 value pushed */
      1024
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      ADD[ ]	/* Add */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      SHPIX[ ]	/* ShiftZoneByPixel */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      NEQ[ ]	/* NotEqual */
      IF[ ]	/* If */
      DUP[ ]	/* DuplicateTopStack */
      GC[1]	/* GetCoordOnPVector */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      11
      RS[ ]	/* ReadStore */
      MUL[ ]	/* Multiply */
      PUSHW[ ]	/* 1 value pushed */
      1024
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      ADD[ ]	/* Add */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      SHPIX[ ]	/* ShiftZoneByPixel */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      48
      FDEF[ ]	/* FunctionDefinition */
      SVTCA[0]	/* SetFPVectorToAxis */
      PUSHB[ ]	/* 2 values pushed */
      0 2
      RCVT[ ]	/* ReadCVT */
      EQ[ ]	/* Equal */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      1
      SZPS[ ]	/* SetZonePointerS */
      PUSHB[ ]	/* 1 value pushed */
      47
      LOOPCALL[ ]	/* LoopAndCallFunction */
      PUSHB[ ]	/* 2 values pushed */
      5 1
      SZP2[ ]	/* SetZonePointer2 */
      RCVT[ ]	/* ReadCVT */
      IF[ ]	/* If */
      IUP[0]	/* InterpolateUntPts */
      EIF[ ]	/* EndIf */
      ELSE[ ]	/* Else */
      CLEAR[ ]	/* ClearStack */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      49
      FDEF[ ]	/* FunctionDefinition */
      SVTCA[0]	/* SetFPVectorToAxis */
      PUSHB[ ]	/* 1 value pushed */
      13
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 2 values pushed */
      0 2
      RCVT[ ]	/* ReadCVT */
      EQ[ ]	/* Equal */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      1
      SZPS[ ]	/* SetZonePointerS */
      PUSHB[ ]	/* 1 value pushed */
      47
      LOOPCALL[ ]	/* LoopAndCallFunction */
      PUSHB[ ]	/* 2 values pushed */
      5 1
      SZP2[ ]	/* SetZonePointer2 */
      RCVT[ ]	/* ReadCVT */
      IF[ ]	/* If */
      IUP[0]	/* InterpolateUntPts */
      EIF[ ]	/* EndIf */
      ELSE[ ]	/* Else */
      CLEAR[ ]	/* ClearStack */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      50
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      SHC[1]	/* ShiftContourByLastPt */
      PUSHB[ ]	/* 1 value pushed */
      1
      ADD[ ]	/* Add */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      51
      FDEF[ ]	/* FunctionDefinition */
      SVTCA[0]	/* SetFPVectorToAxis */
      PUSHB[ ]	/* 1 value pushed */
      1
      RCVT[ ]	/* ReadCVT */
      MUL[ ]	/* Multiply */
      PUSHW[ ]	/* 1 value pushed */
      1024
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      PUSHB[ ]	/* 1 value pushed */
      1
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      11
      RS[ ]	/* ReadStore */
      MUL[ ]	/* Multiply */
      PUSHW[ ]	/* 1 value pushed */
      1024
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      PUSHB[ ]	/* 1 value pushed */
      1
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      0
      SZPS[ ]	/* SetZonePointerS */
      PUSHB[ ]	/* 5 values pushed */
      0 0 0 0 0
      WCVTP[ ]	/* WriteCVTInPixels */
      MIAP[0]	/* MoveIndirectAbsPt */
      SWAP[ ]	/* SwapTopStack */
      SHPIX[ ]	/* ShiftZoneByPixel */
      PUSHB[ ]	/* 2 values pushed */
      50 1
      SZP2[ ]	/* SetZonePointer2 */
      LOOPCALL[ ]	/* LoopAndCallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      52
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      DUP[ ]	/* DuplicateTopStack */
      GC[1]	/* GetCoordOnPVector */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      11
      RS[ ]	/* ReadStore */
      MUL[ ]	/* Multiply */
      PUSHW[ ]	/* 1 value pushed */
      1024
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 1 value pushed */
      0
      RS[ ]	/* ReadStore */
      SUB[ ]	/* Subtract */
      SHPIX[ ]	/* ShiftZoneByPixel */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      53
      FDEF[ ]	/* FunctionDefinition */
      MDAP[0]	/* MoveDirectAbsPt */
      SLOOP[ ]	/* SetLoopVariable */
      ALIGNRP[ ]	/* AlignRelativePt */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      54
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      DUP[ ]	/* DuplicateTopStack */
      GC[1]	/* GetCoordOnPVector */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      11
      RS[ ]	/* ReadStore */
      MUL[ ]	/* Multiply */
      PUSHW[ ]	/* 1 value pushed */
      1024
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 1 value pushed */
      0
      RS[ ]	/* ReadStore */
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 1 value pushed */
      1
      RS[ ]	/* ReadStore */
      MUL[ ]	/* Multiply */
      SHPIX[ ]	/* ShiftZoneByPixel */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      55
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      2 0
      SZPS[ ]	/* SetZonePointerS */
      CINDEX[ ]	/* CopyXToTopStack */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      DUP[ ]	/* DuplicateTopStack */
      GC[1]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      0
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      MD[0]	/* MeasureDistance */
      ROLL[ ]	/* RollTopThreeStack */
      ROLL[ ]	/* RollTopThreeStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      DUP[ ]	/* DuplicateTopStack */
      IF[ ]	/* If */
      DIV[ ]	/* Divide */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 1 value pushed */
      1
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 3 values pushed */
      54 1 1
      SZP2[ ]	/* SetZonePointer2 */
      SZP1[ ]	/* SetZonePointer1 */
      LOOPCALL[ ]	/* LoopAndCallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      56
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      0
      SZPS[ ]	/* SetZonePointerS */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 1 value pushed */
      9
      RS[ ]	/* ReadStore */
      CALL[ ]	/* CallFunction */
      NEG[ ]	/* Negate */
      ROLL[ ]	/* RollTopThreeStack */
      MDAP[0]	/* MoveDirectAbsPt */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      ROLL[ ]	/* RollTopThreeStack */
      SHPIX[ ]	/* ShiftZoneByPixel */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      57
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      0
      SZPS[ ]	/* SetZonePointerS */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      4
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 1 value pushed */
      9
      RS[ ]	/* ReadStore */
      CALL[ ]	/* CallFunction */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      96
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      64
      LTEQ[ ]	/* LessThenOrEqual */
      IF[ ]	/* If */
      PUSHB[ ]	/* 4 values pushed */
      2 32 3 32
      ELSE[ ]	/* Else */
      PUSHB[ ]	/* 4 values pushed */
      2 38 3 26
      EIF[ ]	/* EndIf */
      WS[ ]	/* WriteStore */
      WS[ ]	/* WriteStore */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      8
      RS[ ]	/* ReadStore */
      DUP[ ]	/* DuplicateTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      SWAP[ ]	/* SwapTopStack */
      GC[0]	/* GetCoordOnPVector */
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 1 value pushed */
      4
      RS[ ]	/* ReadStore */
      PUSHB[ ]	/* 1 value pushed */
      2
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      ADD[ ]	/* Add */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      1
      CALL[ ]	/* CallFunction */
      DUP[ ]	/* DuplicateTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      ROLL[ ]	/* RollTopThreeStack */
      SUB[ ]	/* Subtract */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      2
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      ABS[ ]	/* Absolute */
      SWAP[ ]	/* SwapTopStack */
      PUSHB[ ]	/* 1 value pushed */
      3
      RS[ ]	/* ReadStore */
      SUB[ ]	/* Subtract */
      ABS[ ]	/* Absolute */
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      2
      RS[ ]	/* ReadStore */
      SUB[ ]	/* Subtract */
      ELSE[ ]	/* Else */
      PUSHB[ ]	/* 1 value pushed */
      3
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 1 value pushed */
      3
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      2
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      SUB[ ]	/* Subtract */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      4
      MINDEX[ ]	/* MoveXToTopStack */
      SWAP[ ]	/* SwapTopStack */
      GC[0]	/* GetCoordOnPVector */
      SUB[ ]	/* Subtract */
      SHPIX[ ]	/* ShiftZoneByPixel */
      ELSE[ ]	/* Else */
      SWAP[ ]	/* SwapTopStack */
      PUSHB[ ]	/* 1 value pushed */
      8
      RS[ ]	/* ReadStore */
      GC[0]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      8
      RS[ ]	/* ReadStore */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      ADD[ ]	/* Add */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      4
      RS[ ]	/* ReadStore */
      PUSHB[ ]	/* 1 value pushed */
      2
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      ADD[ ]	/* Add */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      1
      CALL[ ]	/* CallFunction */
      SWAP[ ]	/* SwapTopStack */
      PUSHB[ ]	/* 1 value pushed */
      4
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 1 value pushed */
      1
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      5
      CINDEX[ ]	/* CopyXToTopStack */
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 1 value pushed */
      5
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      2
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      PUSHB[ ]	/* 1 value pushed */
      4
      MINDEX[ ]	/* MoveXToTopStack */
      SUB[ ]	/* Subtract */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      ADD[ ]	/* Add */
      ABS[ ]	/* Absolute */
      SWAP[ ]	/* SwapTopStack */
      PUSHB[ ]	/* 1 value pushed */
      3
      CINDEX[ ]	/* CopyXToTopStack */
      ADD[ ]	/* Add */
      ABS[ ]	/* Absolute */
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      POP[ ]	/* PopTopStack */
      ELSE[ ]	/* Else */
      SWAP[ ]	/* SwapTopStack */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      4
      MINDEX[ ]	/* MoveXToTopStack */
      SWAP[ ]	/* SwapTopStack */
      GC[0]	/* GetCoordOnPVector */
      SUB[ ]	/* Subtract */
      SHPIX[ ]	/* ShiftZoneByPixel */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      58
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      0
      SZPS[ ]	/* SetZonePointerS */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      5
      MINDEX[ ]	/* MoveXToTopStack */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      SWAP[ ]	/* SwapTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      SHPIX[ ]	/* ShiftZoneByPixel */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      59
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      0
      SZPS[ ]	/* SetZonePointerS */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      8
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      GC[0]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      1
      CALL[ ]	/* CallFunction */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      SHPIX[ ]	/* ShiftZoneByPixel */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      60
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      0
      SZPS[ ]	/* SetZonePointerS */
      PUSHB[ ]	/* 1 value pushed */
      3
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 1 value pushed */
      0
      EQ[ ]	/* Equal */
      IF[ ]	/* If */
      MDAP[0]	/* MoveDirectAbsPt */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      SWAP[ ]	/* SwapTopStack */
      POP[ ]	/* PopTopStack */
      ELSE[ ]	/* Else */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      5
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 1 value pushed */
      6
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      5
      CINDEX[ ]	/* CopyXToTopStack */
      MD[0]	/* MeasureDistance */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      SUB[ ]	/* Subtract */
      PUSHW[ ]	/* 2 values pushed */
      2048 2048
      MUL[ ]	/* Multiply */
      MUL[ ]	/* Multiply */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      IF[ ]	/* If */
      DIV[ ]	/* Divide */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      MUL[ ]	/* Multiply */
      PUSHW[ ]	/* 1 value pushed */
      1024
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      ADD[ ]	/* Add */
      SWAP[ ]	/* SwapTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      ROLL[ ]	/* RollTopThreeStack */
      SHPIX[ ]	/* ShiftZoneByPixel */
      SWAP[ ]	/* SwapTopStack */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      61
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      0
      SZPS[ ]	/* SetZonePointerS */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      8
      RS[ ]	/* ReadStore */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      DUP[ ]	/* DuplicateTopStack */
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 1 value pushed */
      32
      ADD[ ]	/* Add */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      2
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      ROLL[ ]	/* RollTopThreeStack */
      SHPIX[ ]	/* ShiftZoneByPixel */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      62
      FDEF[ ]	/* FunctionDefinition */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      GC[0]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      GC[0]	/* GetCoordOnPVector */
      GT[ ]	/* GreaterThan */
      IF[ ]	/* If */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      EIF[ ]	/* EndIf */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSHB[ ]	/* 2 values pushed */
      46 1
      SZP1[ ]	/* SetZonePointer1 */
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      63
      FDEF[ ]	/* FunctionDefinition */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      GC[0]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      GC[0]	/* GetCoordOnPVector */
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      EIF[ ]	/* EndIf */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSHB[ ]	/* 2 values pushed */
      46 1
      SZP1[ ]	/* SetZonePointer1 */
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      64
      FDEF[ ]	/* FunctionDefinition */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      GC[0]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      GC[0]	/* GetCoordOnPVector */
      GT[ ]	/* GreaterThan */
      IF[ ]	/* If */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      EIF[ ]	/* EndIf */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      GC[0]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      GC[0]	/* GetCoordOnPVector */
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      EIF[ ]	/* EndIf */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSHB[ ]	/* 2 values pushed */
      46 1
      SZP1[ ]	/* SetZonePointer1 */
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      65
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      56
      CALL[ ]	/* CallFunction */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      GC[0]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      GC[0]	/* GetCoordOnPVector */
      GT[ ]	/* GreaterThan */
      IF[ ]	/* If */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      EIF[ ]	/* EndIf */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSHB[ ]	/* 2 values pushed */
      46 1
      SZP1[ ]	/* SetZonePointer1 */
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      66
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      57
      CALL[ ]	/* CallFunction */
      ROLL[ ]	/* RollTopThreeStack */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      PUSHB[ ]	/* 1 value pushed */
      4
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      ROLL[ ]	/* RollTopThreeStack */
      SHPIX[ ]	/* ShiftZoneByPixel */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      GC[0]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      GC[0]	/* GetCoordOnPVector */
      GT[ ]	/* GreaterThan */
      IF[ ]	/* If */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      EIF[ ]	/* EndIf */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSHB[ ]	/* 2 values pushed */
      46 1
      SZP1[ ]	/* SetZonePointer1 */
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      4
      RS[ ]	/* ReadStore */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSHB[ ]	/* 1 value pushed */
      46
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      67
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      0
      SZPS[ ]	/* SetZonePointerS */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      4
      MINDEX[ ]	/* MoveXToTopStack */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 1 value pushed */
      9
      RS[ ]	/* ReadStore */
      CALL[ ]	/* CallFunction */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      SWAP[ ]	/* SwapTopStack */
      SHPIX[ ]	/* ShiftZoneByPixel */
      PUSHB[ ]	/* 2 values pushed */
      46 1
      SZP1[ ]	/* SetZonePointer1 */
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      68
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      8 4
      CINDEX[ ]	/* CopyXToTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 1 value pushed */
      0
      SZPS[ ]	/* SetZonePointerS */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      4
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 1 value pushed */
      9
      RS[ ]	/* ReadStore */
      CALL[ ]	/* CallFunction */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      96
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      64
      LTEQ[ ]	/* LessThenOrEqual */
      IF[ ]	/* If */
      PUSHB[ ]	/* 4 values pushed */
      2 32 3 32
      ELSE[ ]	/* Else */
      PUSHB[ ]	/* 4 values pushed */
      2 38 3 26
      EIF[ ]	/* EndIf */
      WS[ ]	/* WriteStore */
      WS[ ]	/* WriteStore */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      GC[1]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      4
      RS[ ]	/* ReadStore */
      PUSHB[ ]	/* 1 value pushed */
      2
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      ADD[ ]	/* Add */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      1
      CALL[ ]	/* CallFunction */
      DUP[ ]	/* DuplicateTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      ROLL[ ]	/* RollTopThreeStack */
      SUB[ ]	/* Subtract */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      2
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      ABS[ ]	/* Absolute */
      SWAP[ ]	/* SwapTopStack */
      PUSHB[ ]	/* 1 value pushed */
      3
      RS[ ]	/* ReadStore */
      SUB[ ]	/* Subtract */
      ABS[ ]	/* Absolute */
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      2
      RS[ ]	/* ReadStore */
      SUB[ ]	/* Subtract */
      ELSE[ ]	/* Else */
      PUSHB[ ]	/* 1 value pushed */
      3
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 1 value pushed */
      3
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      2
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      ADD[ ]	/* Add */
      EIF[ ]	/* EndIf */
      FLOOR[ ]	/* Floor */
      PUSHB[ ]	/* 1 value pushed */
      1
      MUL[ ]	/* Multiply */
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 1 value pushed */
      2
      CINDEX[ ]	/* CopyXToTopStack */
      GC[0]	/* GetCoordOnPVector */
      SUB[ ]	/* Subtract */
      SHPIX[ ]	/* ShiftZoneByPixel */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      SWAP[ ]	/* SwapTopStack */
      SHPIX[ ]	/* ShiftZoneByPixel */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      GC[0]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      GC[1]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      1
      CALL[ ]	/* CallFunction */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      SHPIX[ ]	/* ShiftZoneByPixel */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 2 values pushed */
      46 1
      SZP1[ ]	/* SetZonePointer1 */
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      69
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      56
      CALL[ ]	/* CallFunction */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSHB[ ]	/* 2 values pushed */
      46 1
      SZP1[ ]	/* SetZonePointer1 */
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      70
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      57
      CALL[ ]	/* CallFunction */
      POP[ ]	/* PopTopStack */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      PUSHB[ ]	/* 1 value pushed */
      4
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      SWAP[ ]	/* SwapTopStack */
      SHPIX[ ]	/* ShiftZoneByPixel */
      PUSHB[ ]	/* 2 values pushed */
      46 1
      SZP1[ ]	/* SetZonePointer1 */
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      4
      RS[ ]	/* ReadStore */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSHB[ ]	/* 1 value pushed */
      46
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      71
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      0
      SZP2[ ]	/* SetZonePointer2 */
      DUP[ ]	/* DuplicateTopStack */
      GC[1]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      0
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 3 values pushed */
      0 1 1
      SZP2[ ]	/* SetZonePointer2 */
      SZP1[ ]	/* SetZonePointer1 */
      SZP0[ ]	/* SetZonePointer0 */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSHB[ ]	/* 1 value pushed */
      52
      LOOPCALL[ ]	/* LoopAndCallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      72
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      0
      SZP2[ ]	/* SetZonePointer2 */
      DUP[ ]	/* DuplicateTopStack */
      GC[1]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      0
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 3 values pushed */
      0 1 1
      SZP2[ ]	/* SetZonePointer2 */
      SZP1[ ]	/* SetZonePointer1 */
      SZP0[ ]	/* SetZonePointer0 */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSHB[ ]	/* 1 value pushed */
      52
      LOOPCALL[ ]	/* LoopAndCallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      73
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      0 1
      SZP1[ ]	/* SetZonePointer1 */
      SZP0[ ]	/* SetZonePointer0 */
      PUSHB[ ]	/* 1 value pushed */
      53
      LOOPCALL[ ]	/* LoopAndCallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      74
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      55
      LOOPCALL[ ]	/* LoopAndCallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      75
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      0
      SZPS[ ]	/* SetZonePointerS */
      RCVT[ ]	/* ReadCVT */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      MDAP[0]	/* MoveDirectAbsPt */
      DUP[ ]	/* DuplicateTopStack */
      GC[0]	/* GetCoordOnPVector */
      ROLL[ ]	/* RollTopThreeStack */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      SHPIX[ ]	/* ShiftZoneByPixel */
      PUSHB[ ]	/* 2 values pushed */
      46 1
      SZP1[ ]	/* SetZonePointer1 */
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      76
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      8
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 1 value pushed */
      75
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      77
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      0 0 68
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      78
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      0 1 68
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      79
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      1 0 68
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      80
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      1 1 68
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      81
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      0 0 69
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      82
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      0 1 69
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      83
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      1 0 69
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      84
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      1 1 69
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      85
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      0 0 65
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      86
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      0 1 65
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      87
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      1 0 65
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      88
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      1 1 65
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      89
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      0 0 67
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      90
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      0 1 67
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      91
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      1 0 67
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      92
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      1 1 67
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      93
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      0 0 70
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      94
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      0 1 70
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      95
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      1 0 70
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      96
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      1 1 70
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      97
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      0 0 66
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      98
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      0 1 66
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      99
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      1 0 66
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      100
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 3 values pushed */
      1 1 66
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      101
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      58
      CALL[ ]	/* CallFunction */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSHB[ ]	/* 2 values pushed */
      46 1
      SZP1[ ]	/* SetZonePointer1 */
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      102
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      58
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      62
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      103
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      58
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      63
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      104
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      0
      SZPS[ ]	/* SetZonePointerS */
      PUSHB[ ]	/* 1 value pushed */
      58
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      64
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      105
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      59
      CALL[ ]	/* CallFunction */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSHB[ ]	/* 2 values pushed */
      46 1
      SZP1[ ]	/* SetZonePointer1 */
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      106
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      59
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      62
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      107
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      59
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      63
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      108
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      59
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      64
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      109
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      60
      CALL[ ]	/* CallFunction */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSHB[ ]	/* 2 values pushed */
      46 1
      SZP1[ ]	/* SetZonePointer1 */
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      110
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      60
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      62
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      111
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      60
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      63
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      112
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      60
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      64
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      113
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      61
      CALL[ ]	/* CallFunction */
      MDAP[0]	/* MoveDirectAbsPt */
      PUSHB[ ]	/* 2 values pushed */
      46 1
      SZP1[ ]	/* SetZonePointer1 */
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      114
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      61
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      62
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      115
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      61
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      63
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      116
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      61
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      64
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      117
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 4 values pushed */
      9 4 2 3
      RCVT[ ]	/* ReadCVT */
      IF[ ]	/* If */
      POP[ ]	/* PopTopStack */
      ELSE[ ]	/* Else */
      SWAP[ ]	/* SwapTopStack */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      WS[ ]	/* WriteStore */
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      8
      NEG[ ]	/* Negate */
      PUSHB[ ]	/* 1 value pushed */
      3
      DEPTH[ ]	/* GetDepthStack */
      LT[ ]	/* LessThan */
      JROT[ ]	/* JumpRelativeOnTrue */
      PUSHB[ ]	/* 2 values pushed */
      5 1
      SZP2[ ]	/* SetZonePointer2 */
      RCVT[ ]	/* ReadCVT */
      IF[ ]	/* If */
      IUP[0]	/* InterpolateUntPts */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
    </assembly>
  </fpgm>

  <prep>
    <assembly>
      SVTCA[0]	/* SetFPVectorToAxis */
      MPPEM[ ]	/* MeasurePixelPerEm */
      PUSHW[ ]	/* 1 value pushed */
      200
      GT[ ]	/* GreaterThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 2 values pushed */
      1 1
      INSTCTRL[ ]	/* SetInstrExecControl */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 1 value pushed */
      1
      PUSHW[ ]	/* 2 values pushed */
      2048 2048
      MUL[ ]	/* Multiply */
      WCVTF[ ]	/* WriteCVTInFUnits */
      PUSHB[ ]	/* 2 values pushed */
      0 6
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 3 values pushed */
      0 1 0
      LOOPCALL[ ]	/* LoopAndCallFunction */
      PUSHB[ ]	/* 2 values pushed */
      0 6
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 4 values pushed */
      13 4 1 8
      LOOPCALL[ ]	/* LoopAndCallFunction */
      PUSHB[ ]	/* 2 values pushed */
      0 6
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 4 values pushed */
      19 2 1 8
      LOOPCALL[ ]	/* LoopAndCallFunction */
      PUSHB[ ]	/* 2 values pushed */
      0 7
      WS[ ]	/* WriteStore */
      PUSHW[ ]	/* 3 values pushed */
      896 1 9
      LOOPCALL[ ]	/* LoopAndCallFunction */
      PUSHB[ ]	/* 2 values pushed */
      0 8
      WS[ ]	/* WriteStore */
      PUSHW[ ]	/* 3 values pushed */
      64 1 9
      LOOPCALL[ ]	/* LoopAndCallFunction */
      PUSHB[ ]	/* 2 values pushed */
      3 0
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSHB[ ]	/* 2 values pushed */
      36 1
      GETINFO[ ]	/* GetInfo */
      LTEQ[ ]	/* LessThenOrEqual */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      GETINFO[ ]	/* GetInfo */
      IF[ ]	/* If */
      PUSHB[ ]	/* 2 values pushed */
      3 100
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSHB[ ]	/* 2 values pushed */
      38 1
      GETINFO[ ]	/* GetInfo */
      LTEQ[ ]	/* LessThenOrEqual */
      IF[ ]	/* If */
      PUSHW[ ]	/* 3 values pushed */
      2176 1 1088
      GETINFO[ ]	/* GetInfo */
      MUL[ ]	/* Multiply */
      EQ[ ]	/* Equal */
      IF[ ]	/* If */
      PUSHB[ ]	/* 2 values pushed */
      3 0
      WCVTP[ ]	/* WriteCVTInPixels */
      EIF[ ]	/* EndIf */
      EIF[ ]	/* EndIf */
      EIF[ ]	/* EndIf */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 4 values pushed */
      15 4 1 12
      LOOPCALL[ ]	/* LoopAndCallFunction */
      PUSHW[ ]	/* 1 value pushed */
      511
      SCANCTRL[ ]	/* ScanConversionControl */
      PUSHB[ ]	/* 1 value pushed */
      4
      SCANTYPE[ ]	/* ScanType */
      PUSHB[ ]	/* 2 values pushed */
      2 0
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSHB[ ]	/* 2 values pushed */
      5 100
      WCVTP[ ]	/* WriteCVTInPixels */
    </assembly>
  </prep>

  <cvt>
    <cv index="0" value="0"/>
    <cv index="1" value="0"/>
    <cv index="2" value="0"/>
    <cv index="3" value="0"/>
    <cv index="4" value="0"/>
    <cv index="5" value="0"/>
    <cv index="6" value="0"/>
    <cv index="7" value="0"/>
    <cv index="8" value="0"/>
    <cv index="9" value="46"/>
    <cv index="10" value="46"/>
    <cv index="11" value="59"/>
    <cv index="12" value="26"/>
    <cv index="13" value="36"/>
    <cv index="14" value="36"/>
    <cv index="15" value="726"/>
    <cv index="16" value="-16"/>
    <cv index="17" value="533"/>
    <cv index="18" value="0"/>
    <cv index="19" value="726"/>
    <cv index="20" value="-17"/>
    <cv index="21" value="533"/>
    <cv index="22" value="0"/>
  </cvt>

  <loca>
    <!-- The 'loca' table will be calculated by the compiler -->
  </loca>

  <glyf>

    <!-- The xMin, yMin, xMax and yMax values
         will be recalculated by the compiler. -->

    <TTGlyph name=".notdef" xMin="50" yMin="0" xMax="200" yMax="533">
      <contour>
        <pt x="50" y="0" on="1"/>
        <pt x="50" y="533" on="1"/>
        <pt x="200" y="533" on="1"/>
        <pt x="200" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="100" y="50" on="1"/>
        <pt x="150" y="50" on="1"/>
        <pt x="150" y="483" on="1"/>
        <pt x="100" y="483" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 6 values pushed */
          6 4 1 0 2 48
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name=".null"/><!-- contains no outline data -->

    <TTGlyph name="A" xMin="35" yMin="-8" xMax="1016" yMax="717">
      <contour>
        <pt x="76" y="60" on="1"/>
        <pt x="83" y="29" on="0"/>
        <pt x="135" y="29" on="1"/>
        <pt x="190" y="29" on="0"/>
        <pt x="264" y="81" on="1"/>
        <pt x="275" y="89" on="0"/>
        <pt x="281" y="95" on="0"/>
        <pt x="280" y="96" on="1"/>
        <pt x="270" y="99" on="0"/>
        <pt x="248" y="118" on="1"/>
        <pt x="189" y="166" on="0"/>
        <pt x="189" y="237" on="1"/>
        <pt x="189" y="303" on="0"/>
        <pt x="245" y="388" on="1"/>
        <pt x="267" y="421" on="0"/>
        <pt x="299" y="436" on="1"/>
        <pt x="336" y="455" on="0"/>
        <pt x="386" y="455" on="1"/>
        <pt x="487" y="455" on="0"/>
        <pt x="550" y="403" on="1"/>
        <pt x="559" y="395" on="1"/>
        <pt x="571" y="405" on="1"/>
        <pt x="727" y="544" on="0"/>
        <pt x="944" y="679" on="1"/>
        <pt x="957" y="687" on="1"/>
        <pt x="966" y="701" on="1"/>
        <pt x="976" y="715" on="0"/>
        <pt x="977" y="716" on="1"/>
        <pt x="979" y="717" on="0"/>
        <pt x="995" y="717" on="1"/>
        <pt x="1003" y="717" on="1"/>
        <pt x="1011" y="717" on="0"/>
        <pt x="1016" y="714" on="0"/>
        <pt x="1016" y="708" on="1"/>
        <pt x="1016" y="705" on="0"/>
        <pt x="842" y="425" on="0"/>
        <pt x="649" y="113" on="0"/>
        <pt x="636" y="92" on="1"/>
        <pt x="630" y="83" on="1"/>
        <pt x="687" y="102" on="0"/>
        <pt x="732" y="147" on="1"/>
        <pt x="741" y="156" on="0"/>
        <pt x="745" y="158" on="1"/>
        <pt x="758" y="158" on="0"/>
        <pt x="752" y="138" on="1"/>
        <pt x="748" y="127" on="1"/>
        <pt x="740" y="119" on="1"/>
        <pt x="678" y="58" on="0"/>
        <pt x="605" y="42" on="1"/>
        <pt x="593" y="22" on="1"/>
        <pt x="591" y="19" on="0"/>
        <pt x="585" y="11" on="0"/>
        <pt x="582" y="5" on="0"/>
        <pt x="580" y="3" on="1"/>
        <pt x="579" y="1" on="1"/>
        <pt x="577" y="0" on="0"/>
        <pt x="530" y="0" on="1"/>
        <pt x="484" y="0" on="1"/>
        <pt x="478" y="5" on="0"/>
        <pt x="480" y="12" on="0"/>
        <pt x="489" y="26" on="1"/>
        <pt x="499" y="40" on="0"/>
        <pt x="497" y="40" on="1"/>
        <pt x="478" y="40" on="0"/>
        <pt x="442" y="46" on="1"/>
        <pt x="376" y="55" on="0"/>
        <pt x="327" y="74" on="1"/>
        <pt x="316" y="78" on="1"/>
        <pt x="302" y="68" on="1"/>
        <pt x="200" y="-8" on="0"/>
        <pt x="121" y="-8" on="1"/>
        <pt x="74" y="-8" on="0"/>
        <pt x="51" y="15" on="1"/>
        <pt x="35" y="30" on="0"/>
        <pt x="35" y="53" on="1"/>
        <pt x="35" y="70" on="0"/>
        <pt x="44" y="88" on="1"/>
        <pt x="61" y="122" on="0"/>
        <pt x="89" y="136" on="1"/>
        <pt x="108" y="144" on="0"/>
        <pt x="123" y="144" on="1"/>
        <pt x="141" y="144" on="0"/>
        <pt x="162" y="123" on="0"/>
        <pt x="162" y="106" on="1"/>
        <pt x="162" y="87" on="0"/>
        <pt x="123" y="61" on="0"/>
        <pt x="99" y="61" on="1"/>
        <pt x="90" y="61" on="0"/>
        <pt x="76" y="65" on="1"/>
      </contour>
      <contour>
        <pt x="904" y="614" on="1"/>
        <pt x="905" y="615" on="1"/>
        <pt x="902" y="615" on="0"/>
        <pt x="838" y="571" on="1"/>
        <pt x="692" y="472" on="0"/>
        <pt x="583" y="371" on="1"/>
        <pt x="581" y="369" on="1"/>
        <pt x="587" y="359" on="1"/>
        <pt x="620" y="309" on="0"/>
        <pt x="623" y="222" on="1"/>
        <pt x="624" y="216" on="1"/>
        <pt x="764" y="414" on="1"/>
        <pt x="904" y="612" on="0"/>
      </contour>
      <contour>
        <pt x="522" y="367" on="1"/>
        <pt x="483" y="406" on="0"/>
        <pt x="379" y="418" on="1"/>
        <pt x="358" y="418" on="0"/>
        <pt x="343" y="409" on="1"/>
        <pt x="327" y="400" on="0"/>
        <pt x="309" y="378" on="1"/>
        <pt x="267" y="320" on="0"/>
        <pt x="254" y="267" on="1"/>
        <pt x="251" y="255" on="0"/>
        <pt x="251" y="234" on="1"/>
        <pt x="251" y="201" on="0"/>
        <pt x="270" y="173" on="1"/>
        <pt x="282" y="153" on="0"/>
        <pt x="306" y="137" on="1"/>
        <pt x="318" y="128" on="0"/>
        <pt x="322" y="131" on="1"/>
        <pt x="323" y="132" on="0"/>
        <pt x="329" y="139" on="1"/>
        <pt x="351" y="161" on="0"/>
        <pt x="362" y="180" on="1"/>
        <pt x="432" y="276" on="0"/>
        <pt x="509" y="348" on="1"/>
        <pt x="525" y="363" on="1"/>
      </contour>
      <contour>
        <pt x="579" y="205" on="1"/>
        <pt x="579" y="275" on="0"/>
        <pt x="555" y="323" on="1"/>
        <pt x="553" y="326" on="0"/>
        <pt x="547" y="335" on="0"/>
        <pt x="546" y="337" on="1"/>
        <pt x="521" y="311" on="1"/>
        <pt x="452" y="239" on="0"/>
        <pt x="411" y="181" on="1"/>
        <pt x="381" y="141" on="0"/>
        <pt x="362" y="121" on="1"/>
        <pt x="353" y="111" on="1"/>
        <pt x="362" y="108" on="1"/>
        <pt x="420" y="85" on="0"/>
        <pt x="499" y="79" on="1"/>
        <pt x="517" y="77" on="0"/>
        <pt x="520" y="77" on="1"/>
        <pt x="525" y="76" on="1"/>
        <pt x="549" y="111" on="1"/>
        <pt x="570" y="140" on="0"/>
        <pt x="574" y="148" on="1"/>
        <pt x="579" y="168" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 79 values pushed */
          125 98 94 20 4 6 8 143 137 67 38 4 7 6 2 74 0 4 7 0 7 4 0 112 0
          1 0 8 6 1 8 99 0 6 0 7 4 6 7 99 0 2 2 15 75 0 3 3 18 75
          0 0 0 5 91 0 5 5 16 5 76 105 104 87 85 81 79 71 69 63 61 57 55 43 45
          33 9 6 23
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="B" xMin="31" yMin="-28" xMax="928" yMax="708">
      <contour>
        <pt x="256" y="262" on="1"/>
        <pt x="161" y="262" on="0"/>
        <pt x="161" y="351" on="1"/>
        <pt x="161" y="369" on="0"/>
        <pt x="162" y="376" on="1"/>
        <pt x="171" y="424" on="0"/>
        <pt x="246" y="535" on="0"/>
        <pt x="289" y="570" on="1"/>
        <pt x="431" y="687" on="0"/>
        <pt x="598" y="705" on="1"/>
        <pt x="612" y="707" on="0"/>
        <pt x="617" y="707" on="1"/>
        <pt x="627" y="708" on="1"/>
        <pt x="637" y="708" on="0"/>
        <pt x="644" y="708" on="1"/>
        <pt x="759" y="708" on="0"/>
        <pt x="831" y="675" on="1"/>
        <pt x="844" y="669" on="1"/>
        <pt x="857" y="677" on="1"/>
        <pt x="892" y="700" on="0"/>
        <pt x="896" y="700" on="1"/>
        <pt x="902" y="700" on="0"/>
        <pt x="907" y="685" on="1"/>
        <pt x="910" y="669" on="0"/>
        <pt x="904" y="665" on="1"/>
        <pt x="889" y="655" on="1"/>
        <pt x="878" y="647" on="1"/>
        <pt x="889" y="636" on="1"/>
        <pt x="928" y="598" on="0"/>
        <pt x="928" y="548" on="1"/>
        <pt x="928" y="526" on="0"/>
        <pt x="920" y="503" on="1"/>
        <pt x="896" y="434" on="0"/>
        <pt x="813" y="367" on="1"/>
        <pt x="800" y="355" on="1"/>
        <pt x="824" y="335" on="0"/>
        <pt x="847" y="297" on="0"/>
        <pt x="847" y="263" on="1"/>
        <pt x="847" y="242" on="0"/>
        <pt x="845" y="231" on="1"/>
        <pt x="835" y="188" on="0"/>
        <pt x="806" y="145" on="1"/>
        <pt x="778" y="101" on="0"/>
        <pt x="732" y="64" on="1"/>
        <pt x="641" y="-8" on="0"/>
        <pt x="564" y="-8" on="1"/>
        <pt x="529" y="-8" on="0"/>
        <pt x="484" y="26" on="0"/>
        <pt x="484" y="58" on="1"/>
        <pt x="484" y="84" on="0"/>
        <pt x="521" y="154" on="0"/>
        <pt x="543" y="172" on="1"/>
        <pt x="607" y="226" on="0"/>
        <pt x="685" y="228" on="1"/>
        <pt x="695" y="228" on="0"/>
        <pt x="698" y="226" on="1"/>
        <pt x="703" y="220" on="0"/>
        <pt x="692" y="206" on="1"/>
        <pt x="684" y="194" on="0"/>
        <pt x="679" y="192" on="0"/>
        <pt x="665" y="191" on="1"/>
        <pt x="577" y="187" on="0"/>
        <pt x="536" y="111" on="1"/>
        <pt x="522" y="83" on="0"/>
        <pt x="522" y="66" on="1"/>
        <pt x="522" y="29" on="0"/>
        <pt x="576" y="29" on="1"/>
        <pt x="642" y="29" on="0"/>
        <pt x="705" y="109" on="1"/>
        <pt x="785" y="211" on="0"/>
        <pt x="785" y="270" on="1"/>
        <pt x="785" y="308" on="0"/>
        <pt x="759" y="324" on="1"/>
        <pt x="755" y="327" on="1"/>
        <pt x="740" y="319" on="1"/>
        <pt x="684" y="290" on="0"/>
        <pt x="634" y="290" on="1"/>
        <pt x="611" y="290" on="0"/>
        <pt x="592" y="294" on="1"/>
        <pt x="588" y="294" on="1"/>
        <pt x="565" y="261" on="1"/>
        <pt x="492" y="160" on="0"/>
        <pt x="455" y="123" on="1"/>
        <pt x="390" y="59" on="0"/>
        <pt x="244" y="-21" on="0"/>
        <pt x="182" y="-27" on="1"/>
        <pt x="175" y="-28" on="0"/>
        <pt x="159" y="-28" on="1"/>
        <pt x="122" y="-28" on="0"/>
        <pt x="95" y="-19" on="1"/>
        <pt x="31" y="1" on="0"/>
        <pt x="31" y="54" on="1"/>
        <pt x="31" y="98" on="0"/>
        <pt x="67" y="134" on="1"/>
        <pt x="91" y="158" on="0"/>
        <pt x="123" y="158" on="1"/>
        <pt x="141" y="158" on="0"/>
        <pt x="164" y="136" on="0"/>
        <pt x="164" y="102" on="0"/>
        <pt x="121" y="75" on="0"/>
        <pt x="100" y="75" on="1"/>
        <pt x="72" y="81" on="1"/>
        <pt x="69" y="78" on="0"/>
        <pt x="69" y="65" on="1"/>
        <pt x="69" y="37" on="0"/>
        <pt x="133" y="9" on="0"/>
        <pt x="175" y="9" on="1"/>
        <pt x="184" y="9" on="0"/>
        <pt x="198" y="11" on="1"/>
        <pt x="257" y="25" on="0"/>
        <pt x="330" y="99" on="1"/>
        <pt x="375" y="146" on="0"/>
        <pt x="439" y="235" on="1"/>
        <pt x="531" y="366" on="0"/>
        <pt x="602" y="450" on="1"/>
        <pt x="697" y="561" on="0"/>
        <pt x="789" y="629" on="1"/>
        <pt x="801" y="639" on="1"/>
        <pt x="801" y="641" on="0"/>
        <pt x="768" y="653" on="1"/>
        <pt x="717" y="670" on="0"/>
        <pt x="633" y="670" on="1"/>
        <pt x="592" y="670" on="0"/>
        <pt x="558" y="665" on="1"/>
        <pt x="481" y="651" on="0"/>
        <pt x="337" y="575" on="0"/>
        <pt x="286" y="520" on="1"/>
        <pt x="258" y="490" on="0"/>
        <pt x="212" y="409" on="0"/>
        <pt x="204" y="379" on="1"/>
        <pt x="202" y="371" on="0"/>
        <pt x="202" y="354" on="1"/>
        <pt x="202" y="299" on="0"/>
        <pt x="269" y="299" on="1"/>
        <pt x="326" y="299" on="0"/>
        <pt x="375" y="344" on="1"/>
        <pt x="398" y="365" on="0"/>
        <pt x="445" y="435" on="1"/>
        <pt x="496" y="512" on="0"/>
        <pt x="496" y="547" on="1"/>
        <pt x="496" y="561" on="0"/>
        <pt x="501" y="563" on="1"/>
        <pt x="503" y="565" on="0"/>
        <pt x="526" y="573" on="0"/>
        <pt x="530" y="573" on="1"/>
        <pt x="538" y="573" on="0"/>
        <pt x="538" y="557" on="1"/>
        <pt x="538" y="540" on="1"/>
        <pt x="538" y="518" on="0"/>
        <pt x="536" y="504" on="1"/>
        <pt x="525" y="444" on="0"/>
        <pt x="487" y="388" on="1"/>
        <pt x="465" y="355" on="0"/>
        <pt x="427" y="325" on="1"/>
        <pt x="342" y="262" on="0"/>
      </contour>
      <contour>
        <pt x="689" y="382" on="1"/>
        <pt x="706" y="382" on="0"/>
        <pt x="753" y="375" on="1"/>
        <pt x="765" y="387" on="1"/>
        <pt x="786" y="407" on="0"/>
        <pt x="833" y="471" on="0"/>
        <pt x="844" y="492" on="1"/>
        <pt x="860" y="524" on="0"/>
        <pt x="860" y="555" on="1"/>
        <pt x="860" y="595" on="0"/>
        <pt x="839" y="610" on="1"/>
        <pt x="788" y="559" on="0"/>
        <pt x="716" y="467" on="1"/>
        <pt x="651" y="383" on="0"/>
        <pt x="651" y="380" on="1"/>
        <pt x="655" y="381" on="0"/>
        <pt x="660" y="381" on="1"/>
        <pt x="664" y="382" on="0"/>
      </contour>
      <contour>
        <pt x="697" y="344" on="1"/>
        <pt x="692" y="345" on="0"/>
        <pt x="681" y="345" on="1"/>
        <pt x="675" y="345" on="1"/>
        <pt x="671" y="345" on="0"/>
        <pt x="659" y="344" on="0"/>
        <pt x="651" y="344" on="0"/>
        <pt x="650" y="344" on="1"/>
        <pt x="648" y="342" on="1"/>
        <pt x="646" y="339" on="0"/>
        <pt x="645" y="338" on="1"/>
        <pt x="643" y="333" on="0"/>
        <pt x="639" y="327" on="1"/>
        <pt x="653" y="327" on="1"/>
        <pt x="670" y="329" on="0"/>
        <pt x="676" y="330" on="1"/>
        <pt x="706" y="342" on="0"/>
        <pt x="706" y="343" on="1"/>
        <pt x="702" y="344" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 25 values pushed */
          165 117 26 17 4 14 12 34 1 16 15 72 1 13 18 101 1 10 9 103 1 6 10 5 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          9
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 83 values pushed */
          0 14 12 15 12 14 15 112 20 1 15 17 1 16 18 15 16 99 0 18 0 7 0 18 7
          99 0 13 19 1 0 4 13 0 99 0 4 0 5 9 4 5 99 0 9 0 10 6 9 10
          99 0 12 12 1 91 2 1 1 1 15 75 0 6 6 3 91 0 3 3 16 75 0 11 11
          8 91 0 8 8 16 8 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          11
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 90 values pushed */
          0 2 1 12 1 2 12 112 0 14 12 15 12 14 15 112 20 1 15 17 1 16 18 15 16
          99 0 18 0 7 0 18 7 99 0 13 19 1 0 4 13 0 99 0 4 0 5 9 4 5
          99 0 9 0 10 6 9 10 99 0 12 12 1 91 0 1 1 15 75 0 6 6 3 91 0
          3 3 16 75 0 11 11 8 91 0 8 8 20 8 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          12
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 90 values pushed */
          0 2 1 12 1 2 12 112 0 14 12 15 12 14 15 112 20 1 15 17 1 16 18 15 16
          99 0 18 0 7 0 18 7 99 0 13 19 1 0 4 13 0 99 0 4 0 5 9 4 5
          99 0 9 0 10 6 9 10 99 0 12 12 1 91 0 1 1 15 75 0 6 6 3 91 0
          3 3 16 75 0 11 11 8 91 0 8 8 16 8 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          26
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 90 values pushed */
          0 2 1 12 1 2 12 112 0 14 12 15 12 14 15 112 20 1 15 17 1 16 18 15 16
          99 0 18 0 7 0 18 7 99 0 13 19 1 0 4 13 0 99 0 4 0 5 9 4 5
          99 0 9 0 10 6 9 10 99 0 12 12 1 91 0 1 1 15 75 0 6 6 3 91 0
          3 3 16 75 0 11 11 8 91 0 8 8 20 8 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          45
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 88 values pushed */
          0 2 1 12 1 2 12 112 0 14 12 15 12 14 15 112 0 1 0 12 14 1 12 99 20
          1 15 17 1 16 18 15 16 99 0 18 0 7 0 18 7 99 0 13 19 1 0 4 13 0
          99 0 4 0 5 9 4 5 99 0 9 0 10 6 9 10 99 0 6 6 3 91 0 3 3
          16 75 0 11 11 8 91 0 8 8 20 8 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 85 values pushed */
          0 2 1 12 1 2 12 112 0 14 12 15 12 14 15 112 0 1 0 12 14 1 12 99 20
          1 15 17 1 16 18 15 16 99 0 18 0 7 0 18 7 99 0 13 19 1 0 4 13 0
          99 0 4 0 5 9 4 5 99 0 9 0 10 6 9 10 99 0 11 0 8 11 8 95 0
          6 6 3 91 0 3 3 16 3 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 49 values pushed */
          156 155 1 0 186 185 180 178 177 173 155 172 156 171 145 143 134 132 122 120 107 105 100 99 96
          94 88 85 77 75 67 65 61 60 54 52 46 44 21 19 15 10 0 154 1 154 21 6 20
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="C" xMin="26" yMin="-26" xMax="819" yMax="728">
      <contour>
        <pt x="312" y="676" on="1"/>
        <pt x="312" y="673" on="0"/>
        <pt x="295" y="649" on="0"/>
        <pt x="292" y="647" on="1"/>
        <pt x="286" y="646" on="1"/>
        <pt x="280" y="646" on="0"/>
        <pt x="276" y="646" on="1"/>
        <pt x="225" y="643" on="0"/>
        <pt x="183" y="615" on="1"/>
        <pt x="152" y="594" on="0"/>
        <pt x="100" y="521" on="0"/>
        <pt x="94" y="490" on="1"/>
        <pt x="94" y="488" on="0"/>
        <pt x="93" y="479" on="0"/>
        <pt x="93" y="476" on="1"/>
        <pt x="93" y="387" on="0"/>
        <pt x="265" y="387" on="1"/>
        <pt x="271" y="387" on="0"/>
        <pt x="283" y="388" on="0"/>
        <pt x="291" y="388" on="0"/>
        <pt x="292" y="388" on="1"/>
        <pt x="294" y="388" on="0"/>
        <pt x="305" y="403" on="1"/>
        <pt x="368" y="487" on="0"/>
        <pt x="451" y="562" on="1"/>
        <pt x="618" y="712" on="0"/>
        <pt x="732" y="727" on="1"/>
        <pt x="733" y="727" on="0"/>
        <pt x="748" y="728" on="0"/>
        <pt x="753" y="728" on="1"/>
        <pt x="784" y="726" on="0"/>
        <pt x="819" y="694" on="0"/>
        <pt x="819" y="665" on="1"/>
        <pt x="819" y="643" on="0"/>
        <pt x="809" y="617" on="1"/>
        <pt x="794" y="577" on="0"/>
        <pt x="764" y="541" on="1"/>
        <pt x="684" y="443" on="0"/>
        <pt x="485" y="384" on="1"/>
        <pt x="434" y="370" on="0"/>
        <pt x="385" y="361" on="1"/>
        <pt x="381" y="361" on="0"/>
        <pt x="367" y="341" on="1"/>
        <pt x="314" y="266" on="0"/>
        <pt x="284" y="209" on="1"/>
        <pt x="247" y="136" on="0"/>
        <pt x="247" y="86" on="1"/>
        <pt x="247" y="50" on="0"/>
        <pt x="288" y="11" on="0"/>
        <pt x="325" y="11" on="1"/>
        <pt x="354" y="11" on="0"/>
        <pt x="380" y="22" on="1"/>
        <pt x="428" y="44" on="0"/>
        <pt x="465" y="95" on="1"/>
        <pt x="518" y="165" on="0"/>
        <pt x="528" y="208" on="1"/>
        <pt x="529" y="212" on="0"/>
        <pt x="529" y="220" on="1"/>
        <pt x="529" y="239" on="0"/>
        <pt x="503" y="261" on="0"/>
        <pt x="480" y="261" on="1"/>
        <pt x="464" y="261" on="0"/>
        <pt x="455" y="258" on="1"/>
        <pt x="419" y="246" on="0"/>
        <pt x="386" y="207" on="1"/>
        <pt x="343" y="155" on="0"/>
        <pt x="343" y="126" on="1"/>
        <pt x="343" y="110" on="0"/>
        <pt x="358" y="98" on="1"/>
        <pt x="370" y="91" on="0"/>
        <pt x="365" y="84" on="1"/>
        <pt x="363" y="82" on="0"/>
        <pt x="337" y="70" on="0"/>
        <pt x="334" y="70" on="1"/>
        <pt x="325" y="70" on="0"/>
        <pt x="313" y="82" on="1"/>
        <pt x="298" y="97" on="0"/>
        <pt x="298" y="120" on="1"/>
        <pt x="298" y="150" on="0"/>
        <pt x="322" y="184" on="1"/>
        <pt x="348" y="223" on="0"/>
        <pt x="427" y="284" on="0"/>
        <pt x="465" y="295" on="1"/>
        <pt x="474" y="298" on="0"/>
        <pt x="496" y="298" on="1"/>
        <pt x="559" y="298" on="0"/>
        <pt x="581" y="251" on="1"/>
        <pt x="588" y="237" on="0"/>
        <pt x="588" y="220" on="1"/>
        <pt x="588" y="213" on="1"/>
        <pt x="588" y="168" on="0"/>
        <pt x="552" y="111" on="1"/>
        <pt x="519" y="60" on="0"/>
        <pt x="401" y="-16" on="0"/>
        <pt x="340" y="-24" on="1"/>
        <pt x="324" y="-26" on="0"/>
        <pt x="306" y="-26" on="1"/>
        <pt x="240" y="-26" on="0"/>
        <pt x="170" y="47" on="0"/>
        <pt x="170" y="114" on="1"/>
        <pt x="171" y="146" on="0"/>
        <pt x="178" y="173" on="1"/>
        <pt x="198" y="247" on="0"/>
        <pt x="254" y="333" on="1"/>
        <pt x="265" y="349" on="1"/>
        <pt x="265" y="350" on="0"/>
        <pt x="246" y="350" on="1"/>
        <pt x="114" y="350" on="0"/>
        <pt x="56" y="408" on="1"/>
        <pt x="26" y="438" on="0"/>
        <pt x="26" y="480" on="1"/>
        <pt x="26" y="533" on="0"/>
        <pt x="117" y="630" on="0"/>
        <pt x="241" y="683" on="0"/>
        <pt x="295" y="683" on="1"/>
        <pt x="312" y="683" on="0"/>
      </contour>
      <contour>
        <pt x="777" y="658" on="1"/>
        <pt x="777" y="691" on="0"/>
        <pt x="738" y="691" on="1"/>
        <pt x="725" y="691" on="0"/>
        <pt x="710" y="686" on="1"/>
        <pt x="650" y="669" on="0"/>
        <pt x="561" y="582" on="1"/>
        <pt x="500" y="524" on="0"/>
        <pt x="425" y="422" on="1"/>
        <pt x="410" y="401" on="0"/>
        <pt x="410" y="400" on="1"/>
        <pt x="411" y="400" on="1"/>
        <pt x="412" y="400" on="0"/>
        <pt x="414" y="400" on="0"/>
        <pt x="419" y="401" on="0"/>
        <pt x="424" y="402" on="0"/>
        <pt x="433" y="404" on="0"/>
        <pt x="437" y="405" on="1"/>
        <pt x="662" y="454" on="0"/>
        <pt x="743" y="576" on="1"/>
        <pt x="777" y="627" on="0"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 6 values pushed */
          57 1 5 4 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          9
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 61 values pushed */
          0 11 0 1 0 11 1 112 0 5 4 3 4 5 3 112 0 9 0 0 11 9 0 99 0
          1 0 8 6 1 8 99 0 6 0 4 5 6 4 99 0 10 10 2 91 0 2 2 15 75
          0 3 3 7 91 0 7 7 16 7 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          10
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 61 values pushed */
          0 11 0 1 0 11 1 112 0 5 4 3 4 5 3 112 0 9 0 0 11 9 0 99 0
          1 0 8 6 1 8 99 0 6 0 4 5 6 4 99 0 10 10 2 91 0 2 2 15 75
          0 3 3 7 91 0 7 7 20 7 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          11
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 61 values pushed */
          0 11 0 1 0 11 1 112 0 5 4 3 4 5 3 112 0 9 0 0 11 9 0 99 0
          1 0 8 6 1 8 99 0 6 0 4 5 6 4 99 0 10 10 2 91 0 2 2 15 75
          0 3 3 7 91 0 7 7 16 7 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 61 values pushed */
          0 11 0 1 0 11 1 112 0 5 4 3 4 5 3 112 0 9 0 0 11 9 0 99 0
          1 0 8 6 1 8 99 0 6 0 4 5 6 4 99 0 10 10 2 91 0 2 2 15 75
          0 3 3 7 91 0 7 7 20 7 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 24 values pushed */
          130 125 119 117 115 113 107 104 97 95 85 83 74 72 61 59 50 48 70 88 52 12 6 23
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="D" xMin="68" yMin="-31" xMax="855" yMax="708">
      <contour>
        <pt x="740" y="547" on="1"/>
        <pt x="698" y="671" on="0"/>
        <pt x="540" y="671" on="1"/>
        <pt x="520" y="671" on="0"/>
        <pt x="502" y="668" on="1"/>
        <pt x="404" y="652" on="0"/>
        <pt x="319" y="578" on="1"/>
        <pt x="290" y="554" on="0"/>
        <pt x="276" y="534" on="1"/>
        <pt x="217" y="460" on="0"/>
        <pt x="203" y="390" on="1"/>
        <pt x="202" y="384" on="0"/>
        <pt x="202" y="368" on="1"/>
        <pt x="202" y="309" on="0"/>
        <pt x="267" y="309" on="1"/>
        <pt x="278" y="309" on="0"/>
        <pt x="281" y="310" on="1"/>
        <pt x="315" y="316" on="0"/>
        <pt x="390" y="374" on="0"/>
        <pt x="417" y="408" on="1"/>
        <pt x="472" y="475" on="0"/>
        <pt x="491" y="545" on="1"/>
        <pt x="492" y="549" on="0"/>
        <pt x="493" y="554" on="1"/>
        <pt x="495" y="561" on="0"/>
        <pt x="507" y="563" on="1"/>
        <pt x="511" y="564" on="0"/>
        <pt x="514" y="565" on="1"/>
        <pt x="523" y="568" on="0"/>
        <pt x="528" y="568" on="1"/>
        <pt x="535" y="568" on="0"/>
        <pt x="535" y="561" on="1"/>
        <pt x="535" y="559" on="0"/>
        <pt x="529" y="537" on="1"/>
        <pt x="511" y="459" on="0"/>
        <pt x="383" y="315" on="0"/>
        <pt x="314" y="285" on="1"/>
        <pt x="283" y="272" on="0"/>
        <pt x="251" y="272" on="1"/>
        <pt x="199" y="272" on="0"/>
        <pt x="136" y="325" on="0"/>
        <pt x="136" y="374" on="1"/>
        <pt x="136" y="434" on="0"/>
        <pt x="183" y="508" on="1"/>
        <pt x="216" y="561" on="0"/>
        <pt x="267" y="603" on="1"/>
        <pt x="353" y="670" on="0"/>
        <pt x="458" y="696" on="1"/>
        <pt x="503" y="708" on="0"/>
        <pt x="552" y="708" on="1"/>
        <pt x="722" y="708" on="0"/>
        <pt x="779" y="593" on="1"/>
        <pt x="789" y="569" on="0"/>
        <pt x="790" y="569" on="1"/>
        <pt x="794" y="570" on="0"/>
        <pt x="799" y="572" on="1"/>
        <pt x="823" y="578" on="0"/>
        <pt x="840" y="578" on="1"/>
        <pt x="855" y="578" on="0"/>
        <pt x="855" y="571" on="1"/>
        <pt x="855" y="566" on="0"/>
        <pt x="847" y="555" on="1"/>
        <pt x="836" y="541" on="0"/>
        <pt x="829" y="541" on="1"/>
        <pt x="826" y="541" on="0"/>
        <pt x="799" y="532" on="0"/>
        <pt x="799" y="529" on="1"/>
        <pt x="802" y="517" on="0"/>
        <pt x="802" y="483" on="1"/>
        <pt x="802" y="457" on="0"/>
        <pt x="801" y="447" on="1"/>
        <pt x="789" y="345" on="0"/>
        <pt x="730" y="235" on="1"/>
        <pt x="672" y="126" on="0"/>
        <pt x="585" y="52" on="1"/>
        <pt x="485" y="-31" on="0"/>
        <pt x="392" y="-31" on="1"/>
        <pt x="354" y="-31" on="0"/>
        <pt x="300" y="-7" on="1"/>
        <pt x="289" y="-2" on="1"/>
        <pt x="277" y="-6" on="1"/>
        <pt x="240" y="-17" on="0"/>
        <pt x="192" y="-17" on="1"/>
        <pt x="164" y="-17" on="0"/>
        <pt x="133" y="-16" on="0"/>
        <pt x="89" y="-11" on="0"/>
        <pt x="68" y="3" on="0"/>
        <pt x="68" y="14" on="1"/>
        <pt x="68" y="18" on="0"/>
        <pt x="70" y="22" on="1"/>
        <pt x="90" y="62" on="0"/>
        <pt x="197" y="62" on="1"/>
        <pt x="243" y="62" on="0"/>
        <pt x="272" y="48" on="1"/>
        <pt x="282" y="44" on="1"/>
        <pt x="313" y="71" on="0"/>
        <pt x="334" y="93" on="1"/>
        <pt x="387" y="154" on="0"/>
        <pt x="465" y="264" on="1"/>
        <pt x="553" y="386" on="0"/>
        <pt x="622" y="454" on="1"/>
        <pt x="682" y="514" on="0"/>
        <pt x="737" y="545" on="1"/>
      </contour>
      <contour>
        <pt x="749" y="449" on="1"/>
        <pt x="750" y="456" on="0"/>
        <pt x="750" y="476" on="1"/>
        <pt x="750" y="490" on="1"/>
        <pt x="738" y="479" on="1"/>
        <pt x="691" y="429" on="0"/>
        <pt x="600" y="302" on="1"/>
        <pt x="532" y="206" on="0"/>
        <pt x="484" y="152" on="1"/>
        <pt x="409" y="68" on="0"/>
        <pt x="341" y="26" on="1"/>
        <pt x="332" y="20" on="1"/>
        <pt x="332" y="18" on="0"/>
        <pt x="357" y="9" on="1"/>
        <pt x="377" y="2" on="0"/>
        <pt x="400" y="2" on="1"/>
        <pt x="434" y="2" on="0"/>
        <pt x="478" y="20" on="1"/>
        <pt x="610" y="76" on="0"/>
        <pt x="690" y="248" on="1"/>
        <pt x="742" y="357" on="0"/>
      </contour>
      <contour>
        <pt x="226" y="20" on="1"/>
        <pt x="226" y="25" on="0"/>
        <pt x="186" y="25" on="1"/>
        <pt x="181" y="25" on="0"/>
        <pt x="174" y="24" on="1"/>
        <pt x="166" y="24" on="1"/>
        <pt x="161" y="24" on="0"/>
        <pt x="158" y="23" on="1"/>
        <pt x="152" y="23" on="1"/>
        <pt x="162" y="21" on="0"/>
        <pt x="197" y="21" on="1"/>
        <pt x="205" y="21" on="0"/>
        <pt x="222" y="20" on="0"/>
        <pt x="223" y="20" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 25 values pushed */
          106 103 10 3 1 6 132 1 13 11 87 1 10 13 79 1 8 10 4 74 114 1 13 1 73
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          13
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 64 values pushed */
          0 2 5 6 5 2 6 112 0 5 0 6 1 5 6 99 0 1 0 3 9 1 3 99 0
          9 12 1 11 13 9 11 99 0 0 0 4 91 0 4 4 15 75 0 13 13 8 91 0 8
          8 20 75 0 10 10 7 91 0 7 7 20 7 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          15
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 64 values pushed */
          0 2 5 6 5 2 6 112 0 5 0 6 1 5 6 99 0 1 0 3 9 1 3 99 0
          9 12 1 11 13 9 11 99 0 0 0 4 91 0 4 4 15 75 0 13 13 8 91 0 8
          8 20 75 0 10 10 7 91 0 7 7 16 7 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          28
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 64 values pushed */
          0 2 5 6 5 2 6 112 0 5 0 6 1 5 6 99 0 1 0 3 9 1 3 99 0
          9 12 1 11 13 9 11 99 0 0 0 4 91 0 4 4 15 75 0 13 13 8 91 0 8
          8 20 75 0 10 10 7 91 0 7 7 20 7 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          36
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 62 values pushed */
          0 2 5 6 5 2 6 112 0 4 0 0 5 4 0 99 0 5 0 6 1 5 6 99 0
          1 0 3 9 1 3 99 0 9 12 1 11 13 9 11 99 0 13 13 8 91 0 8 8 20
          75 0 10 10 7 91 0 7 7 20 7 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 59 values pushed */
          0 2 5 6 5 2 6 112 0 4 0 0 5 4 0 99 0 5 0 6 1 5 6 99 0
          1 0 3 9 1 3 99 0 9 12 1 11 13 9 11 99 0 10 0 7 10 7 95 0 13
          13 8 91 0 8 8 20 8 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 22 values pushed */
          136 133 130 128 126 125 119 117 92 90 52 43 36 38 41 39 45 42 33 14 6 29
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="E" xMin="46" yMin="-8" xMax="718" yMax="707">
      <contour>
        <pt x="230" y="97" on="1"/>
        <pt x="223" y="97" on="0"/>
        <pt x="223" y="105" on="1"/>
        <pt x="223" y="127" on="0"/>
        <pt x="240" y="165" on="1"/>
        <pt x="260" y="207" on="0"/>
        <pt x="291" y="239" on="1"/>
        <pt x="327" y="273" on="0"/>
        <pt x="361" y="282" on="1"/>
        <pt x="368" y="284" on="0"/>
        <pt x="386" y="284" on="1"/>
        <pt x="440" y="284" on="0"/>
        <pt x="511" y="245" on="0"/>
        <pt x="519" y="210" on="1"/>
        <pt x="520" y="206" on="0"/>
        <pt x="520" y="195" on="1"/>
        <pt x="520" y="179" on="0"/>
        <pt x="517" y="167" on="1"/>
        <pt x="495" y="95" on="0"/>
        <pt x="321" y="-8" on="0"/>
        <pt x="239" y="-8" on="1"/>
        <pt x="168" y="-8" on="0"/>
        <pt x="69" y="42" on="0"/>
        <pt x="53" y="87" on="1"/>
        <pt x="46" y="107" on="0"/>
        <pt x="46" y="133" on="1"/>
        <pt x="46" y="162" on="0"/>
        <pt x="53" y="185" on="1"/>
        <pt x="99" y="332" on="0"/>
        <pt x="269" y="394" on="1"/>
        <pt x="280" y="398" on="1"/>
        <pt x="279" y="400" on="0"/>
        <pt x="278" y="403" on="1"/>
        <pt x="271" y="414" on="0"/>
        <pt x="271" y="443" on="1"/>
        <pt x="271" y="463" on="0"/>
        <pt x="273" y="471" on="1"/>
        <pt x="289" y="548" on="0"/>
        <pt x="417" y="670" on="0"/>
        <pt x="496" y="695" on="1"/>
        <pt x="539" y="707" on="0"/>
        <pt x="553" y="707" on="1"/>
        <pt x="565" y="707" on="1"/>
        <pt x="718" y="707" on="0"/>
        <pt x="718" y="604" on="1"/>
        <pt x="718" y="591" on="0"/>
        <pt x="717" y="586" on="1"/>
        <pt x="708" y="542" on="0"/>
        <pt x="635" y="462" on="0"/>
        <pt x="591" y="444" on="1"/>
        <pt x="570" y="436" on="0"/>
        <pt x="553" y="436" on="1"/>
        <pt x="525" y="436" on="0"/>
        <pt x="490" y="466" on="0"/>
        <pt x="490" y="492" on="1"/>
        <pt x="490" y="520" on="0"/>
        <pt x="533" y="586" on="0"/>
        <pt x="558" y="604" on="1"/>
        <pt x="588" y="626" on="0"/>
        <pt x="619" y="630" on="1"/>
        <pt x="633" y="630" on="0"/>
        <pt x="633" y="616" on="0"/>
        <pt x="624" y="606" on="1"/>
        <pt x="617" y="597" on="0"/>
        <pt x="612" y="594" on="0"/>
        <pt x="603" y="592" on="1"/>
        <pt x="590" y="591" on="0"/>
        <pt x="578" y="580" on="1"/>
        <pt x="557" y="559" on="0"/>
        <pt x="540" y="525" on="1"/>
        <pt x="532" y="507" on="0"/>
        <pt x="532" y="497" on="1"/>
        <pt x="532" y="474" on="0"/>
        <pt x="565" y="474" on="1"/>
        <pt x="577" y="474" on="0"/>
        <pt x="587" y="476" on="1"/>
        <pt x="600" y="481" on="0"/>
        <pt x="611" y="489" on="1"/>
        <pt x="625" y="500" on="0"/>
        <pt x="658" y="544" on="0"/>
        <pt x="665" y="563" on="1"/>
        <pt x="672" y="581" on="0"/>
        <pt x="672" y="596" on="1"/>
        <pt x="672" y="618" on="0"/>
        <pt x="656" y="633" on="1"/>
        <pt x="627" y="660" on="0"/>
        <pt x="553" y="660" on="1"/>
        <pt x="532" y="660" on="0"/>
        <pt x="526" y="659" on="1"/>
        <pt x="487" y="650" on="0"/>
        <pt x="438" y="606" on="0"/>
        <pt x="406" y="563" on="1"/>
        <pt x="347" y="479" on="0"/>
        <pt x="343" y="439" on="1"/>
        <pt x="341" y="420" on="0"/>
        <pt x="344" y="415" on="1"/>
        <pt x="382" y="418" on="0"/>
        <pt x="391" y="418" on="1"/>
        <pt x="445" y="418" on="0"/>
        <pt x="465" y="399" on="1"/>
        <pt x="473" y="391" on="0"/>
        <pt x="473" y="382" on="1"/>
        <pt x="473" y="362" on="0"/>
        <pt x="426" y="339" on="0"/>
        <pt x="398" y="339" on="1"/>
        <pt x="348" y="339" on="0"/>
        <pt x="313" y="361" on="1"/>
        <pt x="306" y="366" on="0"/>
        <pt x="304" y="366" on="1"/>
        <pt x="293" y="366" on="0"/>
        <pt x="258" y="342" on="1"/>
        <pt x="225" y="320" on="0"/>
        <pt x="149" y="219" on="0"/>
        <pt x="132" y="172" on="1"/>
        <pt x="120" y="142" on="0"/>
        <pt x="120" y="117" on="1"/>
        <pt x="120" y="107" on="0"/>
        <pt x="124" y="93" on="1"/>
        <pt x="145" y="30" on="0"/>
        <pt x="252" y="30" on="1"/>
        <pt x="310" y="30" on="0"/>
        <pt x="357" y="60" on="1"/>
        <pt x="386" y="79" on="0"/>
        <pt x="442" y="150" on="0"/>
        <pt x="452" y="179" on="1"/>
        <pt x="454" y="186" on="0"/>
        <pt x="454" y="200" on="1"/>
        <pt x="454" y="212" on="0"/>
        <pt x="452" y="217" on="1"/>
        <pt x="433" y="246" on="0"/>
        <pt x="373" y="246" on="1"/>
        <pt x="353" y="246" on="0"/>
        <pt x="347" y="244" on="1"/>
        <pt x="319" y="232" on="0"/>
        <pt x="274" y="165" on="0"/>
        <pt x="266" y="123" on="1"/>
        <pt x="263" y="110" on="0"/>
        <pt x="261" y="109" on="1"/>
        <pt x="260" y="107" on="0"/>
        <pt x="234" y="97" on="0"/>
      </contour>
      <contour>
        <pt x="427" y="376" on="1"/>
        <pt x="427" y="378" on="0"/>
        <pt x="402" y="380" on="1"/>
        <pt x="386" y="380" on="0"/>
        <pt x="386" y="379" on="1"/>
        <pt x="386" y="375" on="0"/>
        <pt x="425" y="375" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 6 values pushed */
          13 1 0 12 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          26
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 76 values pushed */
          0 5 7 6 7 5 6 112 0 10 13 9 13 10 9 112 0 9 1 13 9 102 14 1 0
          12 11 12 0 11 112 0 6 0 4 8 6 4 99 0 8 0 13 10 8 13 99 0 1 0
          12 0 1 12 99 0 7 7 3 91 0 3 3 15 75 0 11 11 2 91 0 2 2 16 2
          76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          31
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 74 values pushed */
          0 5 7 6 7 5 6 112 0 10 13 9 13 10 9 112 0 9 1 13 9 102 14 1 0
          12 11 12 0 11 112 0 3 0 7 5 3 7 99 0 6 0 4 8 6 4 99 0 8 0
          13 10 8 13 99 0 1 0 12 0 1 12 99 0 11 11 2 91 0 2 2 16 2 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 75 values pushed */
          0 5 7 6 7 5 6 112 0 10 13 9 13 10 9 112 0 9 1 13 9 1 110 14 1
          0 12 11 12 0 11 112 0 3 0 7 5 3 7 99 0 6 0 4 8 6 4 99 0 8
          0 13 10 8 13 99 0 1 0 12 0 1 12 99 0 11 11 2 91 0 2 2 16 2 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 35 values pushed */
          1 0 143 142 131 129 120 118 109 107 105 103 98 94 87 85 74 72 60 59 52 50 43 40 21
          19 11 9 0 139 1 139 15 6 20
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="F" xMin="39" yMin="-36" xMax="990" yMax="735">
      <contour>
        <pt x="977" y="651" on="1"/>
        <pt x="990" y="651" on="0"/>
        <pt x="990" y="644" on="1"/>
        <pt x="990" y="639" on="0"/>
        <pt x="970" y="611" on="1"/>
        <pt x="952" y="585" on="0"/>
        <pt x="948" y="581" on="1"/>
        <pt x="947" y="580" on="0"/>
        <pt x="938" y="580" on="1"/>
        <pt x="911" y="580" on="0"/>
        <pt x="870" y="589" on="1"/>
        <pt x="839" y="597" on="0"/>
        <pt x="779" y="623" on="1"/>
        <pt x="704" y="655" on="0"/>
        <pt x="663" y="661" on="1"/>
        <pt x="653" y="663" on="0"/>
        <pt x="617" y="663" on="1"/>
        <pt x="556" y="663" on="0"/>
        <pt x="504" y="645" on="1"/>
        <pt x="395" y="607" on="0"/>
        <pt x="331" y="511" on="1"/>
        <pt x="299" y="464" on="0"/>
        <pt x="299" y="431" on="1"/>
        <pt x="299" y="387" on="0"/>
        <pt x="362" y="387" on="1"/>
        <pt x="423" y="387" on="0"/>
        <pt x="504" y="440" on="0"/>
        <pt x="532" y="496" on="1"/>
        <pt x="551" y="536" on="0"/>
        <pt x="551" y="563" on="1"/>
        <pt x="551" y="565" on="0"/>
        <pt x="548" y="587" on="0"/>
        <pt x="549" y="590" on="1"/>
        <pt x="551" y="592" on="0"/>
        <pt x="575" y="610" on="0"/>
        <pt x="578" y="611" on="1"/>
        <pt x="582" y="612" on="0"/>
        <pt x="590" y="606" on="1"/>
        <pt x="616" y="588" on="0"/>
        <pt x="616" y="548" on="1"/>
        <pt x="616" y="534" on="0"/>
        <pt x="615" y="528" on="1"/>
        <pt x="601" y="465" on="0"/>
        <pt x="554" y="423" on="1"/>
        <pt x="467" y="351" on="0"/>
        <pt x="349" y="351" on="1"/>
        <pt x="258" y="351" on="0"/>
        <pt x="258" y="428" on="1"/>
        <pt x="258" y="442" on="0"/>
        <pt x="259" y="448" on="1"/>
        <pt x="268" y="491" on="0"/>
        <pt x="304" y="539" on="1"/>
        <pt x="362" y="615" on="0"/>
        <pt x="551" y="726" on="0"/>
        <pt x="637" y="734" on="1"/>
        <pt x="644" y="735" on="0"/>
        <pt x="661" y="735" on="1"/>
        <pt x="690" y="735" on="0"/>
        <pt x="711" y="731" on="1"/>
        <pt x="754" y="723" on="0"/>
        <pt x="821" y="694" on="1"/>
        <pt x="881" y="668" on="0"/>
        <pt x="913" y="660" on="1"/>
        <pt x="945" y="651" on="0"/>
      </contour>
      <contour>
        <pt x="80" y="83" on="1"/>
        <pt x="76" y="69" on="0"/>
        <pt x="76" y="62" on="1"/>
        <pt x="76" y="44" on="0"/>
        <pt x="90" y="32" on="1"/>
        <pt x="118" y="0" on="0"/>
        <pt x="207" y="0" on="1"/>
        <pt x="248" y="0" on="0"/>
        <pt x="290" y="26" on="1"/>
        <pt x="342" y="58" on="0"/>
        <pt x="408" y="133" on="1"/>
        <pt x="447" y="180" on="0"/>
        <pt x="494" y="248" on="1"/>
        <pt x="501" y="258" on="1"/>
        <pt x="495" y="258" on="1"/>
        <pt x="456" y="252" on="0"/>
        <pt x="422" y="242" on="1"/>
        <pt x="353" y="222" on="0"/>
        <pt x="330" y="195" on="1"/>
        <pt x="324" y="187" on="0"/>
        <pt x="305" y="187" on="1"/>
        <pt x="292" y="187" on="0"/>
        <pt x="286" y="193" on="0"/>
        <pt x="286" y="196" on="1"/>
        <pt x="286" y="202" on="0"/>
        <pt x="301" y="217" on="1"/>
        <pt x="327" y="242" on="0"/>
        <pt x="457" y="287" on="0"/>
        <pt x="511" y="294" on="1"/>
        <pt x="527" y="296" on="0"/>
        <pt x="527" y="297" on="1"/>
        <pt x="545" y="324" on="0"/>
        <pt x="567" y="356" on="1"/>
        <pt x="624" y="441" on="0"/>
        <pt x="663" y="494" on="0"/>
        <pt x="688" y="521" on="1"/>
        <pt x="742" y="579" on="0"/>
        <pt x="788" y="609" on="1"/>
        <pt x="790" y="610" on="0"/>
        <pt x="792" y="612" on="0"/>
        <pt x="794" y="613" on="0"/>
        <pt x="795" y="613" on="1"/>
        <pt x="799" y="613" on="0"/>
        <pt x="808" y="594" on="0"/>
        <pt x="808" y="587" on="1"/>
        <pt x="808" y="582" on="0"/>
        <pt x="791" y="562" on="1"/>
        <pt x="751" y="514" on="0"/>
        <pt x="711" y="458" on="1"/>
        <pt x="672" y="403" on="0"/>
        <pt x="628" y="305" on="1"/>
        <pt x="626" y="300" on="1"/>
        <pt x="637" y="300" on="1"/>
        <pt x="663" y="302" on="0"/>
        <pt x="685" y="306" on="1"/>
        <pt x="697" y="308" on="1"/>
        <pt x="703" y="317" on="1"/>
        <pt x="745" y="376" on="0"/>
        <pt x="792" y="400" on="1"/>
        <pt x="806" y="406" on="0"/>
        <pt x="818" y="406" on="1"/>
        <pt x="849" y="406" on="0"/>
        <pt x="849" y="375" on="1"/>
        <pt x="848" y="362" on="0"/>
        <pt x="838" y="347" on="1"/>
        <pt x="817" y="316" on="0"/>
        <pt x="762" y="296" on="1"/>
        <pt x="748" y="291" on="0"/>
        <pt x="747" y="290" on="1"/>
        <pt x="744" y="289" on="0"/>
        <pt x="727" y="244" on="0"/>
        <pt x="724" y="241" on="1"/>
        <pt x="722" y="240" on="0"/>
        <pt x="682" y="224" on="0"/>
        <pt x="646" y="210" on="0"/>
        <pt x="645" y="210" on="1"/>
        <pt x="638" y="210" on="0"/>
        <pt x="638" y="218" on="1"/>
        <pt x="638" y="223" on="0"/>
        <pt x="654" y="246" on="1"/>
        <pt x="671" y="271" on="0"/>
        <pt x="668" y="271" on="1"/>
        <pt x="663" y="270" on="0"/>
        <pt x="624" y="264" on="1"/>
        <pt x="607" y="263" on="1"/>
        <pt x="566" y="193" on="0"/>
        <pt x="529" y="152" on="1"/>
        <pt x="505" y="123" on="0"/>
        <pt x="467" y="90" on="1"/>
        <pt x="359" y="-2" on="0"/>
        <pt x="256" y="-29" on="1"/>
        <pt x="227" y="-36" on="0"/>
        <pt x="193" y="-36" on="1"/>
        <pt x="129" y="-36" on="0"/>
        <pt x="39" y="5" on="0"/>
        <pt x="39" y="50" on="1"/>
        <pt x="39" y="98" on="0"/>
        <pt x="76" y="135" on="1"/>
        <pt x="101" y="156" on="0"/>
        <pt x="128" y="158" on="1"/>
        <pt x="171" y="158" on="0"/>
        <pt x="171" y="121" on="1"/>
        <pt x="171" y="100" on="0"/>
        <pt x="131" y="75" on="0"/>
        <pt x="107" y="75" on="1"/>
        <pt x="91" y="75" on="0"/>
      </contour>
      <contour>
        <pt x="775" y="335" on="1"/>
        <pt x="792" y="347" on="0"/>
        <pt x="806" y="368" on="1"/>
        <pt x="805" y="369" on="0"/>
        <pt x="804" y="369" on="1"/>
        <pt x="800" y="369" on="0"/>
        <pt x="791" y="360" on="1"/>
        <pt x="774" y="336" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 20 values pushed */
          29 1 8 1 172 126 2 4 3 116 1 9 4 141 77 2 7 9 4 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          9
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 75 values pushed */
          13 1 0 2 1 2 0 1 112 0 1 8 2 1 8 110 0 8 3 2 8 3 110 0 9
          4 7 4 9 7 112 0 7 11 4 7 11 110 0 3 0 4 9 3 4 99 0 11 0 12
          6 11 12 99 0 2 2 5 91 0 5 5 15 75 0 6 6 10 91 0 10 10 16 10 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          12
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 75 values pushed */
          13 1 0 2 1 2 0 1 112 0 1 8 2 1 8 110 0 8 3 2 8 3 110 0 9
          4 7 4 9 7 112 0 7 11 4 7 11 110 0 3 0 4 9 3 4 99 0 11 0 12
          6 11 12 99 0 2 2 5 91 0 5 5 15 75 0 6 6 10 91 0 10 10 20 10 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          13
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 75 values pushed */
          13 1 0 2 1 2 0 1 112 0 1 8 2 1 8 110 0 8 3 2 8 3 110 0 9
          4 7 4 9 7 112 0 7 11 4 7 11 110 0 3 0 4 9 3 4 99 0 11 0 12
          6 11 12 99 0 2 2 5 91 0 5 5 15 75 0 6 6 10 91 0 10 10 16 10 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          26
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 75 values pushed */
          13 1 0 2 1 2 0 1 112 0 1 8 2 1 8 110 0 8 3 2 8 3 110 0 9
          4 7 4 9 7 112 0 7 11 4 7 11 110 0 3 0 4 9 3 4 99 0 11 0 12
          6 11 12 99 0 2 2 5 91 0 5 5 15 75 0 6 6 10 91 0 10 10 20 10 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 72 values pushed */
          13 1 0 2 1 2 0 1 112 0 1 8 2 1 8 110 0 8 3 2 8 3 110 0 9
          4 7 4 9 7 112 0 7 11 4 7 11 110 0 3 0 4 9 3 4 99 0 11 0 12
          6 11 12 99 0 6 0 10 6 10 95 0 2 2 5 91 0 5 5 15 2 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 33 values pushed */
          1 0 169 167 164 163 157 155 148 147 125 123 85 83 71 69 57 54 46 44 25 23 17 15 9
          7 0 63 1 63 14 6 20
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="G" xMin="12" yMin="-37" xMax="738" yMax="717">
      <contour>
        <pt x="206" y="318" on="1"/>
        <pt x="249" y="318" on="0"/>
        <pt x="249" y="322" on="0"/>
        <pt x="252" y="331" on="1"/>
        <pt x="260" y="362" on="0"/>
        <pt x="282" y="399" on="1"/>
        <pt x="313" y="448" on="0"/>
        <pt x="419" y="572" on="0"/>
        <pt x="465" y="610" on="1"/>
        <pt x="572" y="703" on="0"/>
        <pt x="639" y="715" on="1"/>
        <pt x="651" y="717" on="0"/>
        <pt x="661" y="717" on="1"/>
        <pt x="734" y="717" on="0"/>
        <pt x="738" y="657" on="1"/>
        <pt x="738" y="643" on="0"/>
        <pt x="736" y="635" on="1"/>
        <pt x="729" y="608" on="0"/>
        <pt x="704" y="577" on="1"/>
        <pt x="616" y="459" on="0"/>
        <pt x="477" y="375" on="1"/>
        <pt x="411" y="334" on="0"/>
        <pt x="349" y="312" on="1"/>
        <pt x="333" y="306" on="1"/>
        <pt x="331" y="304" on="0"/>
        <pt x="323" y="276" on="0"/>
        <pt x="323" y="267" on="1"/>
        <pt x="323" y="229" on="0"/>
        <pt x="368" y="229" on="1"/>
        <pt x="416" y="229" on="0"/>
        <pt x="480" y="287" on="1"/>
        <pt x="483" y="289" on="0"/>
        <pt x="605" y="416" on="0"/>
        <pt x="638" y="435" on="1"/>
        <pt x="642" y="437" on="0"/>
        <pt x="644" y="437" on="1"/>
        <pt x="651" y="437" on="0"/>
        <pt x="658" y="417" on="0"/>
        <pt x="658" y="409" on="1"/>
        <pt x="657" y="407" on="0"/>
        <pt x="653" y="403" on="1"/>
        <pt x="631" y="388" on="0"/>
        <pt x="609" y="360" on="0"/>
        <pt x="595" y="326" on="1"/>
        <pt x="582" y="293" on="0"/>
        <pt x="570" y="276" on="1"/>
        <pt x="545" y="239" on="0"/>
        <pt x="523" y="179" on="1"/>
        <pt x="499" y="112" on="0"/>
        <pt x="473" y="77" on="1"/>
        <pt x="439" y="28" on="0"/>
        <pt x="299" y="-37" on="0"/>
        <pt x="231" y="-37" on="1"/>
        <pt x="172" y="-37" on="0"/>
        <pt x="88" y="-6" on="0"/>
        <pt x="74" y="21" on="1"/>
        <pt x="67" y="35" on="0"/>
        <pt x="67" y="53" on="1"/>
        <pt x="67" y="73" on="0"/>
        <pt x="90" y="121" on="0"/>
        <pt x="103" y="134" on="1"/>
        <pt x="127" y="158" on="0"/>
        <pt x="159" y="158" on="1"/>
        <pt x="177" y="158" on="0"/>
        <pt x="200" y="136" on="0"/>
        <pt x="200" y="102" on="0"/>
        <pt x="157" y="75" on="0"/>
        <pt x="136" y="75" on="1"/>
        <pt x="125" y="75" on="0"/>
        <pt x="109" y="81" on="1"/>
        <pt x="108" y="81" on="0"/>
        <pt x="106" y="79" on="0"/>
        <pt x="105" y="73" on="0"/>
        <pt x="105" y="66" on="0"/>
        <pt x="105" y="62" on="1"/>
        <pt x="105" y="51" on="0"/>
        <pt x="108" y="45" on="1"/>
        <pt x="118" y="25" on="0"/>
        <pt x="190" y="1" on="0"/>
        <pt x="238" y="1" on="1"/>
        <pt x="258" y="1" on="0"/>
        <pt x="266" y="3" on="1"/>
        <pt x="292" y="9" on="0"/>
        <pt x="319" y="32" on="1"/>
        <pt x="349" y="55" on="0"/>
        <pt x="393" y="115" on="0"/>
        <pt x="436" y="190" on="1"/>
        <pt x="458" y="228" on="0"/>
        <pt x="460" y="232" on="1"/>
        <pt x="465" y="239" on="1"/>
        <pt x="465" y="240" on="0"/>
        <pt x="455" y="232" on="1"/>
        <pt x="414" y="201" on="0"/>
        <pt x="377" y="194" on="1"/>
        <pt x="363" y="192" on="0"/>
        <pt x="354" y="192" on="1"/>
        <pt x="307" y="192" on="0"/>
        <pt x="248" y="237" on="0"/>
        <pt x="245" y="276" on="1"/>
        <pt x="245" y="284" on="0"/>
        <pt x="242" y="284" on="1"/>
        <pt x="220" y="280" on="0"/>
        <pt x="187" y="280" on="1"/>
        <pt x="93" y="280" on="0"/>
        <pt x="45" y="328" on="1"/>
        <pt x="12" y="361" on="0"/>
        <pt x="12" y="409" on="1"/>
        <pt x="12" y="448" on="0"/>
        <pt x="34" y="492" on="1"/>
        <pt x="70" y="561" on="0"/>
        <pt x="142" y="617" on="1"/>
        <pt x="229" y="683" on="0"/>
        <pt x="295" y="683" on="1"/>
        <pt x="308" y="683" on="0"/>
        <pt x="308" y="675" on="1"/>
        <pt x="308" y="671" on="0"/>
        <pt x="300" y="660" on="1"/>
        <pt x="290" y="646" on="0"/>
        <pt x="282" y="646" on="1"/>
        <pt x="266" y="646" on="0"/>
        <pt x="240" y="633" on="1"/>
        <pt x="182" y="606" on="0"/>
        <pt x="118" y="511" on="1"/>
        <pt x="76" y="448" on="0"/>
        <pt x="76" y="400" on="1"/>
        <pt x="76" y="382" on="0"/>
        <pt x="83" y="369" on="1"/>
        <pt x="107" y="318" on="0"/>
      </contour>
      <contour>
        <pt x="677" y="660" on="1"/>
        <pt x="677" y="680" on="0"/>
        <pt x="646" y="680" on="1"/>
        <pt x="616" y="680" on="0"/>
        <pt x="565" y="629" on="1"/>
        <pt x="537" y="601" on="0"/>
        <pt x="514" y="571" on="1"/>
        <pt x="360" y="369" on="0"/>
        <pt x="360" y="355" on="1"/>
        <pt x="366" y="357" on="0"/>
        <pt x="386" y="367" on="1"/>
        <pt x="542" y="446" on="0"/>
        <pt x="656" y="614" on="1"/>
        <pt x="677" y="645" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 14 values pushed */
          136 1 0 10 89 1 2 8 69 1 5 4 3 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          9
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 54 values pushed */
          0 9 0 10 0 9 10 99 12 1 0 0 8 2 0 8 99 0 2 0 7 4 2 7 99
          0 4 0 5 6 4 5 99 0 11 11 1 91 0 1 1 15 75 0 6 6 3 91 0 3
          3 20 3 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          11
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 54 values pushed */
          0 9 0 10 0 9 10 99 12 1 0 0 8 2 0 8 99 0 2 0 7 4 2 7 99
          0 4 0 5 6 4 5 99 0 11 11 1 91 0 1 1 15 75 0 6 6 3 91 0 3
          3 16 3 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          13
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 54 values pushed */
          0 9 0 10 0 9 10 99 12 1 0 0 8 2 0 8 99 0 2 0 7 4 2 7 99
          0 4 0 5 6 4 5 99 0 11 11 1 91 0 1 1 15 75 0 6 6 3 91 0 3
          3 20 3 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          14
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 54 values pushed */
          0 9 0 10 0 9 10 99 12 1 0 0 8 2 0 8 99 0 2 0 7 4 2 7 99
          0 4 0 5 6 4 5 99 0 11 11 1 91 0 1 1 15 75 0 6 6 3 91 0 3
          3 16 3 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          25
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 54 values pushed */
          0 9 0 10 0 9 10 99 12 1 0 0 8 2 0 8 99 0 2 0 7 4 2 7 99
          0 4 0 5 6 4 5 99 0 11 11 1 91 0 1 1 15 75 0 6 6 3 91 0 3
          3 20 3 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 51 values pushed */
          0 9 0 10 0 9 10 99 12 1 0 0 8 2 0 8 99 0 2 0 7 4 2 7 99
          0 4 0 5 6 4 5 99 0 6 0 3 6 3 95 0 11 11 1 91 0 1 1 15 11
          76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 31 values pushed */
          1 0 131 129 119 117 113 111 103 101 96 94 80 78 68 66 63 61 53 51 29 27 13 11 0
          127 1 127 13 6 20
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="H" xMin="29" yMin="-36" xMax="1241" yMax="717">
      <contour>
        <pt x="100" y="75" on="1"/>
        <pt x="88" y="75" on="0"/>
        <pt x="72" y="82" on="1"/>
        <pt x="67" y="82" on="0"/>
        <pt x="67" y="60" on="1"/>
        <pt x="67" y="20" on="0"/>
        <pt x="118" y="7" on="1"/>
        <pt x="144" y="0" on="0"/>
        <pt x="170" y="0" on="1"/>
        <pt x="173" y="0" on="0"/>
        <pt x="183" y="1" on="0"/>
        <pt x="185" y="1" on="1"/>
        <pt x="266" y="15" on="0"/>
        <pt x="385" y="177" on="1"/>
        <pt x="444" y="260" on="0"/>
        <pt x="518" y="357" on="1"/>
        <pt x="504" y="357" on="0"/>
        <pt x="470" y="347" on="1"/>
        <pt x="364" y="321" on="0"/>
        <pt x="308" y="253" on="1"/>
        <pt x="304" y="248" on="0"/>
        <pt x="297" y="239" on="0"/>
        <pt x="295" y="237" on="1"/>
        <pt x="278" y="237" on="1"/>
        <pt x="256" y="237" on="0"/>
        <pt x="256" y="243" on="1"/>
        <pt x="256" y="246" on="0"/>
        <pt x="263" y="256" on="1"/>
        <pt x="346" y="368" on="0"/>
        <pt x="533" y="393" on="1"/>
        <pt x="551" y="396" on="0"/>
        <pt x="552" y="398" on="1"/>
        <pt x="556" y="402" on="0"/>
        <pt x="595" y="449" on="0"/>
        <pt x="600" y="454" on="1"/>
        <pt x="602" y="457" on="0"/>
        <pt x="607" y="463" on="0"/>
        <pt x="608" y="465" on="1"/>
        <pt x="610" y="467" on="1"/>
        <pt x="603" y="465" on="0"/>
        <pt x="596" y="464" on="1"/>
        <pt x="560" y="455" on="0"/>
        <pt x="532" y="455" on="1"/>
        <pt x="447" y="455" on="0"/>
        <pt x="447" y="498" on="1"/>
        <pt x="447" y="512" on="0"/>
        <pt x="459" y="531" on="1"/>
        <pt x="479" y="562" on="0"/>
        <pt x="479" y="579" on="1"/>
        <pt x="479" y="593" on="0"/>
        <pt x="463" y="593" on="1"/>
        <pt x="448" y="593" on="0"/>
        <pt x="426" y="571" on="1"/>
        <pt x="403" y="546" on="0"/>
        <pt x="385" y="519" on="1"/>
        <pt x="374" y="504" on="0"/>
        <pt x="368" y="499" on="0"/>
        <pt x="360" y="499" on="1"/>
        <pt x="353" y="499" on="1"/>
        <pt x="331" y="499" on="0"/>
        <pt x="331" y="505" on="1"/>
        <pt x="331" y="512" on="0"/>
        <pt x="341" y="523" on="1"/>
        <pt x="395" y="598" on="0"/>
        <pt x="441" y="620" on="1"/>
        <pt x="459" y="629" on="0"/>
        <pt x="472" y="629" on="1"/>
        <pt x="480" y="629" on="1"/>
        <pt x="509" y="629" on="0"/>
        <pt x="547" y="602" on="0"/>
        <pt x="547" y="576" on="1"/>
        <pt x="547" y="555" on="0"/>
        <pt x="531" y="528" on="1"/>
        <pt x="520" y="509" on="0"/>
        <pt x="520" y="504" on="1"/>
        <pt x="520" y="493" on="0"/>
        <pt x="549" y="493" on="1"/>
        <pt x="598" y="493" on="0"/>
        <pt x="644" y="516" on="1"/>
        <pt x="664" y="526" on="0"/>
        <pt x="681" y="546" on="1"/>
        <pt x="760" y="630" on="0"/>
        <pt x="821" y="690" on="1"/>
        <pt x="849" y="717" on="0"/>
        <pt x="852" y="717" on="1"/>
        <pt x="859" y="717" on="0"/>
        <pt x="863" y="703" on="1"/>
        <pt x="866" y="694" on="0"/>
        <pt x="866" y="686" on="0"/>
        <pt x="816" y="621" on="1"/>
        <pt x="655" y="404" on="0"/>
        <pt x="656" y="403" on="1"/>
        <pt x="682" y="403" on="0"/>
        <pt x="714" y="404" on="1"/>
        <pt x="771" y="404" on="1"/>
        <pt x="780" y="416" on="1"/>
        <pt x="883" y="551" on="0"/>
        <pt x="1055" y="691" on="0"/>
        <pt x="1135" y="705" on="1"/>
        <pt x="1143" y="707" on="0"/>
        <pt x="1167" y="707" on="1"/>
        <pt x="1241" y="707" on="0"/>
        <pt x="1241" y="646" on="1"/>
        <pt x="1241" y="630" on="0"/>
        <pt x="1238" y="618" on="1"/>
        <pt x="1227" y="565" on="0"/>
        <pt x="1181" y="506" on="1"/>
        <pt x="1087" y="389" on="0"/>
        <pt x="875" y="372" on="1"/>
        <pt x="872" y="372" on="0"/>
        <pt x="864" y="371" on="0"/>
        <pt x="858" y="370" on="0"/>
        <pt x="857" y="370" on="1"/>
        <pt x="852" y="370" on="1"/>
        <pt x="826" y="334" on="1"/>
        <pt x="761" y="242" on="0"/>
        <pt x="742" y="209" on="1"/>
        <pt x="691" y="124" on="0"/>
        <pt x="691" y="76" on="1"/>
        <pt x="691" y="29" on="0"/>
        <pt x="748" y="29" on="1"/>
        <pt x="798" y="34" on="0"/>
        <pt x="867" y="129" on="1"/>
        <pt x="869" y="132" on="0"/>
        <pt x="875" y="138" on="0"/>
        <pt x="878" y="142" on="0"/>
        <pt x="880" y="144" on="1"/>
        <pt x="881" y="146" on="1"/>
        <pt x="883" y="148" on="0"/>
        <pt x="900" y="148" on="1"/>
        <pt x="917" y="148" on="1"/>
        <pt x="923" y="138" on="0"/>
        <pt x="914" y="127" on="1"/>
        <pt x="883" y="86" on="0"/>
        <pt x="855" y="60" on="1"/>
        <pt x="798" y="5" on="0"/>
        <pt x="749" y="-6" on="1"/>
        <pt x="740" y="-8" on="0"/>
        <pt x="723" y="-8" on="1"/>
        <pt x="611" y="-3" on="0"/>
        <pt x="611" y="100" on="1"/>
        <pt x="611" y="125" on="0"/>
        <pt x="618" y="152" on="1"/>
        <pt x="627" y="191" on="0"/>
        <pt x="659" y="247" on="1"/>
        <pt x="672" y="269" on="0"/>
        <pt x="724" y="341" on="1"/>
        <pt x="742" y="366" on="0"/>
        <pt x="742" y="367" on="1"/>
        <pt x="716" y="367" on="0"/>
        <pt x="685" y="366" on="1"/>
        <pt x="628" y="366" on="1"/>
        <pt x="620" y="355" on="1"/>
        <pt x="618" y="352" on="0"/>
        <pt x="558" y="268" on="1"/>
        <pt x="486" y="168" on="0"/>
        <pt x="461" y="141" on="1"/>
        <pt x="405" y="79" on="0"/>
        <pt x="273" y="-12" on="0"/>
        <pt x="215" y="-28" on="1"/>
        <pt x="188" y="-36" on="0"/>
        <pt x="153" y="-36" on="1"/>
        <pt x="53" y="-36" on="0"/>
        <pt x="32" y="25" on="1"/>
        <pt x="29" y="34" on="0"/>
        <pt x="29" y="46" on="1"/>
        <pt x="29" y="60" on="0"/>
        <pt x="34" y="78" on="1"/>
        <pt x="46" y="111" on="0"/>
        <pt x="91" y="158" on="0"/>
        <pt x="123" y="158" on="1"/>
        <pt x="141" y="158" on="0"/>
        <pt x="164" y="136" on="0"/>
        <pt x="164" y="102" on="0"/>
        <pt x="121" y="75" on="0"/>
      </contour>
      <contour>
        <pt x="1195" y="634" on="1"/>
        <pt x="1195" y="671" on="0"/>
        <pt x="1157" y="671" on="1"/>
        <pt x="1147" y="671" on="0"/>
        <pt x="1130" y="666" on="1"/>
        <pt x="1058" y="638" on="0"/>
        <pt x="932" y="476" on="1"/>
        <pt x="880" y="411" on="0"/>
        <pt x="882" y="409" on="1"/>
        <pt x="891" y="410" on="1"/>
        <pt x="900" y="411" on="0"/>
        <pt x="927" y="414" on="0"/>
        <pt x="934" y="415" on="1"/>
        <pt x="1081" y="439" on="0"/>
        <pt x="1144" y="520" on="1"/>
        <pt x="1195" y="584" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 10 values pushed */
          2 1 0 13 4 1 12 0 2 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          9
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 100 values pushed */
          0 6 5 8 5 6 8 112 0 2 15 3 15 2 3 112 0 3 17 15 3 17 110 0 13
          17 0 17 13 0 112 0 7 0 5 6 7 5 99 0 8 0 4 10 8 4 99 0 10 0
          15 2 10 15 99 0 17 19 1 0 12 17 0 99 0 9 9 15 75 0 18 18 11 91 0
          11 11 15 75 0 12 12 14 91 0 14 14 18 75 0 1 1 16 91 0 16 16 16 16 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          12
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 100 values pushed */
          0 6 5 8 5 6 8 112 0 2 15 3 15 2 3 112 0 3 17 15 3 17 110 0 13
          17 0 17 13 0 112 0 7 0 5 6 7 5 99 0 8 0 4 10 8 4 99 0 10 0
          15 2 10 15 99 0 17 19 1 0 12 17 0 99 0 9 9 15 75 0 18 18 11 91 0
          11 11 15 75 0 12 12 14 91 0 14 14 18 75 0 1 1 16 91 0 16 16 20 16 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          13
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 100 values pushed */
          0 6 5 8 5 6 8 112 0 2 15 3 15 2 3 112 0 3 17 15 3 17 110 0 13
          17 0 17 13 0 112 0 7 0 5 6 7 5 99 0 8 0 4 10 8 4 99 0 10 0
          15 2 10 15 99 0 17 19 1 0 12 17 0 99 0 9 9 15 75 0 18 18 11 91 0
          11 11 15 75 0 12 12 14 91 0 14 14 18 75 0 1 1 16 91 0 16 16 16 16 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          26
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 100 values pushed */
          0 6 5 8 5 6 8 112 0 2 15 3 15 2 3 112 0 3 17 15 3 17 110 0 13
          17 0 17 13 0 112 0 7 0 5 6 7 5 99 0 8 0 4 10 8 4 99 0 10 0
          15 2 10 15 99 0 17 19 1 0 12 17 0 99 0 9 9 15 75 0 18 18 11 91 0
          11 11 15 75 0 12 12 14 91 0 14 14 18 75 0 1 1 16 91 0 16 16 20 16 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 95 values pushed */
          0 6 5 8 5 6 8 112 0 2 15 3 15 2 3 112 0 3 17 15 3 17 110 0 13
          17 0 17 13 0 112 0 11 0 18 7 11 18 99 0 7 0 5 6 7 5 99 0 8 0
          4 10 8 4 99 0 10 0 15 2 10 15 99 0 17 19 1 0 12 17 0 99 0 1 0
          16 1 16 95 0 9 9 15 75 0 12 12 14 91 0 14 14 18 14 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 45 values pushed */
          1 0 178 176 171 169 162 160 151 147 139 137 130 129 120 119 101 99 94 90 85 83 77 75 68
          65 59 56 51 49 43 41 24 23 16 15 8 7 0 174 1 174 20 6 20
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="I" xMin="59" yMin="-17" xMax="946" yMax="717">
      <contour>
        <pt x="59" y="59" on="1"/>
        <pt x="59" y="99" on="0"/>
        <pt x="112" y="158" on="0"/>
        <pt x="148" y="158" on="1"/>
        <pt x="166" y="158" on="0"/>
        <pt x="189" y="136" on="0"/>
        <pt x="189" y="102" on="0"/>
        <pt x="146" y="75" on="0"/>
        <pt x="125" y="75" on="1"/>
        <pt x="112" y="75" on="0"/>
        <pt x="104" y="79" on="1"/>
        <pt x="97" y="81" on="0"/>
        <pt x="96" y="79" on="0"/>
        <pt x="96" y="72" on="1"/>
        <pt x="96" y="50" on="0"/>
        <pt x="122" y="36" on="1"/>
        <pt x="151" y="21" on="0"/>
        <pt x="204" y="21" on="1"/>
        <pt x="216" y="21" on="1"/>
        <pt x="232" y="21" on="0"/>
        <pt x="248" y="26" on="1"/>
        <pt x="327" y="48" on="0"/>
        <pt x="411" y="134" on="1"/>
        <pt x="439" y="161" on="0"/>
        <pt x="459" y="187" on="1"/>
        <pt x="487" y="220" on="0"/>
        <pt x="487" y="225" on="1"/>
        <pt x="398" y="255" on="0"/>
        <pt x="398" y="342" on="1"/>
        <pt x="398" y="355" on="0"/>
        <pt x="400" y="371" on="1"/>
        <pt x="411" y="429" on="0"/>
        <pt x="499" y="555" on="0"/>
        <pt x="636" y="628" on="0"/>
        <pt x="748" y="659" on="1"/>
        <pt x="877" y="695" on="0"/>
        <pt x="918" y="712" on="1"/>
        <pt x="930" y="717" on="0"/>
        <pt x="933" y="717" on="1"/>
        <pt x="937" y="717" on="0"/>
        <pt x="946" y="698" on="0"/>
        <pt x="946" y="689" on="1"/>
        <pt x="946" y="685" on="0"/>
        <pt x="936" y="678" on="1"/>
        <pt x="926" y="671" on="0"/>
        <pt x="918" y="665" on="1"/>
        <pt x="805" y="580" on="0"/>
        <pt x="729" y="480" on="1"/>
        <pt x="691" y="429" on="0"/>
        <pt x="651" y="337" on="1"/>
        <pt x="615" y="260" on="1"/>
        <pt x="623" y="262" on="1"/>
        <pt x="695" y="286" on="0"/>
        <pt x="743" y="351" on="1"/>
        <pt x="769" y="384" on="0"/>
        <pt x="769" y="426" on="1"/>
        <pt x="769" y="448" on="0"/>
        <pt x="767" y="459" on="1"/>
        <pt x="763" y="483" on="0"/>
        <pt x="766" y="486" on="1"/>
        <pt x="769" y="488" on="0"/>
        <pt x="794" y="498" on="0"/>
        <pt x="797" y="498" on="1"/>
        <pt x="802" y="498" on="0"/>
        <pt x="805" y="490" on="0"/>
        <pt x="808" y="472" on="1"/>
        <pt x="813" y="442" on="0"/>
        <pt x="813" y="425" on="1"/>
        <pt x="813" y="396" on="0"/>
        <pt x="799" y="368" on="1"/>
        <pt x="775" y="318" on="0"/>
        <pt x="663" y="238" on="0"/>
        <pt x="605" y="224" on="1"/>
        <pt x="592" y="220" on="1"/>
        <pt x="584" y="209" on="1"/>
        <pt x="547" y="155" on="0"/>
        <pt x="426" y="56" on="0"/>
        <pt x="358" y="25" on="1"/>
        <pt x="270" y="-17" on="0"/>
        <pt x="191" y="-17" on="1"/>
        <pt x="142" y="-17" on="0"/>
        <pt x="68" y="14" on="0"/>
        <pt x="60" y="46" on="1"/>
        <pt x="59" y="50" on="0"/>
      </contour>
      <contour>
        <pt x="800" y="630" on="1"/>
        <pt x="817" y="643" on="0"/>
        <pt x="817" y="644" on="1"/>
        <pt x="816" y="644" on="1"/>
        <pt x="813" y="644" on="0"/>
        <pt x="732" y="618" on="1"/>
        <pt x="609" y="576" on="0"/>
        <pt x="550" y="516" on="1"/>
        <pt x="539" y="504" on="0"/>
        <pt x="518" y="476" on="1"/>
        <pt x="471" y="405" on="0"/>
        <pt x="462" y="357" on="1"/>
        <pt x="460" y="350" on="0"/>
        <pt x="460" y="334" on="1"/>
        <pt x="460" y="287" on="0"/>
        <pt x="500" y="267" on="1"/>
        <pt x="510" y="263" on="1"/>
        <pt x="513" y="263" on="0"/>
        <pt x="523" y="278" on="1"/>
        <pt x="527" y="284" on="0"/>
        <pt x="564" y="342" on="1"/>
        <pt x="628" y="444" on="0"/>
        <pt x="685" y="522" on="0"/>
        <pt x="723" y="561" on="1"/>
        <pt x="761" y="599" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 40 values pushed */
          13 0 2 2 1 1 74 100 50 41 3 0 72 0 0 0 1 2 0 1 99 0 2 2 3
          91 0 3 3 20 3 76 80 78 55 35 34 4 6 23
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="J" xMin="92" yMin="-314" xMax="1133" yMax="717">
      <contour>
        <pt x="1108" y="713" on="1"/>
        <pt x="1118" y="717" on="0"/>
        <pt x="1119" y="717" on="1"/>
        <pt x="1126" y="717" on="0"/>
        <pt x="1130" y="702" on="1"/>
        <pt x="1133" y="693" on="0"/>
        <pt x="1133" y="689" on="1"/>
        <pt x="1133" y="686" on="0"/>
        <pt x="1115" y="673" on="1"/>
        <pt x="965" y="564" on="0"/>
        <pt x="884" y="434" on="1"/>
        <pt x="860" y="395" on="0"/>
        <pt x="828" y="326" on="1"/>
        <pt x="825" y="320" on="0"/>
        <pt x="815" y="298" on="0"/>
        <pt x="807" y="281" on="0"/>
        <pt x="805" y="277" on="1"/>
        <pt x="802" y="271" on="0"/>
        <pt x="799" y="263" on="0"/>
        <pt x="797" y="259" on="0"/>
        <pt x="798" y="259" on="1"/>
        <pt x="804" y="261" on="0"/>
        <pt x="811" y="263" on="1"/>
        <pt x="859" y="279" on="0"/>
        <pt x="900" y="317" on="1"/>
        <pt x="946" y="361" on="0"/>
        <pt x="955" y="406" on="1"/>
        <pt x="956" y="410" on="0"/>
        <pt x="956" y="421" on="1"/>
        <pt x="956" y="440" on="0"/>
        <pt x="952" y="463" on="1"/>
        <pt x="950" y="482" on="0"/>
        <pt x="951" y="484" on="1"/>
        <pt x="953" y="486" on="0"/>
        <pt x="979" y="498" on="0"/>
        <pt x="985" y="498" on="1"/>
        <pt x="989" y="498" on="0"/>
        <pt x="994" y="473" on="1"/>
        <pt x="1000" y="441" on="0"/>
        <pt x="1000" y="423" on="1"/>
        <pt x="1000" y="403" on="0"/>
        <pt x="993" y="385" on="1"/>
        <pt x="976" y="336" on="0"/>
        <pt x="856" y="238" on="0"/>
        <pt x="790" y="223" on="1"/>
        <pt x="775" y="220" on="1"/>
        <pt x="767" y="207" on="1"/>
        <pt x="762" y="199" on="0"/>
        <pt x="665" y="77" on="0"/>
        <pt x="662" y="63" on="1"/>
        <pt x="662" y="61" on="0"/>
        <pt x="718" y="79" on="0"/>
        <pt x="793" y="119" on="0"/>
        <pt x="811" y="142" on="1"/>
        <pt x="816" y="148" on="1"/>
        <pt x="829" y="148" on="1"/>
        <pt x="841" y="148" on="0"/>
        <pt x="844" y="146" on="1"/>
        <pt x="849" y="140" on="0"/>
        <pt x="841" y="131" on="1"/>
        <pt x="827" y="112" on="0"/>
        <pt x="804" y="94" on="1"/>
        <pt x="750" y="55" on="0"/>
        <pt x="644" y="22" on="1"/>
        <pt x="625" y="17" on="0"/>
        <pt x="622" y="14" on="1"/>
        <pt x="620" y="11" on="1"/>
        <pt x="617" y="8" on="0"/>
        <pt x="607" y="-2" on="0"/>
        <pt x="604" y="-6" on="1"/>
        <pt x="479" y="-148" on="0"/>
        <pt x="344" y="-242" on="1"/>
        <pt x="261" y="-299" on="0"/>
        <pt x="201" y="-312" on="1"/>
        <pt x="190" y="-314" on="0"/>
        <pt x="171" y="-314" on="1"/>
        <pt x="92" y="-314" on="0"/>
        <pt x="92" y="-245" on="1"/>
        <pt x="92" y="-225" on="0"/>
        <pt x="94" y="-218" on="1"/>
        <pt x="102" y="-184" on="0"/>
        <pt x="147" y="-114" on="0"/>
        <pt x="175" y="-93" on="1"/>
        <pt x="237" y="-48" on="0"/>
        <pt x="352" y="-16" on="1"/>
        <pt x="403" y="-1" on="0"/>
        <pt x="509" y="22" on="1"/>
        <pt x="532" y="27" on="1"/>
        <pt x="547" y="47" on="1"/>
        <pt x="673" y="219" on="0"/>
        <pt x="673" y="225" on="1"/>
        <pt x="670" y="227" on="0"/>
        <pt x="666" y="228" on="1"/>
        <pt x="629" y="241" on="0"/>
        <pt x="584" y="299" on="0"/>
        <pt x="584" y="341" on="1"/>
        <pt x="584" y="370" on="0"/>
        <pt x="596" y="405" on="1"/>
        <pt x="623" y="486" on="0"/>
        <pt x="686" y="544" on="1"/>
        <pt x="726" y="581" on="0"/>
        <pt x="834" y="631" on="0"/>
        <pt x="929" y="658" on="1"/>
        <pt x="1054" y="693" on="0"/>
      </contour>
      <contour>
        <pt x="1003" y="643" on="1"/>
        <pt x="1005" y="645" on="1"/>
        <pt x="1004" y="645" on="0"/>
        <pt x="924" y="620" on="1"/>
        <pt x="821" y="586" on="0"/>
        <pt x="764" y="541" on="1"/>
        <pt x="729" y="512" on="0"/>
        <pt x="664" y="414" on="0"/>
        <pt x="652" y="372" on="1"/>
        <pt x="646" y="351" on="0"/>
        <pt x="646" y="332" on="1"/>
        <pt x="646" y="293" on="0"/>
        <pt x="677" y="273" on="1"/>
        <pt x="695" y="260" on="0"/>
        <pt x="698" y="263" on="1"/>
        <pt x="735" y="320" on="1"/>
        <pt x="811" y="440" on="0"/>
        <pt x="873" y="524" on="0"/>
        <pt x="957" y="608" on="0"/>
      </contour>
      <contour>
        <pt x="127" y="-232" on="1"/>
        <pt x="127" y="-278" on="0"/>
        <pt x="184" y="-278" on="1"/>
        <pt x="187" y="-278" on="0"/>
        <pt x="194" y="-277" on="0"/>
        <pt x="196" y="-277" on="1"/>
        <pt x="239" y="-271" on="0"/>
        <pt x="309" y="-214" on="1"/>
        <pt x="420" y="-118" on="0"/>
        <pt x="497" y="-16" on="1"/>
        <pt x="498" y="-15" on="1"/>
        <pt x="496" y="-15" on="1"/>
        <pt x="492" y="-15" on="0"/>
        <pt x="401" y="-37" on="1"/>
        <pt x="223" y="-82" on="0"/>
        <pt x="174" y="-133" on="1"/>
        <pt x="160" y="-149" on="0"/>
        <pt x="132" y="-201" on="0"/>
        <pt x="128" y="-219" on="1"/>
        <pt x="127" y="-223" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 56 values pushed */
          26 1 0 1 132 123 49 3 4 2 2 74 0 1 0 1 114 0 0 2 0 114 0 2 4
          2 114 0 4 3 3 4 87 0 4 4 3 91 0 3 4 3 79 125 124 76 74 56 54 36
          34 22 18 5 6 20
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="K" xMin="29" yMin="-37" xMax="1204" yMax="717">
      <contour>
        <pt x="615" y="297" on="1"/>
        <pt x="608" y="297" on="0"/>
        <pt x="587" y="301" on="0"/>
        <pt x="584" y="301" on="1"/>
        <pt x="582" y="301" on="0"/>
        <pt x="519" y="213" on="1"/>
        <pt x="442" y="102" on="0"/>
        <pt x="331" y="28" on="1"/>
        <pt x="233" y="-37" on="0"/>
        <pt x="155" y="-37" on="1"/>
        <pt x="102" y="-37" on="0"/>
        <pt x="31" y="3" on="0"/>
        <pt x="29" y="44" on="1"/>
        <pt x="29" y="63" on="0"/>
        <pt x="34" y="78" on="1"/>
        <pt x="46" y="111" on="0"/>
        <pt x="91" y="158" on="0"/>
        <pt x="123" y="158" on="1"/>
        <pt x="141" y="158" on="0"/>
        <pt x="164" y="136" on="0"/>
        <pt x="164" y="102" on="0"/>
        <pt x="121" y="75" on="0"/>
        <pt x="100" y="75" on="1"/>
        <pt x="88" y="75" on="0"/>
        <pt x="72" y="82" on="1"/>
        <pt x="68" y="82" on="0"/>
        <pt x="68" y="59" on="1"/>
        <pt x="68" y="29" on="0"/>
        <pt x="123" y="0" on="0"/>
        <pt x="167" y="0" on="1"/>
        <pt x="187" y="0" on="0"/>
        <pt x="205" y="7" on="1"/>
        <pt x="248" y="22" on="0"/>
        <pt x="298" y="72" on="1"/>
        <pt x="343" y="118" on="0"/>
        <pt x="412" y="214" on="1"/>
        <pt x="490" y="323" on="0"/>
        <pt x="563" y="410" on="1"/>
        <pt x="570" y="419" on="0"/>
        <pt x="595" y="447" on="0"/>
        <pt x="612" y="468" on="0"/>
        <pt x="615" y="472" on="1"/>
        <pt x="605" y="468" on="1"/>
        <pt x="568" y="456" on="0"/>
        <pt x="533" y="456" on="1"/>
        <pt x="506" y="456" on="0"/>
        <pt x="479" y="467" on="0"/>
        <pt x="463" y="483" on="1"/>
        <pt x="451" y="496" on="0"/>
        <pt x="451" y="508" on="1"/>
        <pt x="451" y="519" on="0"/>
        <pt x="467" y="543" on="1"/>
        <pt x="486" y="571" on="0"/>
        <pt x="486" y="581" on="1"/>
        <pt x="486" y="593" on="0"/>
        <pt x="465" y="593" on="1"/>
        <pt x="457" y="593" on="0"/>
        <pt x="444" y="585" on="1"/>
        <pt x="421" y="568" on="0"/>
        <pt x="379" y="511" on="1"/>
        <pt x="366" y="493" on="0"/>
        <pt x="364" y="493" on="1"/>
        <pt x="364" y="492" on="0"/>
        <pt x="347" y="492" on="1"/>
        <pt x="345" y="492" on="0"/>
        <pt x="343" y="492" on="1"/>
        <pt x="326" y="492" on="0"/>
        <pt x="326" y="499" on="1"/>
        <pt x="326" y="504" on="0"/>
        <pt x="349" y="533" on="1"/>
        <pt x="379" y="570" on="0"/>
        <pt x="444" y="624" on="0"/>
        <pt x="466" y="629" on="1"/>
        <pt x="469" y="630" on="0"/>
        <pt x="477" y="630" on="1"/>
        <pt x="508" y="630" on="0"/>
        <pt x="547" y="601" on="0"/>
        <pt x="547" y="576" on="1"/>
        <pt x="547" y="552" on="0"/>
        <pt x="529" y="525" on="1"/>
        <pt x="521" y="512" on="0"/>
        <pt x="521" y="506" on="1"/>
        <pt x="521" y="493" on="0"/>
        <pt x="549" y="493" on="1"/>
        <pt x="606" y="493" on="0"/>
        <pt x="660" y="527" on="1"/>
        <pt x="667" y="531" on="0"/>
        <pt x="690" y="555" on="1"/>
        <pt x="696" y="562" on="0"/>
        <pt x="730" y="597" on="0"/>
        <pt x="736" y="604" on="1"/>
        <pt x="750" y="619" on="0"/>
        <pt x="804" y="673" on="0"/>
        <pt x="846" y="715" on="0"/>
        <pt x="850" y="717" on="0"/>
        <pt x="852" y="717" on="1"/>
        <pt x="858" y="717" on="0"/>
        <pt x="866" y="698" on="0"/>
        <pt x="866" y="690" on="1"/>
        <pt x="866" y="687" on="0"/>
        <pt x="812" y="615" on="1"/>
        <pt x="654" y="404" on="0"/>
        <pt x="654" y="401" on="1"/>
        <pt x="654" y="401" on="0"/>
        <pt x="656" y="402" on="1"/>
        <pt x="659" y="402" on="0"/>
        <pt x="661" y="403" on="1"/>
        <pt x="665" y="404" on="0"/>
        <pt x="680" y="404" on="1"/>
        <pt x="718" y="404" on="0"/>
        <pt x="734" y="374" on="1"/>
        <pt x="735" y="370" on="0"/>
        <pt x="743" y="376" on="1"/>
        <pt x="745" y="377" on="0"/>
        <pt x="752" y="382" on="1"/>
        <pt x="843" y="440" on="0"/>
        <pt x="947" y="583" on="1"/>
        <pt x="979" y="627" on="0"/>
        <pt x="1091" y="699" on="0"/>
        <pt x="1140" y="705" on="1"/>
        <pt x="1142" y="705" on="0"/>
        <pt x="1152" y="706" on="0"/>
        <pt x="1155" y="706" on="1"/>
        <pt x="1171" y="706" on="0"/>
        <pt x="1189" y="703" on="0"/>
        <pt x="1204" y="690" on="0"/>
        <pt x="1204" y="677" on="1"/>
        <pt x="1204" y="669" on="0"/>
        <pt x="1191" y="670" on="1"/>
        <pt x="1189" y="670" on="0"/>
        <pt x="1177" y="671" on="0"/>
        <pt x="1174" y="671" on="1"/>
        <pt x="1139" y="671" on="0"/>
        <pt x="1048" y="623" on="0"/>
        <pt x="1019" y="588" on="1"/>
        <pt x="1014" y="582" on="0"/>
        <pt x="985" y="542" on="0"/>
        <pt x="978" y="534" on="1"/>
        <pt x="930" y="474" on="0"/>
        <pt x="808" y="370" on="0"/>
        <pt x="749" y="339" on="1"/>
        <pt x="739" y="333" on="1"/>
        <pt x="736" y="322" on="1"/>
        <pt x="729" y="288" on="0"/>
        <pt x="696" y="240" on="1"/>
        <pt x="654" y="178" on="0"/>
        <pt x="638" y="131" on="1"/>
        <pt x="628" y="102" on="0"/>
        <pt x="628" y="77" on="1"/>
        <pt x="628" y="21" on="0"/>
        <pt x="681" y="21" on="1"/>
        <pt x="692" y="21" on="0"/>
        <pt x="698" y="23" on="1"/>
        <pt x="751" y="46" on="0"/>
        <pt x="817" y="134" on="1"/>
        <pt x="827" y="148" on="1"/>
        <pt x="844" y="148" on="1"/>
        <pt x="861" y="148" on="0"/>
        <pt x="864" y="146" on="1"/>
        <pt x="869" y="140" on="0"/>
        <pt x="859" y="127" on="1"/>
        <pt x="842" y="105" on="0"/>
        <pt x="814" y="77" on="1"/>
        <pt x="734" y="-3" on="0"/>
        <pt x="686" y="-14" on="1"/>
        <pt x="676" y="-17" on="0"/>
        <pt x="665" y="-17" on="1"/>
        <pt x="614" y="-17" on="0"/>
        <pt x="558" y="46" on="0"/>
        <pt x="558" y="100" on="1"/>
        <pt x="558" y="151" on="0"/>
        <pt x="584" y="203" on="1"/>
        <pt x="597" y="230" on="0"/>
        <pt x="643" y="294" on="1"/>
        <pt x="647" y="300" on="0"/>
        <pt x="645" y="300" on="1"/>
        <pt x="633" y="297" on="0"/>
      </contour>
      <contour>
        <pt x="675" y="357" on="1"/>
        <pt x="675" y="368" on="0"/>
        <pt x="665" y="368" on="1"/>
        <pt x="640" y="368" on="0"/>
        <pt x="616" y="333" on="1"/>
        <pt x="628" y="333" on="1"/>
        <pt x="637" y="334" on="0"/>
        <pt x="672" y="341" on="1"/>
        <pt x="675" y="356" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 22 values pushed */
          126 1 11 10 128 1 7 11 110 1 16 9 24 1 2 13 26 1 12 2 5 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          9
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 88 values pushed */
          0 6 8 4 8 6 4 112 0 13 1 2 1 13 2 112 0 7 0 5 8 7 5 99 0
          8 0 4 9 8 4 99 0 9 0 16 17 9 16 99 0 17 18 1 15 1 17 15 99 0
          1 0 2 12 1 2 99 0 11 11 10 91 0 10 10 15 75 0 12 12 14 91 0 14 14
          20 75 0 3 3 0 91 0 0 0 20 0 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          11
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 88 values pushed */
          0 6 8 4 8 6 4 112 0 13 1 2 1 13 2 112 0 7 0 5 8 7 5 99 0
          8 0 4 9 8 4 99 0 9 0 16 17 9 16 99 0 17 18 1 15 1 17 15 99 0
          1 0 2 12 1 2 99 0 11 11 10 91 0 10 10 15 75 0 12 12 14 91 0 14 14
          20 75 0 3 3 0 91 0 0 0 16 0 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          13
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 88 values pushed */
          0 6 8 4 8 6 4 112 0 13 1 2 1 13 2 112 0 7 0 5 8 7 5 99 0
          8 0 4 9 8 4 99 0 9 0 16 17 9 16 99 0 17 18 1 15 1 17 15 99 0
          1 0 2 12 1 2 99 0 11 11 10 91 0 10 10 15 75 0 12 12 14 91 0 14 14
          20 75 0 3 3 0 91 0 0 0 20 0 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          14
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 88 values pushed */
          0 6 8 4 8 6 4 112 0 13 1 2 1 13 2 112 0 7 0 5 8 7 5 99 0
          8 0 4 9 8 4 99 0 9 0 16 17 9 16 99 0 17 18 1 15 1 17 15 99 0
          1 0 2 12 1 2 99 0 11 11 10 91 0 10 10 15 75 0 12 12 14 91 0 14 14
          20 75 0 3 3 0 91 0 0 0 16 0 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          25
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 88 values pushed */
          0 6 8 4 8 6 4 112 0 13 1 2 1 13 2 112 0 7 0 5 8 7 5 99 0
          8 0 4 9 8 4 99 0 9 0 16 17 9 16 99 0 17 18 1 15 1 17 15 99 0
          1 0 2 12 1 2 99 0 11 11 10 91 0 10 10 15 75 0 12 12 14 91 0 14 14
          20 75 0 3 3 0 91 0 0 0 20 0 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 83 values pushed */
          0 6 8 4 8 6 4 112 0 13 1 2 1 13 2 112 0 10 0 11 7 10 11 99 0
          7 0 5 8 7 5 99 0 8 0 4 9 8 4 99 0 9 0 16 17 9 16 99 0 17
          18 1 15 1 17 15 99 0 1 0 2 12 1 2 99 0 3 0 0 3 0 95 0 12 12
          14 91 0 14 14 20 14 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 34 values pushed */
          0 0 182 181 180 178 0 176 0 176 167 165 157 155 151 149 132 130 123 121 109 101 39 24 101
          25 45 37 35 38 40 19 6 29
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="L" xMin="14" yMin="-17" xMax="1035" yMax="717">
      <contour>
        <pt x="945" y="717" on="1"/>
        <pt x="986" y="717" on="0"/>
        <pt x="1035" y="675" on="0"/>
        <pt x="1035" y="637" on="1"/>
        <pt x="1035" y="592" on="0"/>
        <pt x="995" y="530" on="1"/>
        <pt x="952" y="464" on="0"/>
        <pt x="873" y="414" on="1"/>
        <pt x="825" y="387" on="0"/>
        <pt x="798" y="376" on="1"/>
        <pt x="740" y="353" on="0"/>
        <pt x="669" y="337" on="1"/>
        <pt x="651" y="333" on="1"/>
        <pt x="650" y="333" on="0"/>
        <pt x="641" y="320" on="1"/>
        <pt x="561" y="207" on="0"/>
        <pt x="544" y="185" on="1"/>
        <pt x="498" y="126" on="0"/>
        <pt x="426" y="78" on="1"/>
        <pt x="413" y="68" on="1"/>
        <pt x="414" y="68" on="1"/>
        <pt x="488" y="47" on="0"/>
        <pt x="575" y="47" on="1"/>
        <pt x="606" y="47" on="0"/>
        <pt x="635" y="57" on="1"/>
        <pt x="710" y="81" on="0"/>
        <pt x="755" y="139" on="1"/>
        <pt x="762" y="148" on="1"/>
        <pt x="779" y="148" on="1"/>
        <pt x="802" y="148" on="0"/>
        <pt x="802" y="142" on="1"/>
        <pt x="802" y="137" on="0"/>
        <pt x="795" y="129" on="1"/>
        <pt x="763" y="86" on="0"/>
        <pt x="666" y="13" on="0"/>
        <pt x="617" y="-4" on="1"/>
        <pt x="578" y="-16" on="0"/>
        <pt x="544" y="-16" on="1"/>
        <pt x="516" y="-16" on="0"/>
        <pt x="508" y="-15" on="1"/>
        <pt x="452" y="-10" on="0"/>
        <pt x="366" y="20" on="1"/>
        <pt x="341" y="29" on="1"/>
        <pt x="331" y="24" on="1"/>
        <pt x="268" y="-4" on="0"/>
        <pt x="199" y="-15" on="1"/>
        <pt x="179" y="-17" on="0"/>
        <pt x="141" y="-17" on="1"/>
        <pt x="112" y="-17" on="0"/>
        <pt x="101" y="-16" on="1"/>
        <pt x="14" y="-12" on="0"/>
        <pt x="14" y="22" on="1"/>
        <pt x="14" y="31" on="0"/>
        <pt x="17" y="37" on="1"/>
        <pt x="39" y="81" on="0"/>
        <pt x="103" y="95" on="1"/>
        <pt x="126" y="101" on="0"/>
        <pt x="180" y="101" on="1"/>
        <pt x="235" y="101" on="0"/>
        <pt x="273" y="95" on="1"/>
        <pt x="280" y="94" on="0"/>
        <pt x="307" y="90" on="0"/>
        <pt x="329" y="86" on="0"/>
        <pt x="330" y="86" on="1"/>
        <pt x="332" y="86" on="0"/>
        <pt x="374" y="120" on="0"/>
        <pt x="389" y="135" on="1"/>
        <pt x="402" y="147" on="0"/>
        <pt x="425" y="171" on="0"/>
        <pt x="439" y="188" on="0"/>
        <pt x="462" y="219" on="0"/>
        <pt x="471" y="230" on="0"/>
        <pt x="500" y="273" on="0"/>
        <pt x="505" y="280" on="1"/>
        <pt x="535" y="322" on="1"/>
        <pt x="509" y="322" on="1"/>
        <pt x="371" y="322" on="0"/>
        <pt x="315" y="384" on="1"/>
        <pt x="289" y="415" on="0"/>
        <pt x="289" y="452" on="1"/>
        <pt x="289" y="461" on="0"/>
        <pt x="293" y="481" on="1"/>
        <pt x="301" y="519" on="0"/>
        <pt x="361" y="605" on="0"/>
        <pt x="396" y="630" on="1"/>
        <pt x="438" y="665" on="0"/>
        <pt x="534" y="704" on="0"/>
        <pt x="572" y="704" on="1"/>
        <pt x="601" y="704" on="0"/>
        <pt x="606" y="697" on="1"/>
        <pt x="610" y="692" on="0"/>
        <pt x="600" y="677" on="1"/>
        <pt x="594" y="668" on="0"/>
        <pt x="590" y="664" on="1"/>
        <pt x="588" y="664" on="1"/>
        <pt x="586" y="664" on="0"/>
        <pt x="581" y="663" on="0"/>
        <pt x="578" y="663" on="1"/>
        <pt x="543" y="661" on="0"/>
        <pt x="462" y="620" on="0"/>
        <pt x="429" y="588" on="1"/>
        <pt x="399" y="558" on="0"/>
        <pt x="363" y="487" on="0"/>
        <pt x="363" y="457" on="1"/>
        <pt x="363" y="426" on="0"/>
        <pt x="386" y="401" on="1"/>
        <pt x="417" y="371" on="0"/>
        <pt x="481" y="361" on="1"/>
        <pt x="490" y="360" on="0"/>
        <pt x="527" y="360" on="1"/>
        <pt x="562" y="360" on="1"/>
        <pt x="565" y="363" on="0"/>
        <pt x="596" y="404" on="0"/>
        <pt x="634" y="455" on="0"/>
        <pt x="641" y="464" on="1"/>
        <pt x="714" y="556" on="0"/>
        <pt x="768" y="610" on="1"/>
        <pt x="831" y="673" on="0"/>
        <pt x="878" y="697" on="1"/>
        <pt x="915" y="717" on="0"/>
      </contour>
      <contour>
        <pt x="978" y="635" on="1"/>
        <pt x="978" y="658" on="0"/>
        <pt x="961" y="674" on="0"/>
        <pt x="938" y="680" on="1"/>
        <pt x="929" y="680" on="0"/>
        <pt x="925" y="677" on="1"/>
        <pt x="880" y="651" on="0"/>
        <pt x="685" y="382" on="1"/>
        <pt x="682" y="377" on="1"/>
        <pt x="691" y="380" on="1"/>
        <pt x="829" y="417" on="0"/>
        <pt x="906" y="495" on="1"/>
        <pt x="962" y="555" on="0"/>
        <pt x="977" y="617" on="1"/>
        <pt x="978" y="622" on="0"/>
      </contour>
      <contour>
        <pt x="198" y="64" on="1"/>
        <pt x="194" y="64" on="0"/>
        <pt x="172" y="65" on="0"/>
        <pt x="160" y="65" on="0"/>
        <pt x="141" y="64" on="0"/>
        <pt x="140" y="64" on="1"/>
        <pt x="112" y="57" on="0"/>
        <pt x="98" y="45" on="1"/>
        <pt x="88" y="35" on="0"/>
        <pt x="88" y="31" on="1"/>
        <pt x="88" y="20" on="0"/>
        <pt x="159" y="20" on="1"/>
        <pt x="197" y="20" on="0"/>
        <pt x="222" y="28" on="1"/>
        <pt x="274" y="44" on="0"/>
        <pt x="274" y="56" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 15 values pushed */
          133 127 2 10 9 19 1 12 6 42 1 13 1 3 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          23
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 70 values pushed */
          0 2 7 6 7 2 6 112 0 10 0 7 2 10 7 99 0 6 0 12 1 6 12 99 0
          11 11 0 91 14 1 0 0 15 75 0 9 9 8 91 0 8 8 15 75 0 1 1 3 91
          5 4 2 3 3 16 75 0 13 13 3 91 5 4 2 3 3 16 3 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 68 values pushed */
          0 2 7 6 7 2 6 112 0 8 0 9 10 8 9 99 0 10 0 7 2 10 7 99 0
          6 0 12 1 6 12 99 0 11 11 0 91 14 1 0 0 15 75 0 1 1 3 91 5 4
          2 3 3 16 75 0 13 13 3 91 5 4 2 3 3 16 3 76
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 35 values pushed */
          1 0 147 145 139 135 124 123 110 108 98 97 88 86 76 74 58 56 50 49 48 46 38 36 29
          27 23 21 0 119 1 119 15 6 20
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="M" xMin="30" yMin="-50" xMax="1215" yMax="721">
      <contour>
        <pt x="80" y="47" on="1"/>
        <pt x="94" y="30" on="0"/>
        <pt x="133" y="30" on="1"/>
        <pt x="155" y="30" on="0"/>
        <pt x="162" y="32" on="1"/>
        <pt x="222" y="46" on="0"/>
        <pt x="291" y="117" on="1"/>
        <pt x="325" y="152" on="0"/>
        <pt x="390" y="233" on="1"/>
        <pt x="461" y="321" on="0"/>
        <pt x="500" y="361" on="1"/>
        <pt x="570" y="430" on="0"/>
        <pt x="733" y="552" on="1"/>
        <pt x="843" y="635" on="0"/>
        <pt x="910" y="693" on="1"/>
        <pt x="942" y="721" on="0"/>
        <pt x="948" y="721" on="0"/>
        <pt x="969" y="711" on="0"/>
        <pt x="970" y="709" on="1"/>
        <pt x="974" y="704" on="0"/>
        <pt x="964" y="691" on="1"/>
        <pt x="961" y="689" on="0"/>
        <pt x="849" y="557" on="0"/>
        <pt x="845" y="551" on="0"/>
        <pt x="618" y="214" on="0"/>
        <pt x="595" y="181" on="1"/>
        <pt x="542" y="105" on="0"/>
        <pt x="515" y="55" on="1"/>
        <pt x="490" y="8" on="0"/>
        <pt x="492" y="5" on="1"/>
        <pt x="497" y="5" on="0"/>
        <pt x="531" y="46" on="1"/>
        <pt x="585" y="105" on="0"/>
        <pt x="735" y="282" on="1"/>
        <pt x="801" y="359" on="0"/>
        <pt x="850" y="409" on="1"/>
        <pt x="916" y="473" on="0"/>
        <pt x="972" y="524" on="1"/>
        <pt x="994" y="543" on="0"/>
        <pt x="1004" y="556" on="1"/>
        <pt x="1012" y="567" on="0"/>
        <pt x="1183" y="720" on="0"/>
        <pt x="1186" y="720" on="1"/>
        <pt x="1194" y="720" on="0"/>
        <pt x="1218" y="710" on="0"/>
        <pt x="1215" y="703" on="1"/>
        <pt x="1215" y="700" on="0"/>
        <pt x="1155" y="627" on="1"/>
        <pt x="1094" y="550" on="0"/>
        <pt x="1080" y="530" on="1"/>
        <pt x="1037" y="462" on="0"/>
        <pt x="987" y="364" on="1"/>
        <pt x="926" y="246" on="0"/>
        <pt x="862" y="152" on="1"/>
        <pt x="802" y="64" on="0"/>
        <pt x="799" y="17" on="1"/>
        <pt x="799" y="7" on="0"/>
        <pt x="802" y="2" on="0"/>
        <pt x="811" y="2" on="1"/>
        <pt x="846" y="2" on="0"/>
        <pt x="912" y="62" on="1"/>
        <pt x="941" y="88" on="0"/>
        <pt x="969" y="126" on="1"/>
        <pt x="972" y="129" on="0"/>
        <pt x="976" y="136" on="0"/>
        <pt x="977" y="138" on="0"/>
        <pt x="982" y="140" on="0"/>
        <pt x="988" y="140" on="0"/>
        <pt x="996" y="140" on="1"/>
        <pt x="1012" y="140" on="1"/>
        <pt x="1018" y="134" on="0"/>
        <pt x="1018" y="132" on="1"/>
        <pt x="1018" y="127" on="0"/>
        <pt x="977" y="78" on="0"/>
        <pt x="957" y="59" on="1"/>
        <pt x="891" y="-3" on="0"/>
        <pt x="837" y="-26" on="1"/>
        <pt x="815" y="-35" on="0"/>
        <pt x="795" y="-35" on="1"/>
        <pt x="766" y="-35" on="0"/>
        <pt x="750" y="-18" on="1"/>
        <pt x="728" y="1" on="0"/>
        <pt x="728" y="48" on="1"/>
        <pt x="728" y="122" on="0"/>
        <pt x="781" y="190" on="1"/>
        <pt x="833" y="269" on="0"/>
        <pt x="890" y="370" on="1"/>
        <pt x="927" y="434" on="1"/>
        <pt x="914" y="422" on="1"/>
        <pt x="885" y="395" on="0"/>
        <pt x="839" y="346" on="1"/>
        <pt x="824" y="330" on="0"/>
        <pt x="752" y="245" on="1"/>
        <pt x="523" y="-24" on="0"/>
        <pt x="477" y="-47" on="1"/>
        <pt x="470" y="-50" on="0"/>
        <pt x="461" y="-50" on="1"/>
        <pt x="424" y="-48" on="0"/>
        <pt x="424" y="-4" on="1"/>
        <pt x="424" y="86" on="0"/>
        <pt x="481" y="172" on="1"/>
        <pt x="646" y="402" on="0"/>
        <pt x="708" y="487" on="1"/>
        <pt x="714" y="494" on="0"/>
        <pt x="714" y="495" on="1"/>
        <pt x="675" y="466" on="0"/>
        <pt x="658" y="453" on="1"/>
        <pt x="570" y="383" on="0"/>
        <pt x="523" y="333" on="1"/>
        <pt x="499" y="308" on="0"/>
        <pt x="420" y="214" on="1"/>
        <pt x="353" y="135" on="0"/>
        <pt x="313" y="95" on="1"/>
        <pt x="283" y="67" on="0"/>
        <pt x="245" y="36" on="0"/>
        <pt x="184" y="2" on="0"/>
        <pt x="153" y="-5" on="1"/>
        <pt x="142" y="-7" on="0"/>
        <pt x="120" y="-7" on="1"/>
        <pt x="59" y="-7" on="0"/>
        <pt x="37" y="24" on="1"/>
        <pt x="30" y="34" on="0"/>
        <pt x="30" y="48" on="1"/>
        <pt x="30" y="78" on="0"/>
        <pt x="80" y="130" on="0"/>
        <pt x="113" y="130" on="1"/>
        <pt x="130" y="130" on="0"/>
        <pt x="153" y="111" on="0"/>
        <pt x="153" y="94" on="1"/>
        <pt x="153" y="74" on="0"/>
        <pt x="112" y="47" on="0"/>
        <pt x="90" y="47" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 6 values pushed */
          87 1 3 1 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          10
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 48 values pushed */
          0 3 1 7 1 3 7 112 0 5 4 5 115 0 7 9 1 8 0 7 8 99 0 1 1
          15 75 0 0 0 6 91 0 6 6 18 75 0 2 2 4 91 0 4 4 20 4 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          12
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 48 values pushed */
          0 3 1 7 1 3 7 112 0 5 4 5 115 0 7 9 1 8 0 7 8 99 0 1 1
          15 75 0 0 0 6 91 0 6 6 18 75 0 2 2 4 91 0 4 4 16 4 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          28
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 48 values pushed */
          0 3 1 7 1 3 7 112 0 5 4 5 115 0 7 9 1 8 0 7 8 99 0 1 1
          15 75 0 0 0 6 91 0 6 6 18 75 0 2 2 4 91 0 4 4 20 4 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 46 values pushed */
          0 3 1 7 1 3 7 112 0 5 4 5 115 0 7 9 1 8 0 7 8 99 0 2 0
          4 5 2 4 99 0 1 1 15 75 0 0 0 6 91 0 6 6 18 6 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 24 values pushed */
          0 0 0 131 0 130 126 124 119 117 97 95 79 77 69 66 59 58 43 41 33 10 6 21
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="N" xMin="29" yMin="-36" xMax="1208" yMax="726">
      <contour>
        <pt x="100" y="75" on="1"/>
        <pt x="88" y="75" on="0"/>
        <pt x="72" y="82" on="1"/>
        <pt x="67" y="82" on="0"/>
        <pt x="67" y="59" on="1"/>
        <pt x="67" y="29" on="0"/>
        <pt x="125" y="1" on="0"/>
        <pt x="167" y="1" on="1"/>
        <pt x="187" y="1" on="0"/>
        <pt x="197" y="3" on="1"/>
        <pt x="270" y="21" on="0"/>
        <pt x="360" y="114" on="1"/>
        <pt x="401" y="157" on="0"/>
        <pt x="478" y="266" on="1"/>
        <pt x="779" y="695" on="0"/>
        <pt x="784" y="698" on="1"/>
        <pt x="786" y="700" on="0"/>
        <pt x="802" y="700" on="1"/>
        <pt x="818" y="700" on="1"/>
        <pt x="824" y="694" on="0"/>
        <pt x="824" y="690" on="0"/>
        <pt x="813" y="673" on="1"/>
        <pt x="764" y="592" on="0"/>
        <pt x="764" y="513" on="1"/>
        <pt x="764" y="485" on="0"/>
        <pt x="780" y="357" on="0"/>
        <pt x="780" y="330" on="1"/>
        <pt x="780" y="289" on="0"/>
        <pt x="775" y="259" on="1"/>
        <pt x="775" y="256" on="0"/>
        <pt x="774" y="252" on="1"/>
        <pt x="773" y="246" on="0"/>
        <pt x="773" y="245" on="1"/>
        <pt x="778" y="252" on="0"/>
        <pt x="783" y="260" on="1"/>
        <pt x="936" y="508" on="0"/>
        <pt x="1042" y="617" on="1"/>
        <pt x="1112" y="687" on="0"/>
        <pt x="1188" y="722" on="1"/>
        <pt x="1197" y="726" on="0"/>
        <pt x="1200" y="726" on="1"/>
        <pt x="1208" y="726" on="0"/>
        <pt x="1208" y="717" on="1"/>
        <pt x="1208" y="714" on="0"/>
        <pt x="1203" y="680" on="0"/>
        <pt x="1203" y="679" on="1"/>
        <pt x="1199" y="675" on="1"/>
        <pt x="1197" y="675" on="0"/>
        <pt x="1181" y="667" on="1"/>
        <pt x="1156" y="655" on="0"/>
        <pt x="1133" y="639" on="1"/>
        <pt x="1050" y="583" on="0"/>
        <pt x="959" y="456" on="1"/>
        <pt x="801" y="234" on="0"/>
        <pt x="692" y="19" on="1"/>
        <pt x="682" y="-3" on="0"/>
        <pt x="679" y="-6" on="1"/>
        <pt x="677" y="-8" on="0"/>
        <pt x="643" y="-8" on="0"/>
        <pt x="641" y="-6" on="1"/>
        <pt x="637" y="0" on="0"/>
        <pt x="646" y="17" on="1"/>
        <pt x="685" y="92" on="0"/>
        <pt x="685" y="173" on="1"/>
        <pt x="685" y="196" on="1"/>
        <pt x="685" y="234" on="0"/>
        <pt x="679" y="306" on="1"/>
        <pt x="676" y="334" on="0"/>
        <pt x="676" y="380" on="1"/>
        <pt x="676" y="434" on="0"/>
        <pt x="687" y="487" on="1"/>
        <pt x="676" y="472" on="0"/>
        <pt x="664" y="454" on="1"/>
        <pt x="505" y="230" on="0"/>
        <pt x="454" y="170" on="1"/>
        <pt x="322" y="10" on="0"/>
        <pt x="211" y="-27" on="1"/>
        <pt x="185" y="-36" on="0"/>
        <pt x="163" y="-36" on="1"/>
        <pt x="152" y="-36" on="1"/>
        <pt x="53" y="-36" on="0"/>
        <pt x="32" y="25" on="1"/>
        <pt x="29" y="34" on="0"/>
        <pt x="29" y="46" on="1"/>
        <pt x="29" y="60" on="0"/>
        <pt x="34" y="78" on="1"/>
        <pt x="46" y="111" on="0"/>
        <pt x="91" y="158" on="0"/>
        <pt x="123" y="158" on="1"/>
        <pt x="141" y="158" on="0"/>
        <pt x="164" y="136" on="0"/>
        <pt x="164" y="102" on="0"/>
        <pt x="121" y="75" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 18 values pushed */
          42 1 2 3 70 1 6 2 2 1 0 6 4 1 1 0 4 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          9
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 38 values pushed */
          0 2 3 6 3 2 6 112 0 6 7 1 0 1 6 0 99 0 3 3 15 75 0 4 4
          16 75 0 1 1 5 91 0 5 5 16 5 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          12
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 38 values pushed */
          0 2 3 6 3 2 6 112 0 6 7 1 0 1 6 0 99 0 3 3 15 75 0 4 4
          16 75 0 1 1 5 91 0 5 5 20 5 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          13
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 38 values pushed */
          0 2 3 6 3 2 6 112 0 6 7 1 0 1 6 0 99 0 3 3 15 75 0 4 4
          16 75 0 1 1 5 91 0 5 5 16 5 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          26
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 38 values pushed */
          0 2 3 6 3 2 6 112 0 6 7 1 0 1 6 0 99 0 3 3 15 75 0 4 4
          16 75 0 1 1 5 91 0 5 5 20 5 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 35 values pushed */
          0 2 3 6 3 2 6 112 0 6 7 1 0 1 6 0 99 0 1 0 5 1 5 95 0
          3 3 15 75 0 4 4 16 4 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 21 values pushed */
          1 0 89 87 80 77 58 57 41 39 18 16 8 6 0 92 1 92 8 6 20
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="O" xMin="96" yMin="-8" xMax="805" yMax="707">
      <contour>
        <pt x="607" y="707" on="1"/>
        <pt x="621" y="707" on="1"/>
        <pt x="732" y="707" on="0"/>
        <pt x="778" y="661" on="1"/>
        <pt x="805" y="634" on="0"/>
        <pt x="805" y="598" on="1"/>
        <pt x="805" y="592" on="0"/>
        <pt x="803" y="580" on="1"/>
        <pt x="797" y="543" on="0"/>
        <pt x="738" y="473" on="0"/>
        <pt x="696" y="452" on="1"/>
        <pt x="684" y="447" on="1"/>
        <pt x="684" y="441" on="1"/>
        <pt x="684" y="409" on="0"/>
        <pt x="664" y="354" on="1"/>
        <pt x="638" y="285" on="0"/>
        <pt x="539" y="145" on="0"/>
        <pt x="484" y="97" on="1"/>
        <pt x="379" y="7" on="0"/>
        <pt x="288" y="-7" on="1"/>
        <pt x="279" y="-8" on="0"/>
        <pt x="259" y="-8" on="1"/>
        <pt x="183" y="-5" on="0"/>
        <pt x="96" y="77" on="0"/>
        <pt x="96" y="153" on="1"/>
        <pt x="96" y="169" on="0"/>
        <pt x="97" y="176" on="1"/>
        <pt x="108" y="280" on="0"/>
        <pt x="193" y="407" on="1"/>
        <pt x="312" y="581" on="0"/>
        <pt x="484" y="668" on="1"/>
        <pt x="549" y="700" on="0"/>
      </contour>
      <contour>
        <pt x="760" y="594" on="1"/>
        <pt x="760" y="670" on="0"/>
        <pt x="608" y="670" on="1"/>
        <pt x="579" y="670" on="0"/>
        <pt x="541" y="651" on="1"/>
        <pt x="517" y="639" on="0"/>
        <pt x="500" y="627" on="1"/>
        <pt x="425" y="577" on="0"/>
        <pt x="347" y="472" on="1"/>
        <pt x="256" y="349" on="0"/>
        <pt x="174" y="191" on="0"/>
        <pt x="174" y="131" on="1"/>
        <pt x="174" y="84" on="0"/>
        <pt x="230" y="29" on="0"/>
        <pt x="279" y="29" on="1"/>
        <pt x="294" y="29" on="0"/>
        <pt x="306" y="32" on="1"/>
        <pt x="345" y="43" on="0"/>
        <pt x="388" y="75" on="1"/>
        <pt x="446" y="118" on="0"/>
        <pt x="507" y="205" on="1"/>
        <pt x="592" y="325" on="0"/>
        <pt x="616" y="401" on="1"/>
        <pt x="625" y="426" on="0"/>
        <pt x="625" y="435" on="1"/>
        <pt x="625" y="437" on="0"/>
        <pt x="615" y="438" on="1"/>
        <pt x="601" y="439" on="0"/>
        <pt x="569" y="449" on="1"/>
        <pt x="524" y="466" on="0"/>
        <pt x="515" y="475" on="1"/>
        <pt x="513" y="477" on="0"/>
        <pt x="513" y="481" on="1"/>
        <pt x="513" y="484" on="0"/>
        <pt x="524" y="495" on="1"/>
        <pt x="538" y="508" on="0"/>
        <pt x="541" y="508" on="1"/>
        <pt x="555" y="502" on="1"/>
        <pt x="573" y="492" on="0"/>
        <pt x="596" y="484" on="1"/>
        <pt x="617" y="476" on="0"/>
        <pt x="625" y="476" on="1"/>
        <pt x="627" y="476" on="0"/>
        <pt x="626" y="481" on="1"/>
        <pt x="626" y="484" on="0"/>
        <pt x="624" y="492" on="1"/>
        <pt x="609" y="541" on="0"/>
        <pt x="548" y="541" on="1"/>
        <pt x="535" y="541" on="0"/>
        <pt x="526" y="538" on="1"/>
        <pt x="493" y="527" on="0"/>
        <pt x="406" y="451" on="0"/>
        <pt x="364" y="398" on="1"/>
        <pt x="309" y="328" on="0"/>
        <pt x="253" y="218" on="0"/>
        <pt x="241" y="142" on="1"/>
        <pt x="237" y="121" on="0"/>
        <pt x="235" y="120" on="1"/>
        <pt x="234" y="118" on="0"/>
        <pt x="200" y="104" on="0"/>
        <pt x="197" y="104" on="1"/>
        <pt x="195" y="104" on="0"/>
        <pt x="189" y="110" on="0"/>
        <pt x="189" y="112" on="1"/>
        <pt x="189" y="122" on="0"/>
        <pt x="196" y="152" on="1"/>
        <pt x="217" y="255" on="0"/>
        <pt x="280" y="348" on="1"/>
        <pt x="364" y="471" on="0"/>
        <pt x="472" y="544" on="1"/>
        <pt x="507" y="567" on="0"/>
        <pt x="539" y="576" on="1"/>
        <pt x="548" y="578" on="0"/>
        <pt x="563" y="578" on="1"/>
        <pt x="609" y="578" on="0"/>
        <pt x="670" y="535" on="0"/>
        <pt x="680" y="496" on="1"/>
        <pt x="683" y="486" on="0"/>
        <pt x="683" y="482" on="1"/>
        <pt x="683" y="480" on="0"/>
        <pt x="687" y="482" on="1"/>
        <pt x="709" y="493" on="0"/>
        <pt x="751" y="549" on="0"/>
        <pt x="759" y="575" on="1"/>
        <pt x="760" y="579" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 15 values pushed */
          5 1 6 2 115 1 5 6 56 11 2 3 4 3 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          26
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 37 values pushed */
          0 4 5 3 5 4 3 112 0 6 0 5 4 6 5 99 0 2 2 0 91 0 0 0 15
          75 0 3 3 1 91 0 1 1 18 1 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 35 values pushed */
          0 4 5 3 5 4 3 112 0 0 0 2 6 0 2 99 0 6 0 5 4 6 5 99 0
          3 3 1 91 0 1 1 18 1 76
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 16 values pushed */
          106 104 80 78 74 72 47 45 35 33 22 20 32 7 6 21
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="P" xMin="90" yMin="-37" xMax="1031" yMax="716">
      <contour>
        <pt x="698" y="446" on="1"/>
        <pt x="698" y="442" on="0"/>
        <pt x="681" y="417" on="0"/>
        <pt x="679" y="417" on="1"/>
        <pt x="677" y="415" on="0"/>
        <pt x="670" y="415" on="1"/>
        <pt x="651" y="412" on="0"/>
        <pt x="633" y="389" on="1"/>
        <pt x="622" y="373" on="0"/>
        <pt x="617" y="362" on="1"/>
        <pt x="615" y="354" on="0"/>
        <pt x="615" y="350" on="1"/>
        <pt x="615" y="336" on="0"/>
        <pt x="626" y="325" on="1"/>
        <pt x="638" y="315" on="0"/>
        <pt x="643" y="315" on="1"/>
        <pt x="765" y="477" on="0"/>
        <pt x="817" y="536" on="1"/>
        <pt x="873" y="595" on="0"/>
        <pt x="896" y="614" on="1"/>
        <pt x="907" y="625" on="1"/>
        <pt x="843" y="680" on="0"/>
        <pt x="701" y="680" on="1"/>
        <pt x="613" y="680" on="0"/>
        <pt x="524" y="643" on="1"/>
        <pt x="416" y="599" on="0"/>
        <pt x="344" y="516" on="1"/>
        <pt x="317" y="486" on="0"/>
        <pt x="274" y="412" on="0"/>
        <pt x="267" y="384" on="1"/>
        <pt x="262" y="366" on="0"/>
        <pt x="262" y="354" on="1"/>
        <pt x="262" y="328" on="0"/>
        <pt x="296" y="299" on="0"/>
        <pt x="326" y="299" on="1"/>
        <pt x="337" y="299" on="0"/>
        <pt x="349" y="301" on="1"/>
        <pt x="386" y="308" on="0"/>
        <pt x="426" y="338" on="1"/>
        <pt x="473" y="371" on="0"/>
        <pt x="515" y="427" on="1"/>
        <pt x="571" y="498" on="0"/>
        <pt x="589" y="555" on="1"/>
        <pt x="596" y="575" on="0"/>
        <pt x="597" y="598" on="1"/>
        <pt x="597" y="616" on="0"/>
        <pt x="599" y="617" on="1"/>
        <pt x="601" y="619" on="0"/>
        <pt x="628" y="630" on="0"/>
        <pt x="630" y="630" on="1"/>
        <pt x="639" y="630" on="0"/>
        <pt x="639" y="604" on="1"/>
        <pt x="639" y="587" on="1"/>
        <pt x="639" y="563" on="0"/>
        <pt x="637" y="553" on="1"/>
        <pt x="628" y="503" on="0"/>
        <pt x="597" y="456" on="1"/>
        <pt x="550" y="386" on="0"/>
        <pt x="404" y="276" on="0"/>
        <pt x="342" y="264" on="1"/>
        <pt x="326" y="262" on="0"/>
        <pt x="318" y="262" on="1"/>
        <pt x="273" y="262" on="0"/>
        <pt x="222" y="307" on="0"/>
        <pt x="222" y="350" on="1"/>
        <pt x="222" y="376" on="0"/>
        <pt x="229" y="398" on="1"/>
        <pt x="244" y="449" on="0"/>
        <pt x="285" y="504" on="1"/>
        <pt x="325" y="555" on="0"/>
        <pt x="379" y="594" on="1"/>
        <pt x="519" y="702" on="0"/>
        <pt x="680" y="716" on="1"/>
        <pt x="702" y="716" on="1"/>
        <pt x="757" y="716" on="0"/>
        <pt x="772" y="715" on="1"/>
        <pt x="883" y="704" on="0"/>
        <pt x="944" y="664" on="1"/>
        <pt x="951" y="660" on="1"/>
        <pt x="962" y="670" on="0"/>
        <pt x="1009" y="700" on="0"/>
        <pt x="1012" y="700" on="1"/>
        <pt x="1017" y="700" on="0"/>
        <pt x="1026" y="680" on="0"/>
        <pt x="1026" y="673" on="1"/>
        <pt x="1026" y="670" on="0"/>
        <pt x="1019" y="664" on="1"/>
        <pt x="990" y="634" on="0"/>
        <pt x="988" y="632" on="1"/>
        <pt x="987" y="630" on="0"/>
        <pt x="991" y="626" on="1"/>
        <pt x="1031" y="582" on="0"/>
        <pt x="1031" y="522" on="1"/>
        <pt x="1031" y="457" on="0"/>
        <pt x="982" y="385" on="1"/>
        <pt x="949" y="339" on="0"/>
        <pt x="829" y="272" on="0"/>
        <pt x="765" y="264" on="1"/>
        <pt x="757" y="262" on="0"/>
        <pt x="733" y="262" on="1"/>
        <pt x="714" y="262" on="1"/>
        <pt x="701" y="245" on="1"/>
        <pt x="664" y="191" on="0"/>
        <pt x="611" y="143" on="1"/>
        <pt x="522" y="61" on="0"/>
        <pt x="310" y="-37" on="0"/>
        <pt x="218" y="-37" on="1"/>
        <pt x="114" y="-37" on="0"/>
        <pt x="93" y="25" on="1"/>
        <pt x="90" y="34" on="0"/>
        <pt x="90" y="46" on="1"/>
        <pt x="90" y="60" on="0"/>
        <pt x="95" y="78" on="1"/>
        <pt x="124" y="158" on="0"/>
        <pt x="185" y="158" on="1"/>
        <pt x="202" y="158" on="0"/>
        <pt x="225" y="137" on="0"/>
        <pt x="225" y="122" on="1"/>
        <pt x="225" y="101" on="0"/>
        <pt x="184" y="75" on="0"/>
        <pt x="159" y="75" on="1"/>
        <pt x="140" y="77" on="1"/>
        <pt x="137" y="72" on="0"/>
        <pt x="137" y="53" on="1"/>
        <pt x="139" y="26" on="0"/>
        <pt x="191" y="0" on="0"/>
        <pt x="228" y="0" on="1"/>
        <pt x="286" y="0" on="0"/>
        <pt x="430" y="74" on="0"/>
        <pt x="502" y="141" on="1"/>
        <pt x="557" y="193" on="0"/>
        <pt x="602" y="257" on="1"/>
        <pt x="620" y="281" on="1"/>
        <pt x="580" y="304" on="0"/>
        <pt x="573" y="330" on="1"/>
        <pt x="569" y="344" on="0"/>
        <pt x="573" y="360" on="1"/>
        <pt x="580" y="388" on="0"/>
        <pt x="651" y="452" on="0"/>
        <pt x="687" y="452" on="1"/>
        <pt x="698" y="452" on="0"/>
      </contour>
      <contour>
        <pt x="946" y="569" on="1"/>
        <pt x="943" y="576" on="1"/>
        <pt x="941" y="576" on="0"/>
        <pt x="844" y="445" on="1"/>
        <pt x="740" y="300" on="0"/>
        <pt x="741" y="299" on="1"/>
        <pt x="751" y="299" on="1"/>
        <pt x="810" y="300" on="0"/>
        <pt x="891" y="377" on="0"/>
        <pt x="924" y="438" on="1"/>
        <pt x="949" y="490" on="0"/>
        <pt x="950" y="529" on="1"/>
        <pt x="950" y="553" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 18 values pushed */
          78 1 2 0 20 1 10 2 132 1 3 1 121 1 8 7 4 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          9
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 54 values pushed */
          0 2 0 10 0 2 10 112 0 10 1 0 10 1 110 11 1 1 5 1 3 7 1 3 99
          0 7 0 8 9 7 8 99 0 0 0 4 89 0 4 4 15 75 0 9 9 6 91 0 6
          6 20 6 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          11
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 54 values pushed */
          0 2 0 10 0 2 10 112 0 10 1 0 10 1 110 11 1 1 5 1 3 7 1 3 99
          0 7 0 8 9 7 8 99 0 0 0 4 89 0 4 4 15 75 0 9 9 6 91 0 6
          6 16 6 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          13
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 54 values pushed */
          0 2 0 10 0 2 10 112 0 10 1 0 10 1 110 11 1 1 5 1 3 7 1 3 99
          0 7 0 8 9 7 8 99 0 0 0 4 89 0 4 4 15 75 0 9 9 6 91 0 6
          6 20 6 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          14
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 54 values pushed */
          0 2 0 10 0 2 10 112 0 10 1 0 10 1 110 11 1 1 5 1 3 7 1 3 99
          0 7 0 8 9 7 8 99 0 0 0 4 89 0 4 4 15 75 0 9 9 6 91 0 6
          6 16 6 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          25
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 54 values pushed */
          0 2 0 10 0 2 10 112 0 10 1 0 10 1 110 11 1 1 5 1 3 7 1 3 99
          0 7 0 8 9 7 8 99 0 0 0 4 89 0 4 4 15 75 0 9 9 6 91 0 6
          6 20 6 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          45
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 51 values pushed */
          0 2 0 10 0 2 10 112 0 10 1 0 10 1 110 11 1 1 5 1 3 7 1 3 99
          0 7 0 8 9 7 8 99 0 9 0 6 9 6 95 0 0 0 4 89 0 4 4 15 0
          76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 57 values pushed */
          0 2 0 10 0 2 10 112 0 10 1 0 10 1 110 0 4 0 0 2 4 0 99 11 1
          1 5 1 3 7 1 3 99 0 7 0 8 9 7 8 99 0 9 6 6 9 87 0 9 9
          6 91 0 6 9 6 79
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 27 values pushed */
          148 147 140 138 127 125 120 119 115 113 107 105 100 98 75 72 62 60 50 48 35 33 23 21 12
          6 20
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Q" xMin="54" yMin="-17" xMax="885" yMax="717">
      <contour>
        <pt x="330" y="387" on="1"/>
        <pt x="330" y="331" on="0"/>
        <pt x="402" y="331" on="1"/>
        <pt x="493" y="331" on="0"/>
        <pt x="558" y="414" on="1"/>
        <pt x="598" y="467" on="0"/>
        <pt x="609" y="512" on="1"/>
        <pt x="613" y="527" on="0"/>
        <pt x="613" y="542" on="1"/>
        <pt x="613" y="569" on="0"/>
        <pt x="599" y="586" on="1"/>
        <pt x="592" y="593" on="0"/>
        <pt x="594" y="598" on="1"/>
        <pt x="595" y="602" on="0"/>
        <pt x="617" y="610" on="1"/>
        <pt x="632" y="617" on="0"/>
        <pt x="636" y="616" on="1"/>
        <pt x="649" y="609" on="0"/>
        <pt x="663" y="582" on="1"/>
        <pt x="675" y="557" on="0"/>
        <pt x="675" y="527" on="1"/>
        <pt x="675" y="500" on="0"/>
        <pt x="667" y="478" on="1"/>
        <pt x="628" y="360" on="0"/>
        <pt x="479" y="310" on="1"/>
        <pt x="432" y="294" on="0"/>
        <pt x="387" y="294" on="1"/>
        <pt x="305" y="294" on="0"/>
        <pt x="280" y="348" on="1"/>
        <pt x="271" y="366" on="0"/>
        <pt x="271" y="394" on="1"/>
        <pt x="271" y="436" on="0"/>
        <pt x="292" y="478" on="1"/>
        <pt x="349" y="593" on="0"/>
        <pt x="485" y="665" on="1"/>
        <pt x="566" y="708" on="0"/>
        <pt x="647" y="716" on="1"/>
        <pt x="655" y="717" on="0"/>
        <pt x="672" y="717" on="1"/>
        <pt x="716" y="717" on="0"/>
        <pt x="758" y="707" on="1"/>
        <pt x="843" y="682" on="0"/>
        <pt x="872" y="616" on="1"/>
        <pt x="885" y="586" on="0"/>
        <pt x="885" y="548" on="1"/>
        <pt x="885" y="517" on="0"/>
        <pt x="874" y="478" on="1"/>
        <pt x="844" y="375" on="0"/>
        <pt x="636" y="153" on="0"/>
        <pt x="498" y="76" on="1"/>
        <pt x="493" y="73" on="0"/>
        <pt x="488" y="70" on="0"/>
        <pt x="484" y="67" on="0"/>
        <pt x="485" y="67" on="0"/>
        <pt x="485" y="66" on="1"/>
        <pt x="533" y="41" on="0"/>
        <pt x="607" y="41" on="1"/>
        <pt x="620" y="41" on="0"/>
        <pt x="634" y="43" on="1"/>
        <pt x="673" y="51" on="0"/>
        <pt x="752" y="103" on="0"/>
        <pt x="780" y="139" on="1"/>
        <pt x="787" y="148" on="1"/>
        <pt x="804" y="148" on="1"/>
        <pt x="806" y="148" on="0"/>
        <pt x="809" y="148" on="1"/>
        <pt x="821" y="148" on="0"/>
        <pt x="826" y="146" on="0"/>
        <pt x="826" y="134" on="0"/>
        <pt x="779" y="83" on="0"/>
        <pt x="757" y="66" on="1"/>
        <pt x="689" y="13" on="0"/>
        <pt x="628" y="-9" on="1"/>
        <pt x="607" y="-16" on="0"/>
        <pt x="589" y="-16" on="1"/>
        <pt x="576" y="-16" on="1"/>
        <pt x="503" y="-16" on="0"/>
        <pt x="414" y="20" on="1"/>
        <pt x="396" y="27" on="1"/>
        <pt x="344" y="8" on="0"/>
        <pt x="326" y="3" on="1"/>
        <pt x="256" y="-17" on="0"/>
        <pt x="192" y="-17" on="1"/>
        <pt x="137" y="-17" on="0"/>
        <pt x="54" y="20" on="0"/>
        <pt x="54" y="53" on="1"/>
        <pt x="54" y="98" on="0"/>
        <pt x="123" y="132" on="1"/>
        <pt x="172" y="155" on="0"/>
        <pt x="222" y="155" on="1"/>
        <pt x="263" y="155" on="0"/>
        <pt x="302" y="145" on="1"/>
        <pt x="345" y="134" on="0"/>
        <pt x="401" y="106" on="1"/>
        <pt x="431" y="91" on="1"/>
        <pt x="441" y="97" on="1"/>
        <pt x="476" y="118" on="0"/>
        <pt x="527" y="157" on="1"/>
        <pt x="608" y="224" on="0"/>
        <pt x="683" y="324" on="1"/>
        <pt x="779" y="451" on="0"/>
        <pt x="798" y="537" on="1"/>
        <pt x="801" y="553" on="0"/>
        <pt x="801" y="573" on="1"/>
        <pt x="801" y="626" on="0"/>
        <pt x="724" y="679" on="0"/>
        <pt x="660" y="679" on="1"/>
        <pt x="627" y="679" on="0"/>
        <pt x="601" y="672" on="1"/>
        <pt x="482" y="643" on="0"/>
        <pt x="398" y="530" on="1"/>
        <pt x="342" y="456" on="0"/>
        <pt x="332" y="405" on="1"/>
        <pt x="330" y="395" on="0"/>
      </contour>
      <contour>
        <pt x="160" y="86" on="1"/>
        <pt x="150" y="88" on="0"/>
        <pt x="144" y="88" on="1"/>
        <pt x="124" y="88" on="0"/>
        <pt x="116" y="70" on="1"/>
        <pt x="111" y="60" on="0"/>
        <pt x="111" y="53" on="1"/>
        <pt x="111" y="33" on="0"/>
        <pt x="141" y="27" on="1"/>
        <pt x="169" y="20" on="0"/>
        <pt x="201" y="20" on="1"/>
        <pt x="232" y="20" on="0"/>
        <pt x="269" y="27" on="1"/>
        <pt x="280" y="29" on="0"/>
        <pt x="315" y="39" on="0"/>
        <pt x="342" y="48" on="0"/>
        <pt x="342" y="49" on="1"/>
        <pt x="342" y="51" on="0"/>
        <pt x="311" y="61" on="1"/>
        <pt x="253" y="81" on="0"/>
        <pt x="189" y="84" on="1"/>
        <pt x="165" y="86" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 10 values pushed */
          94 1 9 4 78 1 10 3 2 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          9
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 51 values pushed */
          0 0 0 1 4 0 1 99 7 1 4 11 1 9 3 4 9 99 0 8 8 2 91 0 2
          2 15 75 0 3 3 5 91 6 1 5 5 16 75 0 10 10 5 91 6 1 5 5 16 5
          76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          10
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 58 values pushed */
          0 4 7 9 7 4 9 112 0 0 0 1 7 0 1 99 0 7 11 1 9 3 7 9 99
          0 8 8 2 91 0 2 2 15 75 0 3 3 5 91 6 1 5 5 16 75 0 10 10 5
          91 6 1 5 5 16 5 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          11
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 64 values pushed */
          0 4 7 9 7 4 9 112 0 9 11 7 9 11 110 0 0 0 1 7 0 1 99 0 7
          0 11 3 7 11 99 0 8 8 2 91 0 2 2 15 75 0 3 3 5 91 6 1 5 5
          16 75 0 10 10 5 91 6 1 5 5 16 5 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          39
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 58 values pushed */
          0 4 7 9 7 4 9 112 0 0 0 1 7 0 1 99 0 7 11 1 9 3 7 9 99
          0 8 8 2 91 0 2 2 15 75 0 3 3 5 91 6 1 5 5 16 75 0 10 10 5
          91 6 1 5 5 16 5 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 64 values pushed */
          0 4 7 9 7 4 9 112 0 9 11 7 9 11 110 0 0 0 1 7 0 1 99 0 7
          0 11 3 7 11 99 0 8 8 2 91 0 2 2 15 75 0 3 3 5 91 6 1 5 5
          16 75 0 10 10 5 91 6 1 5 5 16 5 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 26 values pushed */
          134 133 125 123 117 115 107 105 90 88 83 81 76 73 66 62 57 55 39 37 27 25 33 12 6
          21
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="R" xMin="-2" yMin="-17" xMax="887" yMax="717">
      <contour>
        <pt x="128" y="122" on="1"/>
        <pt x="128" y="101" on="0"/>
        <pt x="88" y="75" on="0"/>
        <pt x="63" y="75" on="1"/>
        <pt x="53" y="75" on="0"/>
        <pt x="50" y="76" on="1"/>
        <pt x="46" y="77" on="0"/>
        <pt x="44" y="75" on="0"/>
        <pt x="44" y="67" on="1"/>
        <pt x="45" y="45" on="0"/>
        <pt x="102" y="19" on="0"/>
        <pt x="144" y="19" on="1"/>
        <pt x="171" y="19" on="0"/>
        <pt x="206" y="35" on="1"/>
        <pt x="286" y="74" on="0"/>
        <pt x="406" y="239" on="1"/>
        <pt x="535" y="422" on="0"/>
        <pt x="631" y="520" on="1"/>
        <pt x="686" y="578" on="0"/>
        <pt x="755" y="631" on="1"/>
        <pt x="770" y="644" on="1"/>
        <pt x="768" y="648" on="0"/>
        <pt x="744" y="657" on="1"/>
        <pt x="692" y="680" on="0"/>
        <pt x="602" y="680" on="1"/>
        <pt x="534" y="680" on="0"/>
        <pt x="463" y="657" on="1"/>
        <pt x="330" y="612" on="0"/>
        <pt x="247" y="516" on="1"/>
        <pt x="218" y="484" on="0"/>
        <pt x="175" y="407" on="0"/>
        <pt x="169" y="378" on="1"/>
        <pt x="168" y="372" on="0"/>
        <pt x="168" y="359" on="1"/>
        <pt x="168" y="303" on="0"/>
        <pt x="234" y="303" on="1"/>
        <pt x="256" y="303" on="0"/>
        <pt x="278" y="317" on="1"/>
        <pt x="302" y="333" on="0"/>
        <pt x="346" y="394" on="1"/>
        <pt x="355" y="407" on="0"/>
        <pt x="390" y="448" on="1"/>
        <pt x="428" y="490" on="0"/>
        <pt x="454" y="530" on="0"/>
        <pt x="456" y="548" on="1"/>
        <pt x="456" y="557" on="0"/>
        <pt x="458" y="559" on="1"/>
        <pt x="459" y="560" on="0"/>
        <pt x="494" y="575" on="0"/>
        <pt x="496" y="575" on="1"/>
        <pt x="505" y="575" on="0"/>
        <pt x="505" y="558" on="1"/>
        <pt x="505" y="554" on="0"/>
        <pt x="503" y="542" on="1"/>
        <pt x="497" y="501" on="0"/>
        <pt x="427" y="403" on="1"/>
        <pt x="397" y="360" on="0"/>
        <pt x="378" y="343" on="1"/>
        <pt x="310" y="277" on="0"/>
        <pt x="239" y="267" on="1"/>
        <pt x="234" y="266" on="0"/>
        <pt x="224" y="266" on="1"/>
        <pt x="179" y="266" on="0"/>
        <pt x="127" y="311" on="0"/>
        <pt x="127" y="354" on="1"/>
        <pt x="127" y="374" on="0"/>
        <pt x="129" y="382" on="1"/>
        <pt x="144" y="464" on="0"/>
        <pt x="226" y="546" on="1"/>
        <pt x="256" y="576" on="0"/>
        <pt x="282" y="594" on="1"/>
        <pt x="426" y="703" on="0"/>
        <pt x="584" y="716" on="1"/>
        <pt x="587" y="716" on="0"/>
        <pt x="608" y="717" on="0"/>
        <pt x="615" y="717" on="1"/>
        <pt x="732" y="717" on="0"/>
        <pt x="802" y="680" on="1"/>
        <pt x="815" y="673" on="1"/>
        <pt x="860" y="700" on="1"/>
        <pt x="866" y="700" on="0"/>
        <pt x="871" y="684" on="1"/>
        <pt x="873" y="674" on="0"/>
        <pt x="873" y="673" on="1"/>
        <pt x="873" y="668" on="0"/>
        <pt x="858" y="659" on="1"/>
        <pt x="845" y="651" on="1"/>
        <pt x="853" y="642" on="1"/>
        <pt x="887" y="605" on="0"/>
        <pt x="887" y="561" on="1"/>
        <pt x="887" y="539" on="0"/>
        <pt x="884" y="527" on="1"/>
        <pt x="873" y="482" on="0"/>
        <pt x="840" y="439" on="1"/>
        <pt x="803" y="395" on="0"/>
        <pt x="733" y="358" on="1"/>
        <pt x="722" y="353" on="0"/>
        <pt x="702" y="344" on="1"/>
        <pt x="681" y="336" on="1"/>
        <pt x="693" y="315" on="0"/>
        <pt x="693" y="292" on="1"/>
        <pt x="692" y="266" on="0"/>
        <pt x="676" y="236" on="1"/>
        <pt x="668" y="220" on="0"/>
        <pt x="620" y="152" on="1"/>
        <pt x="582" y="97" on="0"/>
        <pt x="575" y="87" on="1"/>
        <pt x="557" y="57" on="0"/>
        <pt x="557" y="33" on="1"/>
        <pt x="557" y="18" on="0"/>
        <pt x="565" y="10" on="1"/>
        <pt x="570" y="5" on="0"/>
        <pt x="569" y="5" on="1"/>
        <pt x="556" y="5" on="0"/>
        <pt x="537" y="12" on="1"/>
        <pt x="515" y="18" on="0"/>
        <pt x="478" y="48" on="0"/>
        <pt x="472" y="64" on="1"/>
        <pt x="468" y="77" on="0"/>
        <pt x="473" y="92" on="1"/>
        <pt x="475" y="97" on="0"/>
        <pt x="528" y="174" on="1"/>
        <pt x="592" y="265" on="0"/>
        <pt x="615" y="301" on="0"/>
        <pt x="616" y="310" on="1"/>
        <pt x="616" y="317" on="0"/>
        <pt x="615" y="318" on="1"/>
        <pt x="613" y="319" on="0"/>
        <pt x="611" y="319" on="1"/>
        <pt x="587" y="319" on="0"/>
        <pt x="575" y="315" on="1"/>
        <pt x="560" y="315" on="1"/>
        <pt x="545" y="291" on="1"/>
        <pt x="489" y="197" on="0"/>
        <pt x="362" y="66" on="0"/>
        <pt x="277" y="23" on="1"/>
        <pt x="236" y="1" on="0"/>
        <pt x="192" y="-10" on="1"/>
        <pt x="161" y="-17" on="0"/>
        <pt x="142" y="-17" on="1"/>
        <pt x="130" y="-17" on="1"/>
        <pt x="50" y="-17" on="0"/>
        <pt x="16" y="17" on="1"/>
        <pt x="-2" y="35" on="0"/>
        <pt x="-2" y="57" on="1"/>
        <pt x="-2" y="77" on="0"/>
        <pt x="19" y="122" on="0"/>
        <pt x="31" y="134" on="1"/>
        <pt x="55" y="158" on="0"/>
        <pt x="88" y="158" on="1"/>
        <pt x="105" y="158" on="0"/>
        <pt x="128" y="137" on="0"/>
      </contour>
      <contour>
        <pt x="819" y="564" on="1"/>
        <pt x="819" y="599" on="0"/>
        <pt x="803" y="615" on="1"/>
        <pt x="800" y="619" on="1"/>
        <pt x="784" y="606" on="1"/>
        <pt x="728" y="556" on="0"/>
        <pt x="653" y="464" on="0"/>
        <pt x="605" y="387" on="1"/>
        <pt x="591" y="365" on="1"/>
        <pt x="610" y="364" on="1"/>
        <pt x="618" y="364" on="0"/>
        <pt x="637" y="361" on="0"/>
        <pt x="640" y="361" on="1"/>
        <pt x="641" y="361" on="0"/>
        <pt x="651" y="363" on="1"/>
        <pt x="734" y="391" on="0"/>
        <pt x="786" y="469" on="1"/>
        <pt x="819" y="518" on="0"/>
      </contour>
      <contour>
        <pt x="772" y="148" on="1"/>
        <pt x="781" y="148" on="1"/>
        <pt x="794" y="148" on="0"/>
        <pt x="794" y="141" on="1"/>
        <pt x="794" y="136" on="0"/>
        <pt x="788" y="129" on="1"/>
        <pt x="759" y="90" on="0"/>
        <pt x="674" y="21" on="0"/>
        <pt x="640" y="9" on="1"/>
        <pt x="622" y="3" on="0"/>
        <pt x="612" y="3" on="1"/>
        <pt x="609" y="3" on="0"/>
        <pt x="612" y="5" on="1"/>
        <pt x="612" y="5" on="0"/>
        <pt x="615" y="7" on="1"/>
        <pt x="639" y="19" on="0"/>
        <pt x="717" y="96" on="0"/>
        <pt x="742" y="131" on="1"/>
        <pt x="755" y="148" on="1"/>
      </contour>
      <contour>
        <pt x="588" y="-3" on="1"/>
        <pt x="590" y="0" on="0"/>
        <pt x="593" y="0" on="1"/>
        <pt x="594" y="0" on="1"/>
        <pt x="593" y="-1" on="1"/>
        <pt x="592" y="-1" on="0"/>
        <pt x="590" y="-2" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 23 values pushed */
          79 1 2 6 154 86 78 20 4 4 2 51 44 31 3 12 4 8 1 1 0 4 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          50
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 69 values pushed */
          0 4 2 12 2 4 12 112 15 1 13 11 0 11 13 0 112 0 12 9 1 8 3 12 8
          99 0 3 0 5 11 3 5 99 0 11 0 0 1 11 0 99 0 2 2 6 91 0 6 6
          15 75 14 1 7 7 18 75 0 1 1 10 91 0 10 10 20 10 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 67 values pushed */
          0 4 2 12 2 4 12 112 15 1 13 11 0 11 13 0 112 0 6 0 2 4 6 2 99
          0 12 9 1 8 3 12 8 99 0 3 0 5 11 3 5 99 0 11 0 0 1 11 0 99
          14 1 7 7 18 75 0 1 1 10 91 0 10 10 20 10 76
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 30 values pushed */
          172 170 180 179 170 188 172 188 161 160 150 148 141 138 131 130 129 126 113 111 74 57 44 41 43
          38 34 16 6 27
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="S" xMin="29" yMin="-36" xMax="1016" yMax="708">
      <contour>
        <pt x="100" y="75" on="1"/>
        <pt x="88" y="75" on="0"/>
        <pt x="72" y="82" on="1"/>
        <pt x="67" y="82" on="0"/>
        <pt x="67" y="59" on="1"/>
        <pt x="67" y="31" on="0"/>
        <pt x="126" y="0" on="0"/>
        <pt x="166" y="0" on="1"/>
        <pt x="181" y="0" on="0"/>
        <pt x="205" y="4" on="1"/>
        <pt x="311" y="27" on="0"/>
        <pt x="422" y="141" on="1"/>
        <pt x="459" y="181" on="0"/>
        <pt x="491" y="226" on="1"/>
        <pt x="530" y="279" on="0"/>
        <pt x="551" y="305" on="1"/>
        <pt x="558" y="314" on="1"/>
        <pt x="558" y="315" on="0"/>
        <pt x="543" y="315" on="1"/>
        <pt x="422" y="321" on="0"/>
        <pt x="354" y="366" on="1"/>
        <pt x="300" y="401" on="0"/>
        <pt x="290" y="442" on="1"/>
        <pt x="289" y="447" on="0"/>
        <pt x="289" y="460" on="1"/>
        <pt x="289" y="504" on="0"/>
        <pt x="324" y="542" on="1"/>
        <pt x="369" y="593" on="0"/>
        <pt x="488" y="632" on="1"/>
        <pt x="578" y="662" on="0"/>
        <pt x="660" y="665" on="1"/>
        <pt x="679" y="665" on="1"/>
        <pt x="684" y="660" on="0"/>
        <pt x="683" y="653" on="0"/>
        <pt x="676" y="642" on="1"/>
        <pt x="670" y="633" on="0"/>
        <pt x="666" y="629" on="1"/>
        <pt x="664" y="628" on="1"/>
        <pt x="663" y="628" on="0"/>
        <pt x="658" y="628" on="0"/>
        <pt x="655" y="628" on="1"/>
        <pt x="591" y="628" on="0"/>
        <pt x="462" y="591" on="0"/>
        <pt x="417" y="564" on="1"/>
        <pt x="365" y="531" on="0"/>
        <pt x="350" y="486" on="1"/>
        <pt x="346" y="475" on="0"/>
        <pt x="346" y="463" on="1"/>
        <pt x="346" y="416" on="0"/>
        <pt x="410" y="384" on="1"/>
        <pt x="472" y="352" on="0"/>
        <pt x="576" y="352" on="1"/>
        <pt x="588" y="352" on="1"/>
        <pt x="613" y="384" on="1"/>
        <pt x="644" y="424" on="0"/>
        <pt x="681" y="476" on="1"/>
        <pt x="834" y="688" on="0"/>
        <pt x="955" y="706" on="1"/>
        <pt x="967" y="708" on="0"/>
        <pt x="973" y="708" on="1"/>
        <pt x="1016" y="708" on="0"/>
        <pt x="1016" y="661" on="1"/>
        <pt x="1016" y="644" on="0"/>
        <pt x="1010" y="621" on="1"/>
        <pt x="999" y="576" on="0"/>
        <pt x="934" y="483" on="0"/>
        <pt x="894" y="449" on="1"/>
        <pt x="802" y="375" on="0"/>
        <pt x="696" y="338" on="1"/>
        <pt x="682" y="334" on="1"/>
        <pt x="665" y="312" on="1"/>
        <pt x="647" y="290" on="0"/>
        <pt x="591" y="215" on="1"/>
        <pt x="566" y="180" on="0"/>
        <pt x="561" y="175" on="1"/>
        <pt x="530" y="137" on="0"/>
        <pt x="482" y="97" on="1"/>
        <pt x="342" y="-15" on="0"/>
        <pt x="195" y="-35" on="1"/>
        <pt x="187" y="-36" on="0"/>
        <pt x="158" y="-36" on="1"/>
        <pt x="65" y="-36" on="0"/>
        <pt x="39" y="11" on="1"/>
        <pt x="29" y="27" on="0"/>
        <pt x="29" y="48" on="1"/>
        <pt x="29" y="61" on="0"/>
        <pt x="34" y="78" on="1"/>
        <pt x="46" y="111" on="0"/>
        <pt x="91" y="158" on="0"/>
        <pt x="123" y="158" on="1"/>
        <pt x="141" y="158" on="0"/>
        <pt x="164" y="136" on="0"/>
        <pt x="164" y="102" on="0"/>
        <pt x="121" y="75" on="0"/>
      </contour>
      <contour>
        <pt x="976" y="653" on="1"/>
        <pt x="976" y="663" on="0"/>
        <pt x="969" y="671" on="0"/>
        <pt x="949" y="671" on="0"/>
        <pt x="934" y="666" on="1"/>
        <pt x="913" y="660" on="0"/>
        <pt x="871" y="616" on="0"/>
        <pt x="851" y="582" on="0"/>
        <pt x="830" y="545" on="1"/>
        <pt x="791" y="475" on="0"/>
        <pt x="735" y="402" on="1"/>
        <pt x="721" y="382" on="1"/>
        <pt x="842" y="431" on="0"/>
        <pt x="911" y="517" on="1"/>
        <pt x="923" y="531" on="0"/>
        <pt x="949" y="573" on="1"/>
        <pt x="976" y="622" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 15 values pushed */
          105 22 2 5 4 2 1 0 8 4 1 1 0 3 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          9
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 49 values pushed */
          0 9 6 3 6 9 3 112 0 3 0 4 5 3 4 99 0 5 0 2 8 5 2 99 0
          8 10 1 0 1 8 0 99 0 6 6 15 75 0 1 1 7 91 0 7 7 16 7 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          12
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 49 values pushed */
          0 9 6 3 6 9 3 112 0 3 0 4 5 3 4 99 0 5 0 2 8 5 2 99 0
          8 10 1 0 1 8 0 99 0 6 6 15 75 0 1 1 7 91 0 7 7 20 7 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          13
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 49 values pushed */
          0 9 6 3 6 9 3 112 0 3 0 4 5 3 4 99 0 5 0 2 8 5 2 99 0
          8 10 1 0 1 8 0 99 0 6 6 15 75 0 1 1 7 91 0 7 7 16 7 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          26
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 49 values pushed */
          0 9 6 3 6 9 3 112 0 3 0 4 5 3 4 99 0 5 0 2 8 5 2 99 0
          8 10 1 0 1 8 0 99 0 6 6 15 75 0 1 1 7 91 0 7 7 20 7 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          28
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 46 values pushed */
          0 9 6 3 6 9 3 112 0 3 0 4 5 3 4 99 0 5 0 2 8 5 2 99 0
          8 10 1 0 1 8 0 99 0 1 0 7 1 7 95 0 6 6 15 6 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 51 values pushed */
          0 6 9 6 114 0 9 3 9 114 0 3 0 4 5 3 4 99 0 5 0 2 8 5 2
          99 0 8 10 1 0 1 8 0 99 0 1 7 7 1 87 0 1 1 7 91 0 7 1 7
          79
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 27 values pushed */
          1 0 97 96 90 88 81 79 60 58 52 50 41 37 31 29 19 16 8 6 0 93 1 93 11
          6 20
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="T" xMin="92" yMin="-37" xMax="996" yMax="735">
      <contour>
        <pt x="354" y="350" on="1"/>
        <pt x="264" y="350" on="0"/>
        <pt x="264" y="426" on="1"/>
        <pt x="264" y="442" on="0"/>
        <pt x="265" y="448" on="1"/>
        <pt x="285" y="539" on="0"/>
        <pt x="514" y="719" on="0"/>
        <pt x="639" y="734" on="1"/>
        <pt x="645" y="735" on="0"/>
        <pt x="662" y="735" on="1"/>
        <pt x="692" y="735" on="0"/>
        <pt x="710" y="732" on="1"/>
        <pt x="759" y="724" on="0"/>
        <pt x="830" y="692" on="1"/>
        <pt x="888" y="668" on="0"/>
        <pt x="917" y="660" on="1"/>
        <pt x="953" y="651" on="0"/>
        <pt x="983" y="651" on="1"/>
        <pt x="996" y="651" on="0"/>
        <pt x="996" y="644" on="1"/>
        <pt x="996" y="639" on="0"/>
        <pt x="976" y="611" on="1"/>
        <pt x="958" y="585" on="0"/>
        <pt x="954" y="581" on="1"/>
        <pt x="953" y="580" on="0"/>
        <pt x="938" y="580" on="1"/>
        <pt x="909" y="582" on="0"/>
        <pt x="884" y="587" on="1"/>
        <pt x="869" y="591" on="1"/>
        <pt x="870" y="587" on="1"/>
        <pt x="870" y="583" on="0"/>
        <pt x="853" y="562" on="1"/>
        <pt x="778" y="474" on="0"/>
        <pt x="748" y="422" on="1"/>
        <pt x="727" y="387" on="0"/>
        <pt x="700" y="328" on="1"/>
        <pt x="658" y="237" on="0"/>
        <pt x="620" y="188" on="1"/>
        <pt x="553" y="101" on="0"/>
        <pt x="371" y="-22" on="0"/>
        <pt x="291" y="-34" on="1"/>
        <pt x="276" y="-37" on="0"/>
        <pt x="253" y="-37" on="1"/>
        <pt x="196" y="-37" on="0"/>
        <pt x="113" y="-6" on="0"/>
        <pt x="99" y="21" on="1"/>
        <pt x="92" y="35" on="0"/>
        <pt x="92" y="53" on="1"/>
        <pt x="92" y="73" on="0"/>
        <pt x="115" y="121" on="0"/>
        <pt x="128" y="134" on="1"/>
        <pt x="152" y="158" on="0"/>
        <pt x="184" y="158" on="1"/>
        <pt x="202" y="158" on="0"/>
        <pt x="225" y="136" on="0"/>
        <pt x="225" y="102" on="0"/>
        <pt x="182" y="75" on="0"/>
        <pt x="161" y="75" on="1"/>
        <pt x="150" y="75" on="0"/>
        <pt x="134" y="81" on="1"/>
        <pt x="133" y="81" on="0"/>
        <pt x="131" y="79" on="0"/>
        <pt x="130" y="73" on="0"/>
        <pt x="130" y="66" on="0"/>
        <pt x="130" y="62" on="1"/>
        <pt x="130" y="44" on="0"/>
        <pt x="139" y="35" on="1"/>
        <pt x="171" y="0" on="0"/>
        <pt x="267" y="0" on="1"/>
        <pt x="297" y="0" on="0"/>
        <pt x="324" y="12" on="1"/>
        <pt x="406" y="47" on="0"/>
        <pt x="508" y="182" on="1"/>
        <pt x="542" y="227" on="0"/>
        <pt x="614" y="336" on="1"/>
        <pt x="681" y="435" on="0"/>
        <pt x="710" y="476" on="1"/>
        <pt x="759" y="538" on="0"/>
        <pt x="821" y="588" on="1"/>
        <pt x="836" y="599" on="0"/>
        <pt x="836" y="601" on="1"/>
        <pt x="830" y="604" on="0"/>
        <pt x="823" y="607" on="1"/>
        <pt x="821" y="608" on="0"/>
        <pt x="785" y="623" on="1"/>
        <pt x="716" y="654" on="0"/>
        <pt x="666" y="662" on="1"/>
        <pt x="656" y="663" on="0"/>
        <pt x="626" y="663" on="1"/>
        <pt x="585" y="663" on="0"/>
        <pt x="555" y="657" on="1"/>
        <pt x="482" y="643" on="0"/>
        <pt x="354" y="547" on="0"/>
        <pt x="321" y="483" on="1"/>
        <pt x="305" y="449" on="0"/>
        <pt x="305" y="431" on="1"/>
        <pt x="305" y="416" on="0"/>
        <pt x="312" y="408" on="1"/>
        <pt x="324" y="388" on="0"/>
        <pt x="369" y="388" on="1"/>
        <pt x="398" y="388" on="0"/>
        <pt x="419" y="393" on="1"/>
        <pt x="487" y="410" on="0"/>
        <pt x="530" y="480" on="1"/>
        <pt x="557" y="526" on="0"/>
        <pt x="557" y="565" on="1"/>
        <pt x="557" y="567" on="0"/>
        <pt x="555" y="580" on="0"/>
        <pt x="554" y="588" on="0"/>
        <pt x="555" y="590" on="1"/>
        <pt x="555" y="591" on="0"/>
        <pt x="581" y="610" on="0"/>
        <pt x="584" y="611" on="1"/>
        <pt x="588" y="612" on="0"/>
        <pt x="600" y="603" on="1"/>
        <pt x="622" y="581" on="0"/>
        <pt x="622" y="549" on="1"/>
        <pt x="622" y="507" on="0"/>
        <pt x="570" y="429" on="0"/>
        <pt x="536" y="405" on="1"/>
        <pt x="454" y="350" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 14 values pushed */
          28 1 3 2 105 1 9 3 59 1 6 5 3 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          9
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 53 values pushed */
          0 2 8 3 8 2 3 112 0 3 9 8 3 9 110 0 9 10 1 0 5 9 0 99 0
          5 0 6 7 5 6 99 0 8 8 1 91 0 1 1 15 75 0 7 7 4 91 0 4 4
          20 4 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          11
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 53 values pushed */
          0 2 8 3 8 2 3 112 0 3 9 8 3 9 110 0 9 10 1 0 5 9 0 99 0
          5 0 6 7 5 6 99 0 8 8 1 91 0 1 1 15 75 0 7 7 4 91 0 4 4
          16 4 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          13
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 53 values pushed */
          0 2 8 3 8 2 3 112 0 3 9 8 3 9 110 0 9 10 1 0 5 9 0 99 0
          5 0 6 7 5 6 99 0 8 8 1 91 0 1 1 15 75 0 7 7 4 91 0 4 4
          20 4 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          14
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 53 values pushed */
          0 2 8 3 8 2 3 112 0 3 9 8 3 9 110 0 9 10 1 0 5 9 0 99 0
          5 0 6 7 5 6 99 0 8 8 1 91 0 1 1 15 75 0 7 7 4 91 0 4 4
          16 4 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          25
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 53 values pushed */
          0 2 8 3 8 2 3 112 0 3 9 8 3 9 110 0 9 10 1 0 5 9 0 99 0
          5 0 6 7 5 6 99 0 8 8 1 91 0 1 1 15 75 0 7 7 4 91 0 4 4
          20 4 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 50 values pushed */
          0 2 8 3 8 2 3 112 0 3 9 8 3 9 110 0 9 10 1 0 5 9 0 99 0
          5 0 6 7 5 6 99 0 7 0 4 7 4 95 0 8 8 1 91 0 1 1 15 8 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 27 values pushed */
          1 0 100 98 89 87 69 67 58 56 53 51 43 41 26 24 18 16 10 7 0 120 1 120 11
          6 20
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="U" xMin="55" yMin="-17" xMax="960" yMax="717">
      <contour>
        <pt x="548" y="608" on="1"/>
        <pt x="548" y="644" on="0"/>
        <pt x="500" y="680" on="0"/>
        <pt x="460" y="680" on="1"/>
        <pt x="448" y="680" on="0"/>
        <pt x="442" y="679" on="1"/>
        <pt x="359" y="671" on="0"/>
        <pt x="189" y="558" on="0"/>
        <pt x="134" y="475" on="1"/>
        <pt x="109" y="438" on="0"/>
        <pt x="99" y="406" on="1"/>
        <pt x="97" y="399" on="0"/>
        <pt x="97" y="383" on="1"/>
        <pt x="97" y="368" on="0"/>
        <pt x="99" y="363" on="1"/>
        <pt x="112" y="339" on="0"/>
        <pt x="153" y="339" on="1"/>
        <pt x="192" y="339" on="0"/>
        <pt x="223" y="360" on="1"/>
        <pt x="257" y="381" on="0"/>
        <pt x="298" y="444" on="1"/>
        <pt x="355" y="528" on="0"/>
        <pt x="365" y="583" on="1"/>
        <pt x="369" y="601" on="0"/>
        <pt x="372" y="602" on="1"/>
        <pt x="372" y="602" on="0"/>
        <pt x="374" y="603" on="1"/>
        <pt x="402" y="616" on="0"/>
        <pt x="408" y="616" on="1"/>
        <pt x="416" y="616" on="0"/>
        <pt x="416" y="608" on="1"/>
        <pt x="416" y="601" on="0"/>
        <pt x="408" y="549" on="1"/>
        <pt x="387" y="436" on="0"/>
        <pt x="320" y="378" on="1"/>
        <pt x="254" y="319" on="0"/>
        <pt x="173" y="304" on="1"/>
        <pt x="161" y="302" on="0"/>
        <pt x="140" y="302" on="1"/>
        <pt x="76" y="302" on="0"/>
        <pt x="57" y="353" on="1"/>
        <pt x="55" y="361" on="0"/>
        <pt x="55" y="377" on="1"/>
        <pt x="55" y="394" on="0"/>
        <pt x="57" y="402" on="1"/>
        <pt x="74" y="484" on="0"/>
        <pt x="265" y="661" on="0"/>
        <pt x="375" y="698" on="1"/>
        <pt x="434" y="717" on="0"/>
        <pt x="478" y="717" on="1"/>
        <pt x="543" y="717" on="0"/>
        <pt x="618" y="653" on="0"/>
        <pt x="618" y="594" on="1"/>
        <pt x="618" y="582" on="0"/>
        <pt x="616" y="568" on="1"/>
        <pt x="605" y="500" on="0"/>
        <pt x="556" y="428" on="1"/>
        <pt x="552" y="421" on="0"/>
        <pt x="363" y="154" on="0"/>
        <pt x="357" y="146" on="1"/>
        <pt x="310" y="74" on="0"/>
        <pt x="307" y="33" on="1"/>
        <pt x="307" y="19" on="0"/>
        <pt x="315" y="19" on="1"/>
        <pt x="317" y="19" on="0"/>
        <pt x="331" y="21" on="1"/>
        <pt x="367" y="27" on="0"/>
        <pt x="456" y="87" on="0"/>
        <pt x="490" y="128" on="1"/>
        <pt x="492" y="130" on="0"/>
        <pt x="512" y="158" on="1"/>
        <pt x="629" y="324" on="0"/>
        <pt x="767" y="500" on="1"/>
        <pt x="833" y="584" on="0"/>
        <pt x="861" y="617" on="1"/>
        <pt x="908" y="617" on="1"/>
        <pt x="917" y="617" on="0"/>
        <pt x="941" y="618" on="0"/>
        <pt x="944" y="618" on="1"/>
        <pt x="960" y="618" on="0"/>
        <pt x="960" y="609" on="1"/>
        <pt x="960" y="605" on="0"/>
        <pt x="925" y="561" on="1"/>
        <pt x="768" y="364" on="0"/>
        <pt x="648" y="198" on="1"/>
        <pt x="587" y="113" on="0"/>
        <pt x="571" y="86" on="1"/>
        <pt x="540" y="34" on="0"/>
        <pt x="540" y="21" on="1"/>
        <pt x="540" y="20" on="0"/>
        <pt x="545" y="20" on="1"/>
        <pt x="603" y="28" on="0"/>
        <pt x="664" y="88" on="1"/>
        <pt x="682" y="104" on="0"/>
        <pt x="696" y="124" on="1"/>
        <pt x="702" y="132" on="0"/>
        <pt x="707" y="134" on="0"/>
        <pt x="722" y="134" on="1"/>
        <pt x="739" y="134" on="1"/>
        <pt x="743" y="129" on="0"/>
        <pt x="743" y="123" on="0"/>
        <pt x="735" y="113" on="1"/>
        <pt x="720" y="92" on="0"/>
        <pt x="681" y="58" on="1"/>
        <pt x="602" y="-5" on="0"/>
        <pt x="529" y="-17" on="1"/>
        <pt x="524" y="-17" on="1"/>
        <pt x="476" y="-17" on="0"/>
        <pt x="473" y="47" on="1"/>
        <pt x="473" y="63" on="1"/>
        <pt x="462" y="55" on="1"/>
        <pt x="435" y="35" on="0"/>
        <pt x="420" y="26" on="1"/>
        <pt x="350" y="-17" on="0"/>
        <pt x="302" y="-17" on="1"/>
        <pt x="235" y="-17" on="0"/>
        <pt x="235" y="69" on="1"/>
        <pt x="235" y="120" on="0"/>
        <pt x="267" y="170" on="1"/>
        <pt x="270" y="175" on="0"/>
        <pt x="369" y="304" on="1"/>
        <pt x="451" y="409" on="0"/>
        <pt x="499" y="476" on="0"/>
        <pt x="517" y="511" on="1"/>
        <pt x="548" y="573" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 75 values pushed */
          80 1 1 2 109 88 61 3 5 7 2 74 6 1 2 0 1 0 2 1 112 0 7 3 5
          3 7 5 112 0 1 0 3 7 1 3 99 0 0 0 4 91 0 4 4 15 75 0 5 5
          8 91 9 1 8 8 20 8 76 115 113 107 105 98 97 90 44 41 40 42 43 34 10 6 27
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="V" xMin="56" yMin="-17" xMax="850" yMax="717">
      <contour>
        <pt x="259" y="552" on="1"/>
        <pt x="259" y="565" on="0"/>
        <pt x="211" y="565" on="0"/>
        <pt x="181" y="550" on="1"/>
        <pt x="140" y="529" on="0"/>
        <pt x="105" y="482" on="1"/>
        <pt x="103" y="479" on="0"/>
        <pt x="99" y="473" on="0"/>
        <pt x="97" y="471" on="0"/>
        <pt x="94" y="468" on="0"/>
        <pt x="91" y="467" on="0"/>
        <pt x="86" y="467" on="0"/>
        <pt x="82" y="467" on="1"/>
        <pt x="75" y="467" on="1"/>
        <pt x="62" y="467" on="0"/>
        <pt x="59" y="470" on="1"/>
        <pt x="56" y="472" on="0"/>
        <pt x="56" y="475" on="1"/>
        <pt x="56" y="480" on="0"/>
        <pt x="60" y="484" on="1"/>
        <pt x="86" y="522" on="0"/>
        <pt x="182" y="590" on="0"/>
        <pt x="224" y="599" on="1"/>
        <pt x="233" y="601" on="0"/>
        <pt x="253" y="601" on="1"/>
        <pt x="334" y="601" on="0"/>
        <pt x="334" y="557" on="1"/>
        <pt x="334" y="541" on="0"/>
        <pt x="314" y="520" on="1"/>
        <pt x="289" y="491" on="0"/>
        <pt x="289" y="478" on="1"/>
        <pt x="289" y="473" on="0"/>
        <pt x="291" y="472" on="1"/>
        <pt x="301" y="468" on="0"/>
        <pt x="320" y="477" on="1"/>
        <pt x="348" y="488" on="0"/>
        <pt x="378" y="514" on="1"/>
        <pt x="385" y="520" on="0"/>
        <pt x="390" y="531" on="1"/>
        <pt x="412" y="576" on="0"/>
        <pt x="488" y="684" on="0"/>
        <pt x="520" y="713" on="1"/>
        <pt x="524" y="717" on="1"/>
        <pt x="540" y="717" on="1"/>
        <pt x="556" y="717" on="0"/>
        <pt x="559" y="715" on="1"/>
        <pt x="564" y="708" on="0"/>
        <pt x="554" y="697" on="1"/>
        <pt x="501" y="633" on="0"/>
        <pt x="448" y="407" on="1"/>
        <pt x="425" y="311" on="0"/>
        <pt x="411" y="276" on="1"/>
        <pt x="394" y="234" on="0"/>
        <pt x="372" y="197" on="1"/>
        <pt x="363" y="181" on="0"/>
        <pt x="364" y="181" on="1"/>
        <pt x="375" y="191" on="0"/>
        <pt x="388" y="203" on="1"/>
        <pt x="462" y="271" on="0"/>
        <pt x="524" y="346" on="0"/>
        <pt x="579" y="429" on="1"/>
        <pt x="661" y="554" on="0"/>
        <pt x="718" y="612" on="1"/>
        <pt x="768" y="661" on="0"/>
        <pt x="822" y="694" on="1"/>
        <pt x="831" y="700" on="0"/>
        <pt x="835" y="700" on="1"/>
        <pt x="840" y="700" on="0"/>
        <pt x="846" y="680" on="1"/>
        <pt x="850" y="668" on="0"/>
        <pt x="850" y="662" on="1"/>
        <pt x="850" y="657" on="0"/>
        <pt x="842" y="653" on="1"/>
        <pt x="780" y="617" on="0"/>
        <pt x="721" y="553" on="1"/>
        <pt x="679" y="506" on="0"/>
        <pt x="610" y="405" on="1"/>
        <pt x="563" y="335" on="0"/>
        <pt x="520" y="282" on="0"/>
        <pt x="478" y="241" on="1"/>
        <pt x="441" y="204" on="0"/>
        <pt x="368" y="138" on="1"/>
        <pt x="271" y="51" on="0"/>
        <pt x="241" y="19" on="1"/>
        <pt x="227" y="3" on="0"/>
        <pt x="218" y="-5" on="1"/>
        <pt x="207" y="-17" on="1"/>
        <pt x="175" y="-17" on="1"/>
        <pt x="169" y="-11" on="0"/>
        <pt x="169" y="-9" on="1"/>
        <pt x="169" y="-5" on="0"/>
        <pt x="183" y="10" on="1"/>
        <pt x="237" y="67" on="0"/>
        <pt x="303" y="222" on="0"/>
        <pt x="327" y="334" on="1"/>
        <pt x="341" y="401" on="0"/>
        <pt x="356" y="445" on="1"/>
        <pt x="357" y="450" on="0"/>
        <pt x="360" y="458" on="1"/>
        <pt x="362" y="464" on="1"/>
        <pt x="359" y="462" on="0"/>
        <pt x="355" y="460" on="1"/>
        <pt x="313" y="434" on="0"/>
        <pt x="276" y="434" on="1"/>
        <pt x="221" y="437" on="0"/>
        <pt x="221" y="479" on="1"/>
        <pt x="221" y="502" on="0"/>
        <pt x="247" y="530" on="1"/>
        <pt x="259" y="544" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 10 values pushed */
          30 1 1 0 98 1 6 1 2 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          10
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 41 values pushed */
          0 4 3 2 3 4 2 112 0 1 0 6 0 1 6 112 0 6 5 0 6 102 0 2 0
          0 1 2 0 99 0 3 3 15 75 0 5 5 16 5 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 42 values pushed */
          0 4 3 2 3 4 2 112 0 1 0 6 0 1 6 112 0 6 5 0 6 5 110 0 2
          0 0 1 2 0 99 0 3 3 15 75 0 5 5 16 5 76
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 14 values pushed */
          104 102 87 86 67 65 44 43 41 57 17 7 6 23
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="W" xMin="46" yMin="-17" xMax="1026" yMax="717">
      <contour>
        <pt x="232" y="504" on="1"/>
        <pt x="232" y="492" on="0"/>
        <pt x="263" y="492" on="1"/>
        <pt x="306" y="492" on="0"/>
        <pt x="356" y="515" on="1"/>
        <pt x="367" y="520" on="1"/>
        <pt x="379" y="537" on="1"/>
        <pt x="443" y="632" on="0"/>
        <pt x="515" y="705" on="1"/>
        <pt x="527" y="717" on="1"/>
        <pt x="543" y="717" on="1"/>
        <pt x="551" y="717" on="1"/>
        <pt x="564" y="717" on="0"/>
        <pt x="564" y="709" on="1"/>
        <pt x="564" y="705" on="0"/>
        <pt x="556" y="696" on="1"/>
        <pt x="522" y="656" on="0"/>
        <pt x="481" y="576" on="1"/>
        <pt x="447" y="507" on="0"/>
        <pt x="398" y="385" on="1"/>
        <pt x="368" y="309" on="0"/>
        <pt x="353" y="281" on="1"/>
        <pt x="349" y="270" on="1"/>
        <pt x="442" y="377" on="0"/>
        <pt x="523" y="472" on="1"/>
        <pt x="580" y="536" on="0"/>
        <pt x="669" y="634" on="1"/>
        <pt x="740" y="710" on="0"/>
        <pt x="747" y="715" on="1"/>
        <pt x="749" y="717" on="0"/>
        <pt x="765" y="717" on="1"/>
        <pt x="774" y="717" on="1"/>
        <pt x="786" y="717" on="0"/>
        <pt x="786" y="710" on="1"/>
        <pt x="786" y="706" on="0"/>
        <pt x="773" y="686" on="1"/>
        <pt x="724" y="612" on="0"/>
        <pt x="675" y="497" on="1"/>
        <pt x="630" y="394" on="0"/>
        <pt x="587" y="313" on="0"/>
        <pt x="541" y="244" on="1"/>
        <pt x="456" y="120" on="0"/>
        <pt x="449" y="111" on="1"/>
        <pt x="447" y="107" on="1"/>
        <pt x="448" y="108" on="1"/>
        <pt x="462" y="117" on="0"/>
        <pt x="554" y="190" on="1"/>
        <pt x="657" y="274" on="0"/>
        <pt x="700" y="327" on="1"/>
        <pt x="734" y="368" on="0"/>
        <pt x="788" y="463" on="1"/>
        <pt x="830" y="535" on="0"/>
        <pt x="858" y="573" on="1"/>
        <pt x="910" y="643" on="0"/>
        <pt x="980" y="683" on="1"/>
        <pt x="1010" y="700" on="0"/>
        <pt x="1018" y="700" on="1"/>
        <pt x="1020" y="700" on="0"/>
        <pt x="1026" y="694" on="0"/>
        <pt x="1026" y="692" on="1"/>
        <pt x="1026" y="688" on="0"/>
        <pt x="1021" y="654" on="0"/>
        <pt x="1020" y="652" on="1"/>
        <pt x="1017" y="649" on="0"/>
        <pt x="992" y="637" on="0"/>
        <pt x="988" y="635" on="1"/>
        <pt x="937" y="608" on="0"/>
        <pt x="867" y="521" on="0"/>
        <pt x="823" y="445" on="1"/>
        <pt x="794" y="394" on="0"/>
        <pt x="772" y="361" on="1"/>
        <pt x="741" y="314" on="0"/>
        <pt x="699" y="272" on="1"/>
        <pt x="653" y="226" on="0"/>
        <pt x="535" y="133" on="1"/>
        <pt x="423" y="47" on="0"/>
        <pt x="373" y="-2" on="1"/>
        <pt x="358" y="-17" on="1"/>
        <pt x="342" y="-17" on="1"/>
        <pt x="320" y="-17" on="0"/>
        <pt x="320" y="-11" on="1"/>
        <pt x="320" y="-6" on="0"/>
        <pt x="328" y="5" on="1"/>
        <pt x="362" y="54" on="0"/>
        <pt x="390" y="112" on="1"/>
        <pt x="401" y="133" on="0"/>
        <pt x="482" y="314" on="0"/>
        <pt x="487" y="324" on="1"/>
        <pt x="505" y="360" on="0"/>
        <pt x="556" y="443" on="0"/>
        <pt x="572" y="466" on="1"/>
        <pt x="589" y="490" on="1"/>
        <pt x="587" y="490" on="0"/>
        <pt x="462" y="344" on="1"/>
        <pt x="262" y="114" on="0"/>
        <pt x="166" y="14" on="1"/>
        <pt x="138" y="-16" on="0"/>
        <pt x="137" y="-16" on="1"/>
        <pt x="136" y="-17" on="0"/>
        <pt x="120" y="-17" on="1"/>
        <pt x="112" y="-17" on="1"/>
        <pt x="99" y="-17" on="0"/>
        <pt x="99" y="-9" on="1"/>
        <pt x="99" y="-5" on="0"/>
        <pt x="106" y="3" on="1"/>
        <pt x="168" y="72" on="0"/>
        <pt x="270" y="327" on="1"/>
        <pt x="309" y="423" on="0"/>
        <pt x="337" y="471" on="1"/>
        <pt x="326" y="467" on="1"/>
        <pt x="280" y="455" on="0"/>
        <pt x="243" y="455" on="1"/>
        <pt x="155" y="455" on="0"/>
        <pt x="155" y="496" on="1"/>
        <pt x="155" y="509" on="0"/>
        <pt x="175" y="532" on="1"/>
        <pt x="198" y="558" on="0"/>
        <pt x="198" y="576" on="1"/>
        <pt x="198" y="593" on="0"/>
        <pt x="178" y="593" on="1"/>
        <pt x="163" y="593" on="0"/>
        <pt x="141" y="571" on="1"/>
        <pt x="118" y="546" on="0"/>
        <pt x="100" y="519" on="1"/>
        <pt x="89" y="504" on="0"/>
        <pt x="83" y="499" on="0"/>
        <pt x="75" y="499" on="1"/>
        <pt x="68" y="499" on="1"/>
        <pt x="47" y="502" on="0"/>
        <pt x="46" y="506" on="1"/>
        <pt x="46" y="510" on="0"/>
        <pt x="56" y="523" on="1"/>
        <pt x="118" y="609" on="0"/>
        <pt x="170" y="627" on="1"/>
        <pt x="178" y="629" on="0"/>
        <pt x="195" y="629" on="1"/>
        <pt x="228" y="629" on="0"/>
        <pt x="270" y="600" on="0"/>
        <pt x="270" y="577" on="1"/>
        <pt x="270" y="551" on="0"/>
        <pt x="243" y="522" on="1"/>
        <pt x="232" y="510" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 78 values pushed */
          108 91 2 6 0 42 22 2 4 6 2 74 0 3 1 9 1 3 9 112 0 8 7 0 7
          8 0 112 0 9 0 7 8 9 7 99 0 0 0 6 4 0 6 99 2 1 1 1 15 75
          5 1 4 4 20 4 76 136 134 127 125 120 118 112 110 101 96 79 77 57 55 32 30 54 33
          10 6 22
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="X" xMin="103" yMin="-17" xMax="1131" yMax="717">
      <contour>
        <pt x="351" y="351" on="1"/>
        <pt x="313" y="351" on="0"/>
        <pt x="272" y="392" on="0"/>
        <pt x="272" y="426" on="1"/>
        <pt x="272" y="455" on="0"/>
        <pt x="286" y="488" on="1"/>
        <pt x="310" y="552" on="0"/>
        <pt x="413" y="657" on="0"/>
        <pt x="478" y="688" on="1"/>
        <pt x="539" y="717" on="0"/>
        <pt x="584" y="717" on="1"/>
        <pt x="712" y="717" on="0"/>
        <pt x="745" y="620" on="1"/>
        <pt x="752" y="598" on="0"/>
        <pt x="752" y="530" on="0"/>
        <pt x="745" y="498" on="1"/>
        <pt x="741" y="485" on="1"/>
        <pt x="744" y="488" on="1"/>
        <pt x="811" y="564" on="0"/>
        <pt x="973" y="707" on="0"/>
        <pt x="1027" y="716" on="1"/>
        <pt x="1035" y="717" on="0"/>
        <pt x="1060" y="717" on="1"/>
        <pt x="1083" y="716" on="0"/>
        <pt x="1107" y="714" on="0"/>
        <pt x="1131" y="699" on="0"/>
        <pt x="1131" y="686" on="1"/>
        <pt x="1131" y="666" on="0"/>
        <pt x="1083" y="626" on="0"/>
        <pt x="1055" y="626" on="1"/>
        <pt x="1038" y="626" on="0"/>
        <pt x="1016" y="648" on="0"/>
        <pt x="1016" y="663" on="1"/>
        <pt x="1016" y="669" on="0"/>
        <pt x="1020" y="679" on="1"/>
        <pt x="1015" y="679" on="1"/>
        <pt x="994" y="675" on="0"/>
        <pt x="964" y="655" on="1"/>
        <pt x="935" y="635" on="0"/>
        <pt x="884" y="587" on="1"/>
        <pt x="807" y="514" on="0"/>
        <pt x="728" y="413" on="1"/>
        <pt x="688" y="360" on="1"/>
        <pt x="688" y="359" on="0"/>
        <pt x="725" y="359" on="1"/>
        <pt x="732" y="359" on="0"/>
        <pt x="752" y="360" on="0"/>
        <pt x="755" y="360" on="1"/>
        <pt x="770" y="360" on="0"/>
        <pt x="770" y="348" on="1"/>
        <pt x="769" y="345" on="0"/>
        <pt x="752" y="324" on="0"/>
        <pt x="750" y="322" on="1"/>
        <pt x="748" y="321" on="0"/>
        <pt x="704" y="321" on="1"/>
        <pt x="660" y="321" on="1"/>
        <pt x="650" y="308" on="0"/>
        <pt x="638" y="289" on="1"/>
        <pt x="571" y="190" on="0"/>
        <pt x="565" y="117" on="1"/>
        <pt x="565" y="107" on="1"/>
        <pt x="565" y="25" on="0"/>
        <pt x="653" y="20" on="1"/>
        <pt x="673" y="20" on="0"/>
        <pt x="688" y="27" on="1"/>
        <pt x="757" y="56" on="0"/>
        <pt x="837" y="167" on="1"/>
        <pt x="846" y="179" on="0"/>
        <pt x="850" y="183" on="1"/>
        <pt x="856" y="184" on="1"/>
        <pt x="861" y="184" on="0"/>
        <pt x="865" y="184" on="1"/>
        <pt x="866" y="184" on="0"/>
        <pt x="868" y="184" on="1"/>
        <pt x="888" y="184" on="0"/>
        <pt x="888" y="173" on="1"/>
        <pt x="883" y="163" on="0"/>
        <pt x="845" y="117" on="1"/>
        <pt x="801" y="70" on="0"/>
        <pt x="779" y="52" on="1"/>
        <pt x="706" y="-8" on="0"/>
        <pt x="659" y="-16" on="1"/>
        <pt x="654" y="-17" on="0"/>
        <pt x="638" y="-17" on="1"/>
        <pt x="584" y="-14" on="0"/>
        <pt x="523" y="46" on="0"/>
        <pt x="523" y="101" on="1"/>
        <pt x="523" y="145" on="0"/>
        <pt x="534" y="167" on="1"/>
        <pt x="532" y="166" on="1"/>
        <pt x="530" y="164" on="0"/>
        <pt x="521" y="156" on="0"/>
        <pt x="518" y="153" on="1"/>
        <pt x="439" y="75" on="0"/>
        <pt x="360" y="28" on="1"/>
        <pt x="302" y="-4" on="0"/>
        <pt x="256" y="-15" on="1"/>
        <pt x="250" y="-16" on="0"/>
        <pt x="226" y="-16" on="1"/>
        <pt x="153" y="-16" on="0"/>
        <pt x="119" y="18" on="1"/>
        <pt x="103" y="35" on="0"/>
        <pt x="103" y="59" on="1"/>
        <pt x="103" y="85" on="0"/>
        <pt x="133" y="134" on="0"/>
        <pt x="152" y="146" on="1"/>
        <pt x="172" y="158" on="0"/>
        <pt x="194" y="158" on="1"/>
        <pt x="232" y="158" on="0"/>
        <pt x="232" y="121" on="1"/>
        <pt x="232" y="111" on="0"/>
        <pt x="230" y="107" on="1"/>
        <pt x="213" y="75" on="0"/>
        <pt x="168" y="75" on="1"/>
        <pt x="158" y="75" on="0"/>
        <pt x="150" y="78" on="1"/>
        <pt x="150" y="70" on="1"/>
        <pt x="150" y="55" on="0"/>
        <pt x="161" y="44" on="1"/>
        <pt x="185" y="20" on="0"/>
        <pt x="241" y="20" on="1"/>
        <pt x="258" y="20" on="0"/>
        <pt x="276" y="27" on="1"/>
        <pt x="344" y="56" on="0"/>
        <pt x="428" y="156" on="1"/>
        <pt x="472" y="208" on="0"/>
        <pt x="527" y="286" on="1"/>
        <pt x="552" y="321" on="1"/>
        <pt x="524" y="321" on="1"/>
        <pt x="507" y="321" on="1"/>
        <pt x="489" y="321" on="0"/>
        <pt x="489" y="330" on="1"/>
        <pt x="489" y="333" on="0"/>
        <pt x="506" y="356" on="0"/>
        <pt x="509" y="358" on="1"/>
        <pt x="511" y="359" on="0"/>
        <pt x="545" y="359" on="1"/>
        <pt x="579" y="359" on="1"/>
        <pt x="583" y="367" on="1"/>
        <pt x="605" y="401" on="0"/>
        <pt x="618" y="423" on="1"/>
        <pt x="675" y="523" on="0"/>
        <pt x="675" y="586" on="1"/>
        <pt x="675" y="632" on="0"/>
        <pt x="620" y="680" on="0"/>
        <pt x="572" y="680" on="1"/>
        <pt x="521" y="680" on="0"/>
        <pt x="416" y="618" on="0"/>
        <pt x="375" y="564" on="1"/>
        <pt x="326" y="499" on="0"/>
        <pt x="315" y="451" on="1"/>
        <pt x="314" y="446" on="0"/>
        <pt x="314" y="434" on="1"/>
        <pt x="314" y="388" on="0"/>
        <pt x="364" y="388" on="1"/>
        <pt x="378" y="388" on="0"/>
        <pt x="386" y="390" on="1"/>
        <pt x="406" y="397" on="0"/>
        <pt x="434" y="422" on="0"/>
        <pt x="457" y="454" on="1"/>
        <pt x="513" y="533" on="0"/>
        <pt x="526" y="598" on="1"/>
        <pt x="526" y="601" on="0"/>
        <pt x="528" y="608" on="0"/>
        <pt x="528" y="610" on="1"/>
        <pt x="529" y="613" on="1"/>
        <pt x="531" y="615" on="0"/>
        <pt x="559" y="630" on="0"/>
        <pt x="560" y="630" on="1"/>
        <pt x="569" y="630" on="0"/>
        <pt x="578" y="594" on="0"/>
        <pt x="578" y="577" on="1"/>
        <pt x="578" y="562" on="0"/>
        <pt x="575" y="547" on="1"/>
        <pt x="565" y="501" on="0"/>
        <pt x="532" y="455" on="1"/>
        <pt x="506" y="417" on="0"/>
        <pt x="422" y="361" on="0"/>
        <pt x="379" y="353" on="1"/>
        <pt x="371" y="351" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 148 values pushed */
          34 32 2 17 15 150 16 2 16 3 131 49 2 5 0 88 75 2 10 7 115 59 2 11 10
          5 74 0 17 15 3 15 17 3 112 0 7 5 10 5 7 10 112 0 16 18 1 0 5 16
          0 99 14 1 4 13 1 5 7 4 5 99 0 10 0 11 6 10 11 99 0 15 15 1 91
          2 1 1 1 15 75 0 3 3 1 91 2 1 1 1 15 75 12 1 6 6 8 91 9 1
          8 8 16 8 76 1 0 169 167 155 153 146 144 137 136 130 127 121 119 114 112 108 106 99 96
          84 81 74 69 63 61 55 51 48 42 30 28 23 21 11 9 0 179 1 179 19 6 20
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Y" xMin="57" yMin="-17" xMax="959" yMax="716">
      <contour>
        <pt x="155" y="280" on="1"/>
        <pt x="110" y="280" on="0"/>
        <pt x="57" y="325" on="0"/>
        <pt x="57" y="368" on="1"/>
        <pt x="57" y="387" on="0"/>
        <pt x="59" y="395" on="1"/>
        <pt x="78" y="488" on="0"/>
        <pt x="192" y="589" on="1"/>
        <pt x="255" y="642" on="0"/>
        <pt x="395" y="709" on="0"/>
        <pt x="457" y="716" on="1"/>
        <pt x="472" y="716" on="1"/>
        <pt x="572" y="716" on="0"/>
        <pt x="613" y="675" on="1"/>
        <pt x="630" y="658" on="0"/>
        <pt x="644" y="627" on="0"/>
        <pt x="644" y="599" on="1"/>
        <pt x="644" y="578" on="0"/>
        <pt x="636" y="544" on="0"/>
        <pt x="626" y="523" on="0"/>
        <pt x="615" y="503" on="1"/>
        <pt x="607" y="492" on="0"/>
        <pt x="496" y="334" on="0"/>
        <pt x="493" y="328" on="1"/>
        <pt x="484" y="313" on="0"/>
        <pt x="480" y="306" on="1"/>
        <pt x="466" y="278" on="0"/>
        <pt x="466" y="256" on="1"/>
        <pt x="466" y="227" on="0"/>
        <pt x="496" y="227" on="1"/>
        <pt x="514" y="227" on="0"/>
        <pt x="534" y="234" on="1"/>
        <pt x="541" y="237" on="0"/>
        <pt x="548" y="246" on="0"/>
        <pt x="571" y="279" on="1"/>
        <pt x="580" y="292" on="0"/>
        <pt x="745" y="536" on="0"/>
        <pt x="762" y="559" on="1"/>
        <pt x="777" y="579" on="0"/>
        <pt x="792" y="595" on="1"/>
        <pt x="823" y="625" on="0"/>
        <pt x="875" y="659" on="1"/>
        <pt x="941" y="700" on="0"/>
        <pt x="946" y="700" on="1"/>
        <pt x="950" y="700" on="0"/>
        <pt x="959" y="685" on="0"/>
        <pt x="959" y="677" on="1"/>
        <pt x="959" y="673" on="0"/>
        <pt x="949" y="666" on="1"/>
        <pt x="904" y="639" on="0"/>
        <pt x="866" y="595" on="1"/>
        <pt x="816" y="537" on="0"/>
        <pt x="743" y="397" on="1"/>
        <pt x="681" y="278" on="0"/>
        <pt x="640" y="225" on="1"/>
        <pt x="584" y="150" on="0"/>
        <pt x="421" y="26" on="0"/>
        <pt x="344" y="0" on="1"/>
        <pt x="294" y="-17" on="0"/>
        <pt x="248" y="-17" on="1"/>
        <pt x="182" y="-17" on="0"/>
        <pt x="98" y="22" on="0"/>
        <pt x="98" y="102" on="0"/>
        <pt x="131" y="135" on="1"/>
        <pt x="156" y="156" on="0"/>
        <pt x="183" y="158" on="1"/>
        <pt x="226" y="158" on="0"/>
        <pt x="226" y="121" on="1"/>
        <pt x="226" y="111" on="0"/>
        <pt x="224" y="107" on="1"/>
        <pt x="217" y="94" on="0"/>
        <pt x="181" y="74" on="0"/>
        <pt x="162" y="74" on="1"/>
        <pt x="154" y="74" on="0"/>
        <pt x="147" y="77" on="1"/>
        <pt x="144" y="77" on="1"/>
        <pt x="144" y="70" on="1"/>
        <pt x="145" y="44" on="0"/>
        <pt x="218" y="20" on="0"/>
        <pt x="263" y="20" on="1"/>
        <pt x="275" y="20" on="0"/>
        <pt x="280" y="21" on="1"/>
        <pt x="374" y="33" on="0"/>
        <pt x="493" y="175" on="1"/>
        <pt x="507" y="192" on="1"/>
        <pt x="504" y="192" on="1"/>
        <pt x="500" y="191" on="0"/>
        <pt x="498" y="191" on="1"/>
        <pt x="484" y="189" on="0"/>
        <pt x="476" y="189" on="1"/>
        <pt x="474" y="189" on="0"/>
        <pt x="464" y="190" on="0"/>
        <pt x="461" y="190" on="1"/>
        <pt x="425" y="196" on="0"/>
        <pt x="379" y="247" on="0"/>
        <pt x="379" y="287" on="1"/>
        <pt x="379" y="312" on="0"/>
        <pt x="392" y="337" on="1"/>
        <pt x="396" y="345" on="0"/>
        <pt x="450" y="422" on="1"/>
        <pt x="519" y="518" on="0"/>
        <pt x="529" y="537" on="1"/>
        <pt x="559" y="588" on="0"/>
        <pt x="559" y="620" on="1"/>
        <pt x="559" y="680" on="0"/>
        <pt x="467" y="680" on="1"/>
        <pt x="451" y="680" on="0"/>
        <pt x="435" y="678" on="1"/>
        <pt x="354" y="665" on="0"/>
        <pt x="194" y="557" on="0"/>
        <pt x="141" y="478" on="1"/>
        <pt x="98" y="414" on="0"/>
        <pt x="98" y="373" on="1"/>
        <pt x="98" y="347" on="0"/>
        <pt x="136" y="317" on="0"/>
        <pt x="169" y="317" on="1"/>
        <pt x="187" y="317" on="0"/>
        <pt x="212" y="333" on="1"/>
        <pt x="241" y="354" on="0"/>
        <pt x="290" y="423" on="1"/>
        <pt x="340" y="494" on="0"/>
        <pt x="352" y="555" on="1"/>
        <pt x="354" y="562" on="0"/>
        <pt x="355" y="588" on="1"/>
        <pt x="355" y="612" on="0"/>
        <pt x="356" y="612" on="1"/>
        <pt x="357" y="614" on="0"/>
        <pt x="385" y="630" on="0"/>
        <pt x="387" y="630" on="1"/>
        <pt x="392" y="630" on="0"/>
        <pt x="407" y="604" on="0"/>
        <pt x="412" y="588" on="1"/>
        <pt x="415" y="578" on="0"/>
        <pt x="415" y="556" on="1"/>
        <pt x="415" y="542" on="0"/>
        <pt x="414" y="537" on="1"/>
        <pt x="403" y="470" on="0"/>
        <pt x="346" y="397" on="1"/>
        <pt x="325" y="370" on="0"/>
        <pt x="294" y="344" on="1"/>
        <pt x="216" y="280" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 14 values pushed */
          84 1 8 2 74 1 6 5 76 1 7 6 3 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          10
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 60 values pushed */
          0 3 1 9 1 3 9 112 0 5 8 6 7 5 104 0 6 7 8 6 7 110 0 10 11
          1 0 2 10 0 99 0 2 0 8 5 2 8 99 0 9 9 1 91 0 1 1 15 75 0
          7 7 4 92 0 4 4 20 4 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          50
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 61 values pushed */
          0 3 1 9 1 3 9 112 0 5 8 6 8 5 6 112 0 6 7 8 6 7 110 0 10
          11 1 0 2 10 0 99 0 2 0 8 5 2 8 99 0 9 9 1 91 0 1 1 15 75
          0 7 7 4 92 0 4 4 20 4 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 59 values pushed */
          0 3 1 9 1 3 9 112 0 5 8 6 8 5 6 112 0 6 7 8 6 7 110 0 1
          0 9 10 1 9 99 0 10 11 1 0 2 10 0 99 0 2 0 8 5 2 8 99 0 7
          7 4 92 0 4 4 20 4 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 29 values pushed */
          1 0 116 114 106 104 90 88 80 78 72 71 66 65 60 58 44 42 30 28 12 10 0 140 1
          140 12 6 20
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Z" xMin="83" yMin="-16" xMax="1032" yMax="717">
      <contour>
        <pt x="308" y="351" on="1"/>
        <pt x="267" y="351" on="0"/>
        <pt x="221" y="390" on="0"/>
        <pt x="221" y="428" on="1"/>
        <pt x="221" y="442" on="0"/>
        <pt x="222" y="448" on="1"/>
        <pt x="231" y="491" on="0"/>
        <pt x="267" y="539" on="1"/>
        <pt x="308" y="592" on="0"/>
        <pt x="361" y="630" on="1"/>
        <pt x="465" y="707" on="0"/>
        <pt x="566" y="716" on="1"/>
        <pt x="568" y="717" on="0"/>
        <pt x="583" y="717" on="1"/>
        <pt x="587" y="717" on="1"/>
        <pt x="632" y="717" on="0"/>
        <pt x="689" y="680" on="0"/>
        <pt x="689" y="646" on="1"/>
        <pt x="689" y="621" on="0"/>
        <pt x="669" y="592" on="1"/>
        <pt x="658" y="575" on="0"/>
        <pt x="658" y="564" on="1"/>
        <pt x="658" y="547" on="0"/>
        <pt x="685" y="533" on="0"/>
        <pt x="710" y="528" on="1"/>
        <pt x="718" y="539" on="1"/>
        <pt x="779" y="613" on="0"/>
        <pt x="821" y="646" on="1"/>
        <pt x="877" y="693" on="0"/>
        <pt x="933" y="705" on="1"/>
        <pt x="944" y="707" on="0"/>
        <pt x="964" y="707" on="1"/>
        <pt x="1010" y="707" on="0"/>
        <pt x="1025" y="675" on="1"/>
        <pt x="1032" y="661" on="0"/>
        <pt x="1032" y="645" on="1"/>
        <pt x="1032" y="626" on="0"/>
        <pt x="1022" y="607" on="1"/>
        <pt x="1008" y="579" on="0"/>
        <pt x="952" y="541" on="0"/>
        <pt x="897" y="522" on="1"/>
        <pt x="840" y="504" on="0"/>
        <pt x="789" y="496" on="1"/>
        <pt x="773" y="494" on="0"/>
        <pt x="771" y="493" on="1"/>
        <pt x="768" y="493" on="0"/>
        <pt x="749" y="454" on="1"/>
        <pt x="720" y="398" on="0"/>
        <pt x="702" y="370" on="1"/>
        <pt x="700" y="367" on="0"/>
        <pt x="698" y="363" on="1"/>
        <pt x="696" y="360" on="0"/>
        <pt x="696" y="359" on="1"/>
        <pt x="805" y="359" on="1"/>
        <pt x="806" y="358" on="0"/>
        <pt x="808" y="354" on="0"/>
        <pt x="809" y="353" on="0"/>
        <pt x="810" y="350" on="0"/>
        <pt x="809" y="348" on="0"/>
        <pt x="807" y="343" on="0"/>
        <pt x="804" y="338" on="0"/>
        <pt x="802" y="335" on="1"/>
        <pt x="792" y="323" on="0"/>
        <pt x="791" y="322" on="1"/>
        <pt x="789" y="321" on="0"/>
        <pt x="728" y="321" on="1"/>
        <pt x="668" y="321" on="1"/>
        <pt x="563" y="180" on="0"/>
        <pt x="433" y="88" on="1"/>
        <pt x="419" y="78" on="1"/>
        <pt x="434" y="73" on="1"/>
        <pt x="504" y="54" on="0"/>
        <pt x="554" y="54" on="1"/>
        <pt x="597" y="54" on="0"/>
        <pt x="686" y="98" on="0"/>
        <pt x="708" y="126" on="1"/>
        <pt x="710" y="128" on="0"/>
        <pt x="714" y="133" on="0"/>
        <pt x="717" y="137" on="0"/>
        <pt x="718" y="137" on="1"/>
        <pt x="720" y="140" on="1"/>
        <pt x="752" y="140" on="1"/>
        <pt x="758" y="134" on="0"/>
        <pt x="758" y="132" on="1"/>
        <pt x="758" y="128" on="0"/>
        <pt x="747" y="113" on="1"/>
        <pt x="711" y="67" on="0"/>
        <pt x="603" y="-3" on="0"/>
        <pt x="552" y="-14" on="1"/>
        <pt x="540" y="-16" on="0"/>
        <pt x="517" y="-16" on="1"/>
        <pt x="493" y="-16" on="0"/>
        <pt x="480" y="-14" on="1"/>
        <pt x="434" y="-6" on="0"/>
        <pt x="375" y="27" on="1"/>
        <pt x="354" y="38" on="1"/>
        <pt x="338" y="30" on="1"/>
        <pt x="255" y="-8" on="0"/>
        <pt x="184" y="-8" on="1"/>
        <pt x="97" y="-8" on="0"/>
        <pt x="84" y="17" on="1"/>
        <pt x="83" y="19" on="0"/>
        <pt x="83" y="29" on="1"/>
        <pt x="83" y="48" on="0"/>
        <pt x="104" y="69" on="1"/>
        <pt x="143" y="112" on="0"/>
        <pt x="241" y="112" on="1"/>
        <pt x="286" y="112" on="0"/>
        <pt x="342" y="99" on="1"/>
        <pt x="360" y="95" on="1"/>
        <pt x="372" y="105" on="1"/>
        <pt x="434" y="157" on="0"/>
        <pt x="523" y="270" on="1"/>
        <pt x="560" y="320" on="1"/>
        <pt x="560" y="321" on="0"/>
        <pt x="533" y="321" on="1"/>
        <pt x="507" y="322" on="1"/>
        <pt x="498" y="327" on="0"/>
        <pt x="510" y="345" on="1"/>
        <pt x="512" y="348" on="0"/>
        <pt x="517" y="354" on="0"/>
        <pt x="519" y="356" on="0"/>
        <pt x="522" y="359" on="0"/>
        <pt x="526" y="359" on="0"/>
        <pt x="530" y="359" on="1"/>
        <pt x="556" y="359" on="1"/>
        <pt x="588" y="359" on="1"/>
        <pt x="602" y="379" on="1"/>
        <pt x="645" y="440" on="0"/>
        <pt x="669" y="474" on="1"/>
        <pt x="682" y="491" on="1"/>
        <pt x="621" y="504" on="0"/>
        <pt x="596" y="521" on="1"/>
        <pt x="556" y="547" on="0"/>
        <pt x="556" y="570" on="1"/>
        <pt x="556" y="586" on="0"/>
        <pt x="574" y="610" on="1"/>
        <pt x="603" y="651" on="0"/>
        <pt x="603" y="663" on="1"/>
        <pt x="603" y="679" on="0"/>
        <pt x="568" y="679" on="1"/>
        <pt x="539" y="679" on="0"/>
        <pt x="515" y="673" on="1"/>
        <pt x="420" y="650" on="0"/>
        <pt x="342" y="569" on="1"/>
        <pt x="310" y="537" on="0"/>
        <pt x="267" y="467" on="0"/>
        <pt x="263" y="442" on="1"/>
        <pt x="262" y="438" on="0"/>
        <pt x="262" y="431" on="1"/>
        <pt x="262" y="387" on="0"/>
        <pt x="321" y="387" on="1"/>
        <pt x="334" y="387" on="0"/>
        <pt x="343" y="391" on="1"/>
        <pt x="363" y="397" on="0"/>
        <pt x="392" y="423" on="0"/>
        <pt x="414" y="454" on="1"/>
        <pt x="457" y="514" on="0"/>
        <pt x="460" y="562" on="1"/>
        <pt x="460" y="575" on="0"/>
        <pt x="461" y="576" on="1"/>
        <pt x="461" y="577" on="0"/>
        <pt x="490" y="595" on="0"/>
        <pt x="492" y="595" on="1"/>
        <pt x="496" y="595" on="0"/>
        <pt x="510" y="580" on="0"/>
        <pt x="514" y="572" on="1"/>
        <pt x="520" y="559" on="0"/>
        <pt x="520" y="539" on="1"/>
        <pt x="520" y="521" on="0"/>
        <pt x="510" y="490" on="0"/>
        <pt x="504" y="478" on="0"/>
        <pt x="491" y="457" on="1"/>
        <pt x="476" y="436" on="0"/>
        <pt x="460" y="420" on="1"/>
        <pt x="406" y="367" on="0"/>
        <pt x="337" y="353" on="1"/>
        <pt x="329" y="351" on="0"/>
      </contour>
      <contour>
        <pt x="989" y="642" on="1"/>
        <pt x="989" y="668" on="0"/>
        <pt x="953" y="671" on="1"/>
        <pt x="904" y="671" on="0"/>
        <pt x="871" y="644" on="1"/>
        <pt x="847" y="627" on="0"/>
        <pt x="813" y="577" on="1"/>
        <pt x="787" y="532" on="0"/>
        <pt x="787" y="531" on="1"/>
        <pt x="788" y="531" on="1"/>
        <pt x="805" y="531" on="0"/>
        <pt x="835" y="538" on="1"/>
        <pt x="880" y="547" on="0"/>
        <pt x="916" y="561" on="1"/>
        <pt x="967" y="582" on="0"/>
        <pt x="984" y="620" on="1"/>
        <pt x="989" y="633" on="0"/>
      </contour>
      <contour>
        <pt x="130" y="40" on="1"/>
        <pt x="130" y="29" on="0"/>
        <pt x="198" y="29" on="1"/>
        <pt x="248" y="29" on="0"/>
        <pt x="293" y="51" on="1"/>
        <pt x="306" y="58" on="0"/>
        <pt x="306" y="60" on="0"/>
        <pt x="297" y="63" on="1"/>
        <pt x="270" y="74" on="0"/>
        <pt x="209" y="74" on="1"/>
        <pt x="146" y="74" on="0"/>
        <pt x="132" y="44" on="1"/>
        <pt x="130" y="40" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 22 values pushed */
          149 130 24 3 13 15 109 69 2 17 9 95 1 16 5 3 74 102 1 16 1 73
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          26
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 81 values pushed */
          0 6 4 9 4 6 9 112 0 13 18 1 0 4 13 0 99 11 1 3 10 1 4 6 3
          4 100 0 9 0 17 5 9 17 99 0 12 12 1 91 0 1 1 15 75 0 14 14 2 91
          0 2 2 15 75 0 15 15 17 75 0 16 16 8 91 0 8 8 16 75 0 5 5 7 91
          0 7 7 16 7 76
          ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          50
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 79 values pushed */
          0 6 4 9 4 6 9 112 0 2 0 14 15 2 14 99 0 13 18 1 0 4 13 0 99
          11 1 3 10 1 4 6 3 4 100 0 9 0 17 5 9 17 99 0 12 12 1 91 0 1
          1 15 75 0 15 15 17 75 0 16 16 8 91 0 8 8 16 75 0 5 5 7 91 0 7
          7 16 7 76
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 77 values pushed */
          0 6 4 9 4 6 9 112 0 1 0 12 14 1 12 99 0 2 0 14 15 2 14 99 0
          13 18 1 0 4 13 0 99 11 1 3 10 1 4 6 3 4 100 0 9 0 17 5 9 17
          99 0 15 15 17 75 0 16 16 8 91 0 8 8 16 75 0 5 5 7 91 0 7 7 16
          7 76
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 43 values pushed */
          1 0 205 203 198 196 188 185 181 180 152 150 141 139 126 122 116 113 107 105 99 97 91 89 81
          80 73 71 66 62 53 50 32 30 15 11 0 177 1 177 19 6 20
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="nonmarkingreturn"/><!-- contains no outline data -->

    <TTGlyph name="space"/><!-- contains no outline data -->

    <TTGlyph name="uni00A0"/><!-- contains no outline data -->

    <TTGlyph name="uniEFFD" xMin="0" yMin="0" xMax="300" yMax="100">
      <contour>
        <pt x="0" y="0" on="1"/>
        <pt x="0" y="100" on="1"/>
        <pt x="100" y="100" on="1"/>
        <pt x="100" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="200" y="0" on="1"/>
        <pt x="200" y="100" on="1"/>
        <pt x="300" y="100" on="1"/>
        <pt x="300" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 6 values pushed */
          5 4 1 0 2 48
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="uniEFFE" xMin="0" yMin="0" xMax="300" yMax="100">
      <contour>
        <pt x="0" y="0" on="1"/>
        <pt x="0" y="100" on="1"/>
        <pt x="100" y="100" on="1"/>
        <pt x="100" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="200" y="0" on="1"/>
        <pt x="200" y="100" on="1"/>
        <pt x="300" y="100" on="1"/>
        <pt x="300" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 6 values pushed */
          5 4 1 0 2 48
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="uniEFFF" xMin="0" yMin="0" xMax="100" yMax="100">
      <contour>
        <pt x="0" y="0" on="1"/>
        <pt x="0" y="100" on="1"/>
        <pt x="100" y="100" on="1"/>
        <pt x="100" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 4 values pushed */
          1 0 1 48
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

  </glyf>

  <name>
    <namerecord nameID="0" platformID="1" platEncID="0" langID="0x0" unicode="True">
      Copyright (c) 2009-2010 Design Science, Inc.
Copyright (c) 2014 Khan Academy
    </namerecord>
    <namerecord nameID="1" platformID="1" platEncID="0" langID="0x0" unicode="True">
      KaTeX_Script
    </namerecord>
    <namerecord nameID="2" platformID="1" platEncID="0" langID="0x0" unicode="True">
      Regular
    </namerecord>
    <namerecord nameID="3" platformID="1" platEncID="0" langID="0x0" unicode="True">
      FontForge 2.0 : KaTeX_Script-Regular
    </namerecord>
    <namerecord nameID="4" platformID="1" platEncID="0" langID="0x0" unicode="True">
      KaTeX_Script-Regular
    </namerecord>
    <namerecord nameID="5" platformID="1" platEncID="0" langID="0x0" unicode="True">
      Version 1.1; ttfautohint (v1.3)
    </namerecord>
    <namerecord nameID="6" platformID="1" platEncID="0" langID="0x0" unicode="True">
      KaTeX_Script-Regular
    </namerecord>
    <namerecord nameID="13" platformID="1" platEncID="0" langID="0x0" unicode="True">
      Copyright (c) 2009-2010, Design Science, Inc. (&lt;www.mathjax.org&gt;)
Copyright (c) 2014 Khan Academy (&lt;www.khanacademy.org&gt;),
with Reserved Font Name KaTeX_Script.

This Font Software is licensed under the SIL Open Font License, Version 1.1.
This license available with a FAQ at:
http://scripts.sil.org/OFL
    </namerecord>
    <namerecord nameID="14" platformID="1" platEncID="0" langID="0x0" unicode="True">
      http://scripts.sil.org/OFL
    </namerecord>
    <namerecord nameID="16" platformID="1" platEncID="0" langID="0x0" unicode="True">
      KaTeX_Script
    </namerecord>
    <namerecord nameID="17" platformID="1" platEncID="0" langID="0x0" unicode="True">
      Regular
    </namerecord>
    <namerecord nameID="0" platformID="3" platEncID="1" langID="0x409">
      Copyright (c) 2009-2010 Design Science, Inc.
Copyright (c) 2014 Khan Academy
    </namerecord>
    <namerecord nameID="1" platformID="3" platEncID="1" langID="0x409">
      KaTeX_Script
    </namerecord>
    <namerecord nameID="2" platformID="3" platEncID="1" langID="0x409">
      Regular
    </namerecord>
    <namerecord nameID="3" platformID="3" platEncID="1" langID="0x409">
      FontForge 2.0 : KaTeX_Script-Regular
    </namerecord>
    <namerecord nameID="4" platformID="3" platEncID="1" langID="0x409">
      KaTeX_Script-Regular
    </namerecord>
    <namerecord nameID="5" platformID="3" platEncID="1" langID="0x409">
      Version 1.1; ttfautohint (v1.3)
    </namerecord>
    <namerecord nameID="6" platformID="3" platEncID="1" langID="0x409">
      KaTeX_Script-Regular
    </namerecord>
    <namerecord nameID="13" platformID="3" platEncID="1" langID="0x409">
      Copyright (c) 2009-2010, Design Science, Inc. (&lt;www.mathjax.org&gt;)
Copyright (c) 2014 Khan Academy (&lt;www.khanacademy.org&gt;),
with Reserved Font Name KaTeX_Script.

This Font Software is licensed under the SIL Open Font License, Version 1.1.
This license available with a FAQ at:
http://scripts.sil.org/OFL
    </namerecord>
    <namerecord nameID="14" platformID="3" platEncID="1" langID="0x409">
      http://scripts.sil.org/OFL
    </namerecord>
    <namerecord nameID="16" platformID="3" platEncID="1" langID="0x409">
      KaTeX_Script
    </namerecord>
    <namerecord nameID="17" platformID="3" platEncID="1" langID="0x409">
      Regular
    </namerecord>
  </name>

  <post>
    <formatType value="2.0"/>
    <italicAngle value="0.0"/>
    <underlinePosition value="-125"/>
    <underlineThickness value="50"/>
    <isFixedPitch value="0"/>
    <minMemType42 value="0"/>
    <maxMemType42 value="0"/>
    <minMemType1 value="0"/>
    <maxMemType1 value="0"/>
    <psNames>
      <!-- This file uses unique glyph names based on the information
           found in the 'post' table. Since these names might not be unique,
           we have to invent artificial names in case of clashes. In order to
           be able to retain the original information, we need a name to
           ps name mapping for those cases where they differ. That's what
           you see below.
            -->
    </psNames>
    <extraNames>
      <!-- following are the name that are not taken from the standard Mac glyph order -->
      <psName name="uni00A0"/>
      <psName name="uniEFFD"/>
      <psName name="uniEFFE"/>
      <psName name="uniEFFF"/>
    </extraNames>
  </post>

  <gasp>
    <gaspRange rangeMaxPPEM="65535" rangeGaspBehavior="15"/>
  </gasp>

  <FFTM>
    <!-- FontForge's timestamp, font source creation and modification dates -->
    <version value="1"/>
    <FFTimeStamp value="Tue Jul 31 14:57:19 2012"/>
    <sourceCreated value="Mon Oct 12 19:21:51 2009"/>
    <sourceModified value="Tue Jan 17 04:00:33 2017"/>
  </FFTM>

</ttFont>
